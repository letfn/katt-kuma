apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-patch-ns-job
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-pre-delete-job
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-install-missing-crds
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
  namespace: kuma-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-patch-ns-job
  namespace: kuma-system
rules:
- apiGroups:
  - ""
  resourceNames:
  - kuma-system
  resources:
  - namespaces
  verbs:
  - get
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - configmaps
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - kuma.io
  resources:
  - dataplanes
  - dataplaneinsights
  - meshes
  - zones
  - zoneinsights
  - zoneingresses
  - zoneingressinsights
  - meshinsights
  - serviceinsights
  - proxytemplates
  - ratelimits
  - trafficpermissions
  - trafficroutes
  - timeouts
  - retries
  - circuitbreakers
  - virtualoutbounds
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - kuma.io
  resources:
  - externalservices
  - faultinjections
  - healthchecks
  - trafficlogs
  - traffictraces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  verbs:
  - '*'
- apiGroups:
  - kuma.io
  resources:
  - meshes/finalizers
  verbs:
  - '*'
- apiGroups:
  - kuma.io
  resources:
  - dataplanes/finalizers
  verbs:
  - '*'
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-install-missing-crds
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - list
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-pre-delete-job
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - kuma-validating-webhook-configuration
  resources:
  - validatingwebhookconfigurations
  verbs:
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  name: kuma-control-plane
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuma-control-plane
subjects:
- kind: ServiceAccount
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-patch-ns-job
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-patch-ns-job
subjects:
- kind: ServiceAccount
  name: kuma-patch-ns-job
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-control-plane
subjects:
- kind: ServiceAccount
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-install-missing-crds
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-install-missing-crds
subjects:
- kind: ServiceAccount
  name: kuma-install-missing-crds
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-pre-delete-job
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-pre-delete-job
subjects:
- kind: ServiceAccount
  name: kuma-pre-delete-job
  namespace: kuma-system
---
apiVersion: v1
data:
  config.yaml: |
    # use this file to override default configuration of `kuma-cp`
    #
    # see conf/kuma-cp.conf.yml for available settings
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane-config
  namespace: kuma-system
---
apiVersion: v1
data:
  install_missing_crds.sh: |
    #!/usr/bin/env sh

    if [ -s /kuma/missing/crds.yaml ]; then
      echo "/kuma/missing/crds.yaml found and is not empty, adding crds"
      kubectl create -f /kuma/missing/crds.yaml
    else
      echo "/kuma/missing/crds.yaml not found or empty, it looks like there is no missing crds"
    fi
  save_missing_crds.sh: |
    #!/usr/bin/env sh

    missing_crds="$(kumactl install crds --only-missing)"

    if [ -n "${missing_crds}" ]; then
      echo "found missing crds - saving to /kuma/missing/crds.yaml"
      echo "${missing_crds}" > /kuma/missing/crds.yaml
    fi
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-install-missing-crds-scripts
  namespace: kuma-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRSnFONWhtejYwaUtwVnhpM0JiSzd3VEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEF3TnpBek1UZ3hNVm9YRFRNeE1UQXdOVEF6TVRneApNVm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUs1UW5pWEJQLy9vSXFCd0d2a1ltaFFsSERFQUxIbGIrVjRuanBmbkFkVHlKMmtUcS9TVkxTR2IKSm9JRXZvY3FqYjN3cmh2ZlhDdkFUN1RCQXJjSkxGSFFzUXUwMTJmREFZK0RtVEVSdUpSRk0yb1MzTHNDNVhKWAo0MVNScVV3ZEl3S0VULzlnb1JnRWs4ZExwaVdMYTZINUdMVEIxRWJQVXlZT081L1VuT0JjSDBjVERqcDJxQllyClpKQS80U3ZrbWVnWWdzR3k2N1hWM3JaelhUUGxOK2hQZmluWmNNZk1TY2lqeXo2OTh2L0c2ZHV6MW1ncFd3aGsKZ2VRNEhGWkpVS0RhdmtMQkVVS1ROSzVnMm81b3ZuSE9IT2wycE5ZK2NhSDdvUmhIeVYyVjVtZkRRdnE4S1ZYawp5QVJWK01TbGQrY3Bob2Ird2phcWZZU2Nob0ltTTQwQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVVlIYlNUVFBIeHVWY2JsQ25hcVFhVlY3aFZUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBaHcrM05JbG5JTnF1cVJacXdIbW5IZ0dQaTEzT2MwbXFpZFdqWitncW9SM3NGa1hTRWtBYzBGTmh2YTJKClB5bHcyMjVHbzNYbHJzc2Q0RUxyT095RGpzaE1pUi96ZkNueEFva09sbGhsSC9uTktwZ2hyc0ZoWFFSV253UlYKMk80aWx5TFNnVndtYm1hV2VISXNCR1FNR3ltL2UyVnhOb05FWVg3VHVaR3phZlRpWXFhNTgrLytSNzJiOVJCYgpneGU2VklrRmkxRzN5eGZnSnYzQ1dJWWVuemFiSzZtbStkMWpzY1lJV0JMSDBWVlFnNGtvejRhL2V3UWxIeXQxCk5kWE5jcGNBTDdCYW0xQkU0bHR6VUtlMjRzWG9qMk5jUGF1ak9Xbk1xTU5yTUY1UlBFMmxvazNuVmxSTVIwL08Ka2J1WGVhTmVNQnZ3RVN2elJOREN1akNQcUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhakNDQWxLZ0F3SUJBZ0lRZkluUXNSK1k5eWwxOVpWR2c3RHVlVEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEF3TnpBek1UZ3hNVm9YRFRNeE1UQXdOVEF6TVRneApNVm93SFRFYk1Ca0dBMVVFQXhNU2EzVnRZUzFqYjI1MGNtOXNMWEJzWVc1bE1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVrT2c2VTgrVzltSEhqVk14M1YzWUJ1cWNRMG0raEl3M1B5VUpYSVkKK1RwY3h4QXpwY0NCUDdKMGVBY3RUbzN0bXliMWdZdmhNRG5BMTB3ajdnWFY2QmNIZlM0dDdnelMxWTlqaXFIVAp3SE9YT3VFTUhHV0YrVDBZQVU2MjNWUFhLNFFFWlBBam83bndHbDlVWUpyZFE0NVQ3ei9xTG42c1JNd2kvb0VQClRpV2VsU3laWitBaUZEMVVaNUVuMkxVZU40aVdNMVZtSnlnMVJ2dVJKSGE1Z2QwTHA2WGpaZGplZlN3M25QbGwKUDM5bDROMlRMMVo4aUhSN0Faa3VIdU9xTUlYOEV2ZmR3TFB5UG84SnlxSjdvbzN4MkVSODN6cjV3TEVXN2dReApMaWpFYlFVaU91N2RoTUpMSzJOWHh4aCs4QjVVVjJkY2FzVTV5RVB0SDJoL1B3SURBUUFCbzRHd01JR3RNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCU1VZSGJTVFRQSHh1VmNibENuYXFRYVZWN2hWVEJOQmdOVgpIUkVFUmpCRWdoNXJkVzFoTFdOdmJuUnliMnd0Y0d4aGJtVXVhM1Z0WVMxemVYTjBaVzJDSW10MWJXRXRZMjl1CmRISnZiQzF3YkdGdVpTNXJkVzFoTFhONWMzUmxiUzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFLb0oKYmI0dDVZM3hhNFdWdE9IbUpxTTBscVgxYWtJeFJSSzlyVnpZMmJGdHdidGc3WEpzRjl0NG10QkRsMC9ydDQySwpOTCt6MUp3bkRGZGZHbWVBM3BXU203SjVPY2s4UGN6VUxDOUsySHpFM1VmQy9ocEtwNU9wL2lGU2pBWm5OeHAvCjVDSnU2THJkazI2ZjQ0cHBPSWZNc1hNbWhKOVZRb29VS2UxMmN6MEFiN3RVMXRwYjU2TEJQSFBCSlFVaHNxTCsKS3lsQ1ZBY2hsQXFQeVhmRW9QUTRYeUtFaDhjanhBVDY4S3VJRVpZT0MrRWMrTEsxdmFSTWxUNFFCVjhmS0wxdQpVZmVnT0hyNkR0d1ppb2hUOUtUZG02UHY0clBjajhWank0ZW9XT2JNN21DdFBkWkFJSDJRcitKcVFTWEZZRUVEClk0MWd2L0Jyd0U0SlltV1ZBSkE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWtPZzZVOCtXOW1ISGpWTXgzVjNZQnVxY1EwbStoSXczUHlVSlhJWStUcGN4eEF6CnBjQ0JQN0owZUFjdFRvM3RteWIxZ1l2aE1EbkExMHdqN2dYVjZCY0hmUzR0N2d6UzFZOWppcUhUd0hPWE91RU0KSEdXRitUMFlBVTYyM1ZQWEs0UUVaUEFqbzdud0dsOVVZSnJkUTQ1VDd6L3FMbjZzUk13aS9vRVBUaVdlbFN5WgpaK0FpRkQxVVo1RW4yTFVlTjRpV00xVm1KeWcxUnZ1UkpIYTVnZDBMcDZYalpkamVmU3czblBsbFAzOWw0TjJUCkwxWjhpSFI3QVprdUh1T3FNSVg4RXZmZHdMUHlQbzhKeXFKN29vM3gyRVI4M3pyNXdMRVc3Z1F4TGlqRWJRVWkKT3U3ZGhNSkxLMk5YeHhoKzhCNVVWMmRjYXNVNXlFUHRIMmgvUHdJREFRQUJBb0lCQVFDQmswQmliYTBNeW5PegpzUko3Z3gwTGI5T1BGNzR3b3V6NUhvQ1UyQjNGYXpOVmk5RFNFdXdXK3JjSk5Menc4ODBDYlFUSEhSOEhwSFdoCmtLZENFeTh1YUs3ZUIzME9LRCtYTDB2cENoQzd4ZTNEbVFFSzFCbHlQR3p4bytlVWFwbTUvUG50bWh6QTdqMjQKcXU2UTBjcnhEeGNXemRqRWhYeWowM3JZbjhHYzgxLzNoYk9zanFpUUJLSkRQVDNtVjJ1U2JlWFQ2NmVDTTd3RApBQ3hLci9NSjJLUkxqV0dGU2Z0TXc4aVBJeFRiSm90QVJ6cXV1ZGJSZmFzai96VDd3UmpWVDE4d2Jhd0ppOWZjCjdVVEtrVk9ZRTRDUHg1bVp5Z3ltNmNOY0lPRWlHRmdOL2MvenplNm9sWEh6WjczeUFZbkg2cVExZGlsSTU2L3YKOXNFQ3VkVUJBb0dCQU92cmNJbHh5S1lVTW1uUkF3RzRHTjB1S0NjeFZWVVhUOUtYWlNKcitmVG1jYjJiNXl5bwpCR3BCWFpPeXZuck5TMUtNMDlWL0JYbmhXbFFKK20zbnZmZ1kzcXdwSXpGZU9kUU9UV3RWNW9xNkxuN1lkM21FCm5WSzFFQlNNMjVZbllVMmhvRWcwUHNZdTNKMXY5cWVyM2lXY0t3Z3haNTBrOCtSaVBJSFV1N2FCQW9HQkFNb2UKT1A0Wkd4eHdGM3RCNHlaekpVT1hwUnI2YkRldkJEQWlYYURKT3ZvV1BiRTRMZTY4MG14MVJEZzJHcDRYRDlEMgp3YkFMVUFILzRXVjdoM1FuSk1XQWJPVWdMNlcyY09EemQwNlRiUVR3dGZhNUtWTHNpZHkrUmJ2TnEzK3JiZWhECmNOdHVtNk5oUXZ1RGtSeURnK2lVTTd4ellvVGFOd0lFQUdVTGd0Vy9Bb0dCQU5LZDRsNFNJdHVCOUcvYmxSK1gKeHpyTzFqSUhMUE5HV0pEZGNBQ0cvU1BTQjRFTENoc245S2tYcWY4TitGZVJwOGtPeUo4MVF5SklPV2dGY0hsbQpCb2JUVFJmTnNnbUU0WU9iTVNxK0NZK1lINkpHaG9NS0RabWs0N0kwL21UU3kxK1BCNVR1YjR4bWtiWk1HcHdlCko3alQ3dWJsbEdjS2NtSldBVWEzTU00QkFvR0FBWHlMYXNNQWdnc0pBUzBRNEoyRUxxVVUzOGZydDlVZnNNTHYKOFZqSmlFRlZudElNOUc2TEZhVWZKVkt3aTIwYi9xdHg3VHVJRVJ1eXFxNW41cURMRW5ESlhENEtXNnVsMU9HMQpoT3hzcHRhbVgvUW9xNlYxdGh2b0kyTjEyWENIVkdmNmtvS1R2blhlcWo3amVGUTNTaVNjNU12c2M1R3ZTZUtCCnBqeVpiNzBDZ1lBNUE1RzF3b3lXdUlLazREZEdJRFZORno5cnVyM3JTV0tyY0MrRnVCNGtVcHdTa2lpYVRiRFgKNzFia0ZNWTZrWUlNc2VJT24wWVl0Z0l0aFF6R3NjVG5lVThpNy9maFdBU1cxTENIK2hyMzRqMlRKbkYydmFZawo4NXYwY2FjZHJyRXNBTDVmMjFDNFpxcGdKeXJQZmJqdE5TYmlGcHQzeFlzVU4vS2M1U3ovbHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-tls-cert
  namespace: kuma-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    prometheus.io/port: "5680"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
  namespace: kuma-system
spec:
  ports:
  - name: http-api-server
    port: 5681
  - name: https-api-server
    port: 5682
  - name: https-admission-server
    port: 443
    targetPort: 5443
  selector:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/name: kuma
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  name: kuma-global-zone-sync
  namespace: kuma-system
spec:
  ports:
  - name: global-zone-sync
    port: 5685
  selector:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/name: kuma
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
  namespace: kuma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-control-plane
      app.kubernetes.io/instance: kuma
      app.kubernetes.io/name: kuma
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: "1"
        checksum/config: 003c3e67518c0669b2aa9b652d392cb44ea07d671f5180cc1596fbeb44a7110d
        checksum/tls-secrets: 5132427bc41d0c7f7e6a3da7515629d10930cb5c3098b56a47a28480d48e82c5
      labels:
        app: kuma-control-plane
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/name: kuma
    spec:
      containers:
      - args:
        - run
        - --log-level=info
        - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
        env:
        - name: KUMA_API_SERVER_READ_ONLY
          value: "true"
        - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
          value: "false"
        - name: KUMA_DP_SERVER_HDS_ENABLED
          value: "false"
        - name: KUMA_ENVIRONMENT
          value: kubernetes
        - name: KUMA_GENERAL_TLS_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/tls.crt
        - name: KUMA_GENERAL_TLS_KEY_FILE
          value: /var/run/secrets/kuma.io/tls-cert/tls.key
        - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
          value: docker.io/kumahq/kuma-init:1.3.1
        - name: KUMA_MODE
          value: global
        - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
          value: /var/run/secrets/kuma.io/tls-cert
        - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
          value: "5443"
        - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
          value: kuma-control-plane
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/ca.crt
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
          value: "false"
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
          value: docker.io/kumahq/kuma-dp:1.3.1
        - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
          value: kuma-system
        - name: KUMA_STORE_TYPE
          value: kubernetes
        image: docker.io/kumahq/kuma-cp:1.3.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthy
            port: 5680
        name: control-plane
        ports:
        - containerPort: 5681
        - containerPort: 5682
        - containerPort: 5443
        readinessProbe:
          httpGet:
            path: /ready
            port: 5680
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/run/secrets/kuma.io/tls-cert
          name: general-tls-cert
          readOnly: true
        - mountPath: /etc/kuma.io/kuma-control-plane
          name: kuma-control-plane-config
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      serviceAccountName: kuma-control-plane
      volumes:
      - name: general-tls-cert
        secret:
          secretName: kuma-tls-cert
      - configMap:
          name: kuma-control-plane-config
        name: kuma-control-plane-config
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "5"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-delete-webhook
  namespace: kuma-system
spec:
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: "1"
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.3.1
        helm.sh/chart: kuma-0.7.1
      name: kuma-delete-webhook
    spec:
      containers:
      - command:
        - kubectl
        - delete
        - ValidatingWebhookConfiguration
        - kuma-validating-webhook-configuration
        image: bitnami/kubectl:1.20
        name: pre-delete-job
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-pre-delete-job
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-install-missing-crds
  namespace: kuma-system
spec:
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: "1"
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.3.1
        helm.sh/chart: kuma-0.7.1
      name: kuma-install-missing-crds-job
    spec:
      containers:
      - command:
        - /kuma/scripts/install_missing_crds.sh
        image: bitnami/kubectl:1.20
        name: pre-upgrade-job
        volumeMounts:
        - mountPath: /kuma/missing
          name: missing-crds
          readOnly: true
        - mountPath: /kuma/scripts
          name: scripts
          readOnly: true
      initContainers:
      - command:
        - /kuma/scripts/save_missing_crds.sh
        image: docker.io/kumahq/kumactl:1.3.1
        name: pre-upgrade-job-init
        volumeMounts:
        - mountPath: /kuma/missing
          name: missing-crds
        - mountPath: /kuma/scripts
          name: scripts
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-install-missing-crds
      volumes:
      - configMap:
          defaultMode: 493
          name: kuma-install-missing-crds-scripts
        name: scripts
      - emptyDir: {}
        name: missing-crds
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "5"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-patch-ns
  namespace: kuma-system
spec:
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-wave: "1"
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.3.1
        helm.sh/chart: kuma-0.7.1
      name: kuma-patch-ns-script
    spec:
      containers:
      - command:
        - kubectl
        - patch
        - namespace
        - kuma-system
        - --type
        - merge
        - --patch
        - '{ "metadata": { "labels": { "kuma.io/system-namespace": "true" } } }'
        image: bitnami/kubectl:1.20
        name: pre-install-job
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-patch-ns-job
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-admission-mutating-webhook-configuration
  namespace: kuma-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRSnFONWhtejYwaUtwVnhpM0JiSzd3VEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEF3TnpBek1UZ3hNVm9YRFRNeE1UQXdOVEF6TVRneApNVm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUs1UW5pWEJQLy9vSXFCd0d2a1ltaFFsSERFQUxIbGIrVjRuanBmbkFkVHlKMmtUcS9TVkxTR2IKSm9JRXZvY3FqYjN3cmh2ZlhDdkFUN1RCQXJjSkxGSFFzUXUwMTJmREFZK0RtVEVSdUpSRk0yb1MzTHNDNVhKWAo0MVNScVV3ZEl3S0VULzlnb1JnRWs4ZExwaVdMYTZINUdMVEIxRWJQVXlZT081L1VuT0JjSDBjVERqcDJxQllyClpKQS80U3ZrbWVnWWdzR3k2N1hWM3JaelhUUGxOK2hQZmluWmNNZk1TY2lqeXo2OTh2L0c2ZHV6MW1ncFd3aGsKZ2VRNEhGWkpVS0RhdmtMQkVVS1ROSzVnMm81b3ZuSE9IT2wycE5ZK2NhSDdvUmhIeVYyVjVtZkRRdnE4S1ZYawp5QVJWK01TbGQrY3Bob2Ird2phcWZZU2Nob0ltTTQwQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVVlIYlNUVFBIeHVWY2JsQ25hcVFhVlY3aFZUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBaHcrM05JbG5JTnF1cVJacXdIbW5IZ0dQaTEzT2MwbXFpZFdqWitncW9SM3NGa1hTRWtBYzBGTmh2YTJKClB5bHcyMjVHbzNYbHJzc2Q0RUxyT095RGpzaE1pUi96ZkNueEFva09sbGhsSC9uTktwZ2hyc0ZoWFFSV253UlYKMk80aWx5TFNnVndtYm1hV2VISXNCR1FNR3ltL2UyVnhOb05FWVg3VHVaR3phZlRpWXFhNTgrLytSNzJiOVJCYgpneGU2VklrRmkxRzN5eGZnSnYzQ1dJWWVuemFiSzZtbStkMWpzY1lJV0JMSDBWVlFnNGtvejRhL2V3UWxIeXQxCk5kWE5jcGNBTDdCYW0xQkU0bHR6VUtlMjRzWG9qMk5jUGF1ak9Xbk1xTU5yTUY1UlBFMmxvazNuVmxSTVIwL08Ka2J1WGVhTmVNQnZ3RVN2elJOREN1akNQcUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /default-kuma-io-v1alpha1-mesh
  failurePolicy: Fail
  name: mesh.defaulter.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - meshes
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRSnFONWhtejYwaUtwVnhpM0JiSzd3VEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEF3TnpBek1UZ3hNVm9YRFRNeE1UQXdOVEF6TVRneApNVm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUs1UW5pWEJQLy9vSXFCd0d2a1ltaFFsSERFQUxIbGIrVjRuanBmbkFkVHlKMmtUcS9TVkxTR2IKSm9JRXZvY3FqYjN3cmh2ZlhDdkFUN1RCQXJjSkxGSFFzUXUwMTJmREFZK0RtVEVSdUpSRk0yb1MzTHNDNVhKWAo0MVNScVV3ZEl3S0VULzlnb1JnRWs4ZExwaVdMYTZINUdMVEIxRWJQVXlZT081L1VuT0JjSDBjVERqcDJxQllyClpKQS80U3ZrbWVnWWdzR3k2N1hWM3JaelhUUGxOK2hQZmluWmNNZk1TY2lqeXo2OTh2L0c2ZHV6MW1ncFd3aGsKZ2VRNEhGWkpVS0RhdmtMQkVVS1ROSzVnMm81b3ZuSE9IT2wycE5ZK2NhSDdvUmhIeVYyVjVtZkRRdnE4S1ZYawp5QVJWK01TbGQrY3Bob2Ird2phcWZZU2Nob0ltTTQwQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVVlIYlNUVFBIeHVWY2JsQ25hcVFhVlY3aFZUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBaHcrM05JbG5JTnF1cVJacXdIbW5IZ0dQaTEzT2MwbXFpZFdqWitncW9SM3NGa1hTRWtBYzBGTmh2YTJKClB5bHcyMjVHbzNYbHJzc2Q0RUxyT095RGpzaE1pUi96ZkNueEFva09sbGhsSC9uTktwZ2hyc0ZoWFFSV253UlYKMk80aWx5TFNnVndtYm1hV2VISXNCR1FNR3ltL2UyVnhOb05FWVg3VHVaR3phZlRpWXFhNTgrLytSNzJiOVJCYgpneGU2VklrRmkxRzN5eGZnSnYzQ1dJWWVuemFiSzZtbStkMWpzY1lJV0JMSDBWVlFnNGtvejRhL2V3UWxIeXQxCk5kWE5jcGNBTDdCYW0xQkU0bHR6VUtlMjRzWG9qMk5jUGF1ak9Xbk1xTU5yTUY1UlBFMmxvazNuVmxSTVIwL08Ka2J1WGVhTmVNQnZ3RVN2elJOREN1akNQcUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /owner-reference-kuma-io-v1alpha1
  failurePolicy: Fail
  name: owner-reference.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - circuitbreakers
    - externalservices
    - faultinjections
    - healthchecks
    - retries
    - proxytemplates
    - ratelimits
    - trafficlogs
    - trafficpermissions
    - trafficroutes
    - traffictraces
    - virtualoutbounds
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRSnFONWhtejYwaUtwVnhpM0JiSzd3VEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEF3TnpBek1UZ3hNVm9YRFRNeE1UQXdOVEF6TVRneApNVm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUs1UW5pWEJQLy9vSXFCd0d2a1ltaFFsSERFQUxIbGIrVjRuanBmbkFkVHlKMmtUcS9TVkxTR2IKSm9JRXZvY3FqYjN3cmh2ZlhDdkFUN1RCQXJjSkxGSFFzUXUwMTJmREFZK0RtVEVSdUpSRk0yb1MzTHNDNVhKWAo0MVNScVV3ZEl3S0VULzlnb1JnRWs4ZExwaVdMYTZINUdMVEIxRWJQVXlZT081L1VuT0JjSDBjVERqcDJxQllyClpKQS80U3ZrbWVnWWdzR3k2N1hWM3JaelhUUGxOK2hQZmluWmNNZk1TY2lqeXo2OTh2L0c2ZHV6MW1ncFd3aGsKZ2VRNEhGWkpVS0RhdmtMQkVVS1ROSzVnMm81b3ZuSE9IT2wycE5ZK2NhSDdvUmhIeVYyVjVtZkRRdnE4S1ZYawp5QVJWK01TbGQrY3Bob2Ird2phcWZZU2Nob0ltTTQwQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVVlIYlNUVFBIeHVWY2JsQ25hcVFhVlY3aFZUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBaHcrM05JbG5JTnF1cVJacXdIbW5IZ0dQaTEzT2MwbXFpZFdqWitncW9SM3NGa1hTRWtBYzBGTmh2YTJKClB5bHcyMjVHbzNYbHJzc2Q0RUxyT095RGpzaE1pUi96ZkNueEFva09sbGhsSC9uTktwZ2hyc0ZoWFFSV253UlYKMk80aWx5TFNnVndtYm1hV2VISXNCR1FNR3ltL2UyVnhOb05FWVg3VHVaR3phZlRpWXFhNTgrLytSNzJiOVJCYgpneGU2VklrRmkxRzN5eGZnSnYzQ1dJWWVuemFiSzZtbStkMWpzY1lJV0JMSDBWVlFnNGtvejRhL2V3UWxIeXQxCk5kWE5jcGNBTDdCYW0xQkU0bHR6VUtlMjRzWG9qMk5jUGF1ak9Xbk1xTU5yTUY1UlBFMmxvazNuVmxSTVIwL08Ka2J1WGVhTmVNQnZ3RVN2elJOREN1akNQcUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /inject-sidecar
  failurePolicy: Ignore
  name: kuma-injector.kuma.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    argocd.argoproj.io/sync-wave: "1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-validating-webhook-configuration
  namespace: kuma-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRSnFONWhtejYwaUtwVnhpM0JiSzd3VEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEF3TnpBek1UZ3hNVm9YRFRNeE1UQXdOVEF6TVRneApNVm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUs1UW5pWEJQLy9vSXFCd0d2a1ltaFFsSERFQUxIbGIrVjRuanBmbkFkVHlKMmtUcS9TVkxTR2IKSm9JRXZvY3FqYjN3cmh2ZlhDdkFUN1RCQXJjSkxGSFFzUXUwMTJmREFZK0RtVEVSdUpSRk0yb1MzTHNDNVhKWAo0MVNScVV3ZEl3S0VULzlnb1JnRWs4ZExwaVdMYTZINUdMVEIxRWJQVXlZT081L1VuT0JjSDBjVERqcDJxQllyClpKQS80U3ZrbWVnWWdzR3k2N1hWM3JaelhUUGxOK2hQZmluWmNNZk1TY2lqeXo2OTh2L0c2ZHV6MW1ncFd3aGsKZ2VRNEhGWkpVS0RhdmtMQkVVS1ROSzVnMm81b3ZuSE9IT2wycE5ZK2NhSDdvUmhIeVYyVjVtZkRRdnE4S1ZYawp5QVJWK01TbGQrY3Bob2Ird2phcWZZU2Nob0ltTTQwQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVVlIYlNUVFBIeHVWY2JsQ25hcVFhVlY3aFZUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBaHcrM05JbG5JTnF1cVJacXdIbW5IZ0dQaTEzT2MwbXFpZFdqWitncW9SM3NGa1hTRWtBYzBGTmh2YTJKClB5bHcyMjVHbzNYbHJzc2Q0RUxyT095RGpzaE1pUi96ZkNueEFva09sbGhsSC9uTktwZ2hyc0ZoWFFSV253UlYKMk80aWx5TFNnVndtYm1hV2VISXNCR1FNR3ltL2UyVnhOb05FWVg3VHVaR3phZlRpWXFhNTgrLytSNzJiOVJCYgpneGU2VklrRmkxRzN5eGZnSnYzQ1dJWWVuemFiSzZtbStkMWpzY1lJV0JMSDBWVlFnNGtvejRhL2V3UWxIeXQxCk5kWE5jcGNBTDdCYW0xQkU0bHR6VUtlMjRzWG9qMk5jUGF1ak9Xbk1xTU5yTUY1UlBFMmxvazNuVmxSTVIwL08Ka2J1WGVhTmVNQnZ3RVN2elJOREN1akNQcUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-kuma-io-v1alpha1
  failurePolicy: Fail
  name: validator.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - circuitbreakers
    - dataplanes
    - externalservices
    - faultinjections
    - healthchecks
    - retries
    - meshes
    - proxytemplates
    - ratelimits
    - trafficlogs
    - trafficpermissions
    - trafficroutes
    - traffictraces
    - virtualoutbounds
    - zones
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRSnFONWhtejYwaUtwVnhpM0JiSzd3VEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEF3TnpBek1UZ3hNVm9YRFRNeE1UQXdOVEF6TVRneApNVm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUs1UW5pWEJQLy9vSXFCd0d2a1ltaFFsSERFQUxIbGIrVjRuanBmbkFkVHlKMmtUcS9TVkxTR2IKSm9JRXZvY3FqYjN3cmh2ZlhDdkFUN1RCQXJjSkxGSFFzUXUwMTJmREFZK0RtVEVSdUpSRk0yb1MzTHNDNVhKWAo0MVNScVV3ZEl3S0VULzlnb1JnRWs4ZExwaVdMYTZINUdMVEIxRWJQVXlZT081L1VuT0JjSDBjVERqcDJxQllyClpKQS80U3ZrbWVnWWdzR3k2N1hWM3JaelhUUGxOK2hQZmluWmNNZk1TY2lqeXo2OTh2L0c2ZHV6MW1ncFd3aGsKZ2VRNEhGWkpVS0RhdmtMQkVVS1ROSzVnMm81b3ZuSE9IT2wycE5ZK2NhSDdvUmhIeVYyVjVtZkRRdnE4S1ZYawp5QVJWK01TbGQrY3Bob2Ird2phcWZZU2Nob0ltTTQwQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVVlIYlNUVFBIeHVWY2JsQ25hcVFhVlY3aFZUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBaHcrM05JbG5JTnF1cVJacXdIbW5IZ0dQaTEzT2MwbXFpZFdqWitncW9SM3NGa1hTRWtBYzBGTmh2YTJKClB5bHcyMjVHbzNYbHJzc2Q0RUxyT095RGpzaE1pUi96ZkNueEFva09sbGhsSC9uTktwZ2hyc0ZoWFFSV253UlYKMk80aWx5TFNnVndtYm1hV2VISXNCR1FNR3ltL2UyVnhOb05FWVg3VHVaR3phZlRpWXFhNTgrLytSNzJiOVJCYgpneGU2VklrRmkxRzN5eGZnSnYzQ1dJWWVuemFiSzZtbStkMWpzY1lJV0JMSDBWVlFnNGtvejRhL2V3UWxIeXQxCk5kWE5jcGNBTDdCYW0xQkU0bHR6VUtlMjRzWG9qMk5jUGF1ak9Xbk1xTU5yTUY1UlBFMmxvazNuVmxSTVIwL08Ka2J1WGVhTmVNQnZ3RVN2elJOREN1akNQcUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-v1-service
  failurePolicy: Ignore
  name: service.validator.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRSnFONWhtejYwaUtwVnhpM0JiSzd3VEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEF3TnpBek1UZ3hNVm9YRFRNeE1UQXdOVEF6TVRneApNVm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUs1UW5pWEJQLy9vSXFCd0d2a1ltaFFsSERFQUxIbGIrVjRuanBmbkFkVHlKMmtUcS9TVkxTR2IKSm9JRXZvY3FqYjN3cmh2ZlhDdkFUN1RCQXJjSkxGSFFzUXUwMTJmREFZK0RtVEVSdUpSRk0yb1MzTHNDNVhKWAo0MVNScVV3ZEl3S0VULzlnb1JnRWs4ZExwaVdMYTZINUdMVEIxRWJQVXlZT081L1VuT0JjSDBjVERqcDJxQllyClpKQS80U3ZrbWVnWWdzR3k2N1hWM3JaelhUUGxOK2hQZmluWmNNZk1TY2lqeXo2OTh2L0c2ZHV6MW1ncFd3aGsKZ2VRNEhGWkpVS0RhdmtMQkVVS1ROSzVnMm81b3ZuSE9IT2wycE5ZK2NhSDdvUmhIeVYyVjVtZkRRdnE4S1ZYawp5QVJWK01TbGQrY3Bob2Ird2phcWZZU2Nob0ltTTQwQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJTVVlIYlNUVFBIeHVWY2JsQ25hcVFhVlY3aFZUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBaHcrM05JbG5JTnF1cVJacXdIbW5IZ0dQaTEzT2MwbXFpZFdqWitncW9SM3NGa1hTRWtBYzBGTmh2YTJKClB5bHcyMjVHbzNYbHJzc2Q0RUxyT095RGpzaE1pUi96ZkNueEFva09sbGhsSC9uTktwZ2hyc0ZoWFFSV253UlYKMk80aWx5TFNnVndtYm1hV2VISXNCR1FNR3ltL2UyVnhOb05FWVg3VHVaR3phZlRpWXFhNTgrLytSNzJiOVJCYgpneGU2VklrRmkxRzN5eGZnSnYzQ1dJWWVuemFiSzZtbStkMWpzY1lJV0JMSDBWVlFnNGtvejRhL2V3UWxIeXQxCk5kWE5jcGNBTDdCYW0xQkU0bHR6VUtlMjRzWG9qMk5jUGF1ak9Xbk1xTU5yTUY1UlBFMmxvazNuVmxSTVIwL08Ka2J1WGVhTmVNQnZ3RVN2elJOREN1akNQcUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-v1-secret
  failurePolicy: Ignore
  name: secret.validator.kuma-admission.kuma.io
  namespaceSelector:
    matchLabels:
      kuma.io/system-namespace: "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - secrets
  sideEffects: None
