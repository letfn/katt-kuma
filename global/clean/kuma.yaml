---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: kuma-tls-cert
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhekNDQWxPZ0F3SUJBZ0lSQU44bldBWG83MzhYQklwZU52K2VSd1l3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTJNRGRhRncwek1UQTRNall4TmpBMgpNRGRhTUIweEd6QVpCZ05WQkFNVEVtdDFiV0V0WTI5dWRISnZiQzF3YkdGdVpUQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFQd0ZVemJaRGRuMzZWSGNSK0NrTzNqN29kSHFuRkF2eHhNb3hhb0sKUzdodFhSdk1Sak1pK0tPRDFUYVl5V0IwK25ZUkRBRTJrTTdyNEg0UUZZZWR2SUd2QVVrM3J2UVhsTHZsNjczMwo1Z20zT0Y5ZnBnSEpxMXdBYzZvTmRNZG83M2Z6V1hjYmdQT01Bc3V1TmNmd3pRYUN2aHcrTnBRc3lJMmFiNE9pCmZVSHZQNFVMT3o2em5iM1d6Wjk1aTQwRE1wMDcwS2tKSXdKTlp3N3RnU3hYRDcweEY2TU9KWkVmbFQzTlF3cG4Kck9uR040T1J6ZGJReWlCZ2wzTXNuWHd1VG5lMklIaE11cXhWMFRENGRSbXdwYnA4UmNBdUdGdmN6ZkFYWjJuTQpHSEdSd2NUenJKRHM2OExwZnR1QUhRVGNmaWpsOWY4amxpOGdlTno4V2xhV3QzMENBd0VBQWFPQnNEQ0JyVEFPCkJnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0cKQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVBYk5WYnR4ZGRQWHYrekpWZTVxeUxnaElVQnN3VFFZRApWUjBSQkVZd1JJSWVhM1Z0WVMxamIyNTBjbTlzTFhCc1lXNWxMbXQxYldFdGMzbHpkR1Z0Z2lKcmRXMWhMV052CmJuUnliMnd0Y0d4aGJtVXVhM1Z0WVMxemVYTjBaVzB1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQTUKbGlLUVlUQ1VuT0lWbnQrV1lhRFQrSTlrbjB3SDVacGwyVUY1d0czT0EzcW5HSDVGZjExS1RpdUdyNGI1OExSLwpSbkg4TmFNSWVRQlYzYzhIb094NTVNRHp3cC9qdVFJVnVZU25sQjNHZ2VEQ2g1WmZsVzEvcGZ5MWlRWWx4bC9vCjIzNGJmSFphdmdIMDNxaXlpTGJtbG81Z2RSTWVUNGFvTnVvdkxVUDNTWmJpeE40ODdUandVQjQwakdZYjR3OUkKbWkydXlLZDlsNDBFVktPZGswenEvM1pnUUd6aUZ5RmxHeWVSLzhPSUR3a1pmZFB1dVJsQll1TGFWZU9nWDdsdwpGKzNEbTQvbXlQOG0waUlxOWN1dW1Xbm9FSzQ2QnFma0xvMWlVcUh6cjBCV0xEdkQ2SytNT1MxR2Z0cHIvNHpiCnA0Ti9lODJDdzhjdW5tekVSQitOCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBL0FWVE50a04yZmZwVWR4SDRLUTdlUHVoMGVxY1VDL0hFeWpGcWdwTHVHMWRHOHhHCk15TDRvNFBWTnBqSllIVDZkaEVNQVRhUXp1dmdmaEFWaDUyOGdhOEJTVGV1OUJlVXUrWHJ2ZmZtQ2JjNFgxK20KQWNtclhBQnpxZzEweDJqdmQvTlpkeHVBODR3Q3k2NDF4L0ROQm9LK0hENDJsQ3pJalpwdmc2SjlRZTgvaFFzNwpQck9kdmRiTm4zbUxqUU15blR2UXFRa2pBazFuRHUyQkxGY1B2VEVYb3c0bGtSK1ZQYzFEQ21lczZjWTNnNUhOCjF0REtJR0NYY3l5ZGZDNU9kN1lnZUV5NnJGWFJNUGgxR2JDbHVueEZ3QzRZVzl6TjhCZG5hY3dZY1pIQnhQT3MKa096cnd1bCsyNEFkQk54K0tPWDEveU9XTHlCNDNQeGFWcGEzZlFJREFRQUJBb0lCQUF2RFo5M3doYS85M1ZzZgowQThSTzJGclJXTlo4dy9mR3dpdTU0TUhWZjkydzFqUDBSc0Q3OTBhQXpLNE1QWWFuN0l4RzRGVy9hMWEzekNqCktZNFo4N21ONUo1NVJlWkl6MzF4dnU0d0N3RzdGcHVGQ0dlZTlTdW5MYjdyUDk4cTY3cUtsa3R6OGpIc0FCbG4KdVVUcTNYY0hWVDVXUFEvdmd6RHcyM0dtZlBnOXpkL2t6OFMzekg5cXVMVFg1dHE3UkpKVTdLZXJxSUZhYkljcApubnJ0VnlhNGFTTnJ5UWx0dTlPNDNUU2pFWW9wZzM0TWhGVElaeFU4SlliTnlackd5bHFDSjFsRlY2OEZuN0hiCnZYcXBka0h2Q2t0dUhhK0E3Q0cveldpUCtBMjkrVnRuQXhHaTVzb0czSTdRVXBhUzJGVlFRRzYzUFJIcU9Ob2wKZWZRSUY1VUNnWUVBL3dJT2JGSW1TUDBZVkFFUzVsTHlXRktpZHBOMUhmY3NNVWpHbVRUSDY4bStkQVFFQTJmSgpFaFowNmErK2p5YkR0U0VTWHFzQkgzaUp5TS8vV1N6U0tLMDBKYWcvdVFrZ2htWitoeUwyWFZRV1pjbFY0RkZFCjlvZ2RqRG52d2hJMWROSWpmUUxYMnhRZWxiZlpEbFFrVmhvbnIvR2VKcU0xbVRDL1hOVmEreHNDZ1lFQS9RQkwKUUhHUlZIdloxSithK2JLN29pdXRSVWV1U0drelMrYng5anRjYTFUUUlVQVBpT2xyZnhrNlQ3QXFrT1Y4RFcwZwpGUmtyMFZsOUI4elRyK0tJZmJpNU9iWE1mTFlZaHdGc0xUS25JQWVPSEFNeUxGdGlaVWl1c1EvRzNLR2pncVR6Cjl1MlNlaUtQeDBYa0NDdmUvc2xSUUFld3pjUU1IZjA0WVF6bmFVY0NnWUFnUTc1WGJqMXgxclFSVE9GN1N0dG0KMlcyODJ3TmllemVZTk1FTCtXV2lLN0J4TldEY25YRVBYTkFHRVRwbkdseUF1bUo4bjk1UWdRdk40S05LUVNXRwpDQVFsRDVpZ2JNczB0aHNrTmdROTRybkN2eXFpYXlYeW0xNUJzOExtSnkra1RFSTVPdmJjdlRyeGJvV0VEcGxhClc0elI4aHcwZjBuMHkvb3FZTVJXS1FLQmdRQ2F1T1pNWitlWHdoSXFMTjFxM1BwUXArTlVIZzBnYlcyWWVvajQKcTc3T1NOVHJzTENQYXloNVZ1VkpQSlFiZnF4SnpiVzBFV3V4b01lTTBKK1l6YkhwS09IbHdCOXBHVGVRd0xiMgpRU2JodUowWTFuK0ZqdkZ5dld0UUR6VHZVczZiSStPcTNBa2JOaTIxa1RGdUtkNDY5TVVDb25GbXRRRXdDZDdECncwOTJHd0tCZ0gxVXo4NlExTjF3bzRJTEVSZFZWSDAzRWJ1cmtySWtFSnNCTnd6Q1ZTcFowbWt5cXRodkxONUwKYXhaWnUvREl3K2dLUGR5QStqYU9NNWFaNytmZWw0Uiswbm1YYnNQblR6R3UwMUpVRVdXaVFweEhMRy9SaU9CbwpzdEh3UmxtRkh3WDNyNGY3MkE0dU9jRmV4MmhOMldwdGF4WmJYdUVLeTVRMEE0L3NhSkRECi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9hUzdkY2VxV0syREtVTU9Ia1pEbkV3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTJNRGRhRncwek1UQTRNall4TmpBMgpNRGRhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFESDlzanRsODNtaVkvNGwrcXJDQ2Zpam9rbmlIbW9KUlIwSmZ6aTNDOTN6M0w4QngydVdFSlUKS0VNYzhyOXhJbjVLeDV1STNJbEF3MDc1c0Z0aVFNREk0RXY3bkVGZ1I2dHlRR1N1eWdNdk9NMUJOYXZMdlZhNwpGRVhvYVBRY3NZMSs5L3p5bnF2SVMyMkFLWWNjTzRkNkpGY0Z1WEFNODBRbmljMVE3ZnpEd3lWRndiR3JqRlVGCldob2NPMHl1S0loajRQT0RiWjFNQ0I1amE0MVVTRWVrcmtBUmtNdjh2aTlJQkhSUHg3TEREeDNNT21JR211eGcKempabzlrWm5hd1IxY2tJV000N00xa25HYkJ6WEtYR0dtSTE0bExIbEU0LzJoSXdzWnBxcE5aMjB4Nm4yMVhDLwp6bitnN3FBZHp3NDhNS01ZMDJxaEw4RXBIQUNIQzdncEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUFiTlZidHhkZFBYdit6SlZlNXF5TGdoSVVCc3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUgyUUxmK0hiSHNNbFVKVEdUOVZndlVlckEzK1dqSFcrWmlMM1lmOThWelMzdFJSRlBhK2czT1FiQTRDCkFSMXdBTDFlQVVRRHFxc05rOEJzanIrWU9VWTlpeXZmNzk3UlVORWMxdmR2Zk15Z29wTDdJalp4cUhNczRETGUKSHpxUEcyZGdqVmNOdUdUR0E5UWtUTjA0bFRHdlJQU1RSR2FSQTBOa1ZqdmlVL0lBNWpSMmk4STVQSWtQQW9xQgpoRFdYdS8zTHIrZXM0bkRSeHQ2L2UzdFl4Q1hWNXdaMlQyVEtSblVQVlh5M0JCbHRCdEtjUDkzMkY1M0JEYUI4CnlZL3VVZXJvUXF6YXJaVi9iblEvZW9Jb0FIcWpudlU3aTRIRWxRVnVJTUNmVUpqb0txRzBlT3pDcHBiTmRJMnAKZWdCVy9XT0V4N3RXWitteDZ6ZFNxTVgwVWI4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: kuma/templates/cp-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kuma-control-plane-config
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    # use this file to override default configuration of `kuma-cp`
    #
    # see conf/kuma-cp.conf.yml for available settings
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-control-plane
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - configmaps
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - kuma.io
    resources:
      - dataplanes
      - dataplaneinsights
      - meshes
      - zones
      - zoneinsights
      - zoneingresses
      - zoneingressinsights
      - meshinsights
      - serviceinsights
      - proxytemplates
      - ratelimits
      - trafficpermissions
      - trafficroutes
      - timeouts
      - retries
      - circuitbreakers
      - virtualoutbounds
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - kuma.io
    resources:
      - externalservices
      - faultinjections
      - healthchecks
      - trafficlogs
      - traffictraces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/finalizers
    verbs:
      - "*"
  - apiGroups:
      - kuma.io
    resources:
      - meshes/finalizers
    verbs:
      - "*"
  - apiGroups:
      - kuma.io
    resources:
      - dataplanes/finalizers
    verbs:
      - "*"
  # validate k8s token before issuing mTLS cert
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-control-plane
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-control-plane
subjects:
  - kind: ServiceAccount
    name: kuma-control-plane
    namespace: kuma-system
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kuma-control-plane
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuma-control-plane
subjects:
  - kind: ServiceAccount
    name: kuma-control-plane
    namespace: kuma-system
---
# Source: kuma/templates/cp-global-sync-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kuma-global-zone-sync
  namespace: kuma-system
  annotations:
spec:
  type: LoadBalancer
  ports:
    - port: 5685
      name: global-zone-sync
  selector:
  
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
---
# Source: kuma/templates/cp-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5680"
spec:
  type: ClusterIP
  ports:
    - port: 5681
      name: http-api-server
    - port: 5682
      name: https-api-server
    - port: 443
      name: https-admission-server
      targetPort: 5443
  selector:
    app: kuma-control-plane
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
---
# Source: kuma/templates/cp-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
    app: kuma-control-plane
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: kuma
      app.kubernetes.io/instance: kuma
      app: kuma-control-plane
  template:
    metadata:
      annotations:
        checksum/config: 6df33ec160599ac1a5e9fda109e2ba0d02c865f926ac14ecf92895e96b70a228
        checksum/tls-secrets: 8991981111285b27f7d460fe70b06cb29e6d42ffb8295687279751f35a1323bc
      labels:
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app: kuma-control-plane
    spec:
      serviceAccountName: kuma-control-plane
      nodeSelector:
        
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      containers:
        - name: control-plane
          image: "docker.io/kumahq/kuma-cp:1.3.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: KUMA_API_SERVER_READ_ONLY
              value: "true"
            - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
              value: "false"
            - name: KUMA_DP_SERVER_HDS_ENABLED
              value: "false"
            - name: KUMA_ENVIRONMENT
              value: "kubernetes"
            - name: KUMA_GENERAL_TLS_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.crt"
            - name: KUMA_GENERAL_TLS_KEY_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.key"
            - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
              value: "docker.io/kumahq/kuma-init:1.3.0"
            - name: KUMA_MODE
              value: "global"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
              value: "/var/run/secrets/kuma.io/tls-cert"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
              value: "5443"
            - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
              value: "kuma-control-plane"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/ca.crt"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
              value: "false"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
              value: "docker.io/kumahq/kuma-dp:1.3.0"
            - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
              value: "kuma-system"
            - name: KUMA_STORE_TYPE
              value: "kubernetes"
          args:
            - run
            - --log-level=info
            - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
          ports:
            - containerPort: 5681
            - containerPort: 5682
            - containerPort: 5443
          livenessProbe:
            httpGet:
              path: /healthy
              port: 5680
          readinessProbe:
            httpGet:
              path: /ready
              port: 5680
          resources:
            requests:
              cpu: 500m
              memory: 256Mi
          volumeMounts:
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert
              readOnly: true
            - name: kuma-control-plane-config
              mountPath: /etc/kuma.io/kuma-control-plane
              readOnly: true
      volumes:
        - name: general-tls-cert
          secret:
            secretName: kuma-tls-cert
        - name: kuma-control-plane-config
          configMap:
            name: kuma-control-plane-config
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: admissionregistration.k8s.io/v1

kind: MutatingWebhookConfiguration
metadata:
  name: kuma-admission-mutating-webhook-configuration
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: mesh.defaulter.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9hUzdkY2VxV0syREtVTU9Ia1pEbkV3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTJNRGRhRncwek1UQTRNall4TmpBMgpNRGRhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFESDlzanRsODNtaVkvNGwrcXJDQ2Zpam9rbmlIbW9KUlIwSmZ6aTNDOTN6M0w4QngydVdFSlUKS0VNYzhyOXhJbjVLeDV1STNJbEF3MDc1c0Z0aVFNREk0RXY3bkVGZ1I2dHlRR1N1eWdNdk9NMUJOYXZMdlZhNwpGRVhvYVBRY3NZMSs5L3p5bnF2SVMyMkFLWWNjTzRkNkpGY0Z1WEFNODBRbmljMVE3ZnpEd3lWRndiR3JqRlVGCldob2NPMHl1S0loajRQT0RiWjFNQ0I1amE0MVVTRWVrcmtBUmtNdjh2aTlJQkhSUHg3TEREeDNNT21JR211eGcKempabzlrWm5hd1IxY2tJV000N00xa25HYkJ6WEtYR0dtSTE0bExIbEU0LzJoSXdzWnBxcE5aMjB4Nm4yMVhDLwp6bitnN3FBZHp3NDhNS01ZMDJxaEw4RXBIQUNIQzdncEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUFiTlZidHhkZFBYdit6SlZlNXF5TGdoSVVCc3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUgyUUxmK0hiSHNNbFVKVEdUOVZndlVlckEzK1dqSFcrWmlMM1lmOThWelMzdFJSRlBhK2czT1FiQTRDCkFSMXdBTDFlQVVRRHFxc05rOEJzanIrWU9VWTlpeXZmNzk3UlVORWMxdmR2Zk15Z29wTDdJalp4cUhNczRETGUKSHpxUEcyZGdqVmNOdUdUR0E5UWtUTjA0bFRHdlJQU1RSR2FSQTBOa1ZqdmlVL0lBNWpSMmk4STVQSWtQQW9xQgpoRFdYdS8zTHIrZXM0bkRSeHQ2L2UzdFl4Q1hWNXdaMlQyVEtSblVQVlh5M0JCbHRCdEtjUDkzMkY1M0JEYUI4CnlZL3VVZXJvUXF6YXJaVi9iblEvZW9Jb0FIcWpudlU3aTRIRWxRVnVJTUNmVUpqb0txRzBlT3pDcHBiTmRJMnAKZWdCVy9XT0V4N3RXWitteDZ6ZFNxTVgwVWI4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /default-kuma-io-v1alpha1-mesh
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - meshes
    sideEffects: None
  - name: owner-reference.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9hUzdkY2VxV0syREtVTU9Ia1pEbkV3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTJNRGRhRncwek1UQTRNall4TmpBMgpNRGRhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFESDlzanRsODNtaVkvNGwrcXJDQ2Zpam9rbmlIbW9KUlIwSmZ6aTNDOTN6M0w4QngydVdFSlUKS0VNYzhyOXhJbjVLeDV1STNJbEF3MDc1c0Z0aVFNREk0RXY3bkVGZ1I2dHlRR1N1eWdNdk9NMUJOYXZMdlZhNwpGRVhvYVBRY3NZMSs5L3p5bnF2SVMyMkFLWWNjTzRkNkpGY0Z1WEFNODBRbmljMVE3ZnpEd3lWRndiR3JqRlVGCldob2NPMHl1S0loajRQT0RiWjFNQ0I1amE0MVVTRWVrcmtBUmtNdjh2aTlJQkhSUHg3TEREeDNNT21JR211eGcKempabzlrWm5hd1IxY2tJV000N00xa25HYkJ6WEtYR0dtSTE0bExIbEU0LzJoSXdzWnBxcE5aMjB4Nm4yMVhDLwp6bitnN3FBZHp3NDhNS01ZMDJxaEw4RXBIQUNIQzdncEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUFiTlZidHhkZFBYdit6SlZlNXF5TGdoSVVCc3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUgyUUxmK0hiSHNNbFVKVEdUOVZndlVlckEzK1dqSFcrWmlMM1lmOThWelMzdFJSRlBhK2czT1FiQTRDCkFSMXdBTDFlQVVRRHFxc05rOEJzanIrWU9VWTlpeXZmNzk3UlVORWMxdmR2Zk15Z29wTDdJalp4cUhNczRETGUKSHpxUEcyZGdqVmNOdUdUR0E5UWtUTjA0bFRHdlJQU1RSR2FSQTBOa1ZqdmlVL0lBNWpSMmk4STVQSWtQQW9xQgpoRFdYdS8zTHIrZXM0bkRSeHQ2L2UzdFl4Q1hWNXdaMlQyVEtSblVQVlh5M0JCbHRCdEtjUDkzMkY1M0JEYUI4CnlZL3VVZXJvUXF6YXJaVi9iblEvZW9Jb0FIcWpudlU3aTRIRWxRVnVJTUNmVUpqb0txRzBlT3pDcHBiTmRJMnAKZWdCVy9XT0V4N3RXWitteDZ6ZFNxTVgwVWI4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /owner-reference-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
        resources:
          - circuitbreakers
          - externalservices
          - faultinjections
          - healthchecks
          - retries
          - proxytemplates
          - ratelimits
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
          - virtualoutbounds
    
      
    sideEffects: None
  - name: kuma-injector.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9hUzdkY2VxV0syREtVTU9Ia1pEbkV3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTJNRGRhRncwek1UQTRNall4TmpBMgpNRGRhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFESDlzanRsODNtaVkvNGwrcXJDQ2Zpam9rbmlIbW9KUlIwSmZ6aTNDOTN6M0w4QngydVdFSlUKS0VNYzhyOXhJbjVLeDV1STNJbEF3MDc1c0Z0aVFNREk0RXY3bkVGZ1I2dHlRR1N1eWdNdk9NMUJOYXZMdlZhNwpGRVhvYVBRY3NZMSs5L3p5bnF2SVMyMkFLWWNjTzRkNkpGY0Z1WEFNODBRbmljMVE3ZnpEd3lWRndiR3JqRlVGCldob2NPMHl1S0loajRQT0RiWjFNQ0I1amE0MVVTRWVrcmtBUmtNdjh2aTlJQkhSUHg3TEREeDNNT21JR211eGcKempabzlrWm5hd1IxY2tJV000N00xa25HYkJ6WEtYR0dtSTE0bExIbEU0LzJoSXdzWnBxcE5aMjB4Nm4yMVhDLwp6bitnN3FBZHp3NDhNS01ZMDJxaEw4RXBIQUNIQzdncEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUFiTlZidHhkZFBYdit6SlZlNXF5TGdoSVVCc3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUgyUUxmK0hiSHNNbFVKVEdUOVZndlVlckEzK1dqSFcrWmlMM1lmOThWelMzdFJSRlBhK2czT1FiQTRDCkFSMXdBTDFlQVVRRHFxc05rOEJzanIrWU9VWTlpeXZmNzk3UlVORWMxdmR2Zk15Z29wTDdJalp4cUhNczRETGUKSHpxUEcyZGdqVmNOdUdUR0E5UWtUTjA0bFRHdlJQU1RSR2FSQTBOa1ZqdmlVL0lBNWpSMmk4STVQSWtQQW9xQgpoRFdYdS8zTHIrZXM0bkRSeHQ2L2UzdFl4Q1hWNXdaMlQyVEtSblVQVlh5M0JCbHRCdEtjUDkzMkY1M0JEYUI4CnlZL3VVZXJvUXF6YXJaVi9iblEvZW9Jb0FIcWpudlU3aTRIRWxRVnVJTUNmVUpqb0txRzBlT3pDcHBiTmRJMnAKZWdCVy9XT0V4N3RXWitteDZ6ZFNxTVgwVWI4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /inject-sidecar
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: admissionregistration.k8s.io/v1

kind: ValidatingWebhookConfiguration
metadata:
  name: kuma-validating-webhook-configuration
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9hUzdkY2VxV0syREtVTU9Ia1pEbkV3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTJNRGRhRncwek1UQTRNall4TmpBMgpNRGRhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFESDlzanRsODNtaVkvNGwrcXJDQ2Zpam9rbmlIbW9KUlIwSmZ6aTNDOTN6M0w4QngydVdFSlUKS0VNYzhyOXhJbjVLeDV1STNJbEF3MDc1c0Z0aVFNREk0RXY3bkVGZ1I2dHlRR1N1eWdNdk9NMUJOYXZMdlZhNwpGRVhvYVBRY3NZMSs5L3p5bnF2SVMyMkFLWWNjTzRkNkpGY0Z1WEFNODBRbmljMVE3ZnpEd3lWRndiR3JqRlVGCldob2NPMHl1S0loajRQT0RiWjFNQ0I1amE0MVVTRWVrcmtBUmtNdjh2aTlJQkhSUHg3TEREeDNNT21JR211eGcKempabzlrWm5hd1IxY2tJV000N00xa25HYkJ6WEtYR0dtSTE0bExIbEU0LzJoSXdzWnBxcE5aMjB4Nm4yMVhDLwp6bitnN3FBZHp3NDhNS01ZMDJxaEw4RXBIQUNIQzdncEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUFiTlZidHhkZFBYdit6SlZlNXF5TGdoSVVCc3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUgyUUxmK0hiSHNNbFVKVEdUOVZndlVlckEzK1dqSFcrWmlMM1lmOThWelMzdFJSRlBhK2czT1FiQTRDCkFSMXdBTDFlQVVRRHFxc05rOEJzanIrWU9VWTlpeXZmNzk3UlVORWMxdmR2Zk15Z29wTDdJalp4cUhNczRETGUKSHpxUEcyZGdqVmNOdUdUR0E5UWtUTjA0bFRHdlJQU1RSR2FSQTBOa1ZqdmlVL0lBNWpSMmk4STVQSWtQQW9xQgpoRFdYdS8zTHIrZXM0bkRSeHQ2L2UzdFl4Q1hWNXdaMlQyVEtSblVQVlh5M0JCbHRCdEtjUDkzMkY1M0JEYUI4CnlZL3VVZXJvUXF6YXJaVi9iblEvZW9Jb0FIcWpudlU3aTRIRWxRVnVJTUNmVUpqb0txRzBlT3pDcHBiTmRJMnAKZWdCVy9XT0V4N3RXWitteDZ6ZFNxTVgwVWI4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /validate-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - circuitbreakers
          - dataplanes
          - externalservices
          - faultinjections
          - healthchecks
          - retries
          - meshes
          - proxytemplates
          - ratelimits
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
          - virtualoutbounds
          - zones
    
      
    sideEffects: None
  - name: service.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9hUzdkY2VxV0syREtVTU9Ia1pEbkV3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTJNRGRhRncwek1UQTRNall4TmpBMgpNRGRhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFESDlzanRsODNtaVkvNGwrcXJDQ2Zpam9rbmlIbW9KUlIwSmZ6aTNDOTN6M0w4QngydVdFSlUKS0VNYzhyOXhJbjVLeDV1STNJbEF3MDc1c0Z0aVFNREk0RXY3bkVGZ1I2dHlRR1N1eWdNdk9NMUJOYXZMdlZhNwpGRVhvYVBRY3NZMSs5L3p5bnF2SVMyMkFLWWNjTzRkNkpGY0Z1WEFNODBRbmljMVE3ZnpEd3lWRndiR3JqRlVGCldob2NPMHl1S0loajRQT0RiWjFNQ0I1amE0MVVTRWVrcmtBUmtNdjh2aTlJQkhSUHg3TEREeDNNT21JR211eGcKempabzlrWm5hd1IxY2tJV000N00xa25HYkJ6WEtYR0dtSTE0bExIbEU0LzJoSXdzWnBxcE5aMjB4Nm4yMVhDLwp6bitnN3FBZHp3NDhNS01ZMDJxaEw4RXBIQUNIQzdncEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUFiTlZidHhkZFBYdit6SlZlNXF5TGdoSVVCc3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUgyUUxmK0hiSHNNbFVKVEdUOVZndlVlckEzK1dqSFcrWmlMM1lmOThWelMzdFJSRlBhK2czT1FiQTRDCkFSMXdBTDFlQVVRRHFxc05rOEJzanIrWU9VWTlpeXZmNzk3UlVORWMxdmR2Zk15Z29wTDdJalp4cUhNczRETGUKSHpxUEcyZGdqVmNOdUdUR0E5UWtUTjA0bFRHdlJQU1RSR2FSQTBOa1ZqdmlVL0lBNWpSMmk4STVQSWtQQW9xQgpoRFdYdS8zTHIrZXM0bkRSeHQ2L2UzdFl4Q1hWNXdaMlQyVEtSblVQVlh5M0JCbHRCdEtjUDkzMkY1M0JEYUI4CnlZL3VVZXJvUXF6YXJaVi9iblEvZW9Jb0FIcWpudlU3aTRIRWxRVnVJTUNmVUpqb0txRzBlT3pDcHBiTmRJMnAKZWdCVy9XT0V4N3RXWitteDZ6ZFNxTVgwVWI4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /validate-v1-service
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - services
    sideEffects: None
  - name: secret.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    namespaceSelector:
      matchLabels:
        kuma.io/system-namespace: "true"
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU9hUzdkY2VxV0syREtVTU9Ia1pEbkV3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTJNRGRhRncwek1UQTRNall4TmpBMgpNRGRhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFESDlzanRsODNtaVkvNGwrcXJDQ2Zpam9rbmlIbW9KUlIwSmZ6aTNDOTN6M0w4QngydVdFSlUKS0VNYzhyOXhJbjVLeDV1STNJbEF3MDc1c0Z0aVFNREk0RXY3bkVGZ1I2dHlRR1N1eWdNdk9NMUJOYXZMdlZhNwpGRVhvYVBRY3NZMSs5L3p5bnF2SVMyMkFLWWNjTzRkNkpGY0Z1WEFNODBRbmljMVE3ZnpEd3lWRndiR3JqRlVGCldob2NPMHl1S0loajRQT0RiWjFNQ0I1amE0MVVTRWVrcmtBUmtNdjh2aTlJQkhSUHg3TEREeDNNT21JR211eGcKempabzlrWm5hd1IxY2tJV000N00xa25HYkJ6WEtYR0dtSTE0bExIbEU0LzJoSXdzWnBxcE5aMjB4Nm4yMVhDLwp6bitnN3FBZHp3NDhNS01ZMDJxaEw4RXBIQUNIQzdncEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUFiTlZidHhkZFBYdit6SlZlNXF5TGdoSVVCc3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUgyUUxmK0hiSHNNbFVKVEdUOVZndlVlckEzK1dqSFcrWmlMM1lmOThWelMzdFJSRlBhK2czT1FiQTRDCkFSMXdBTDFlQVVRRHFxc05rOEJzanIrWU9VWTlpeXZmNzk3UlVORWMxdmR2Zk15Z29wTDdJalp4cUhNczRETGUKSHpxUEcyZGdqVmNOdUdUR0E5UWtUTjA0bFRHdlJQU1RSR2FSQTBOa1ZqdmlVL0lBNWpSMmk4STVQSWtQQW9xQgpoRFdYdS8zTHIrZXM0bkRSeHQ2L2UzdFl4Q1hWNXdaMlQyVEtSblVQVlh5M0JCbHRCdEtjUDkzMkY1M0JEYUI4CnlZL3VVZXJvUXF6YXJaVi9iblEvZW9Jb0FIcWpudlU3aTRIRWxRVnVJTUNmVUpqb0txRzBlT3pDcHBiTmRJMnAKZWdCVy9XT0V4N3RXWitteDZ6ZFNxTVgwVWI4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /validate-v1-secret
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - secrets
    sideEffects: None
---
# Source: kuma/templates/pre-delete-webhooks.yaml
# HELM first deletes RBAC of Kuma, then it tries to delete Secrets. We've got validating webhook on Secrets.
# But even that the policy of this webhook is Ignore, it fails because Kuma does not have permission to access Secrets anymore.
# Therefore we first need to delete webhook so we can delete the rest of the deployment
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-pre-delete-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-patch-ns-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kuma-install-missing-crds-scripts
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
data:
  install_missing_crds.sh: |
    #!/usr/bin/env sh

    if [ -s /kuma/missing/crds.yaml ]; then
      echo "/kuma/missing/crds.yaml found and is not empty, adding crds"
      kubectl create -f /kuma/missing/crds.yaml
    else
      echo "/kuma/missing/crds.yaml not found or empty, it looks like there is no missing crds"
    fi
  save_missing_crds.sh: |
    #!/usr/bin/env sh

    missing_crds="$(kumactl install crds --only-missing)"

    if [ -n "${missing_crds}" ]; then
      echo "found missing crds - saving to /kuma/missing/crds.yaml"
      echo "${missing_crds}" > /kuma/missing/crds.yaml
    fi
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-pre-delete-job
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    resourceNames:
      - kuma-validating-webhook-configuration
    verbs:
      - delete
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-patch-ns-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    resourceNames:
      - kuma-system
    verbs:
      - get
      - patch
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - "apiextensions.k8s.io"
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - list
      - get
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-pre-delete-job
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-pre-delete-job
subjects:
  - kind: ServiceAccount
    name: kuma-pre-delete-job
    namespace: kuma-system
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-patch-ns-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-patch-ns-job
subjects:
  - kind: ServiceAccount
    name: kuma-patch-ns-job
    namespace: kuma-system
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-install-missing-crds
subjects:
  - kind: ServiceAccount
    name: kuma-install-missing-crds
    namespace: kuma-system
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-delete-webhook
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-delete"
    
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    metadata:
      name: kuma-delete-webhook
      labels:
    
        helm.sh/chart: kuma-0.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.3.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-pre-delete-job
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-delete-job
          image: "bitnami/kubectl:1.20"
          command:
            - 'kubectl'
            - 'delete'
            - 'ValidatingWebhookConfiguration'
            - kuma-validating-webhook-configuration
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-patch-ns
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-install"
    
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    metadata:
      name: kuma-patch-ns-script
      labels:
    
        helm.sh/chart: kuma-0.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.3.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-patch-ns-job
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-install-job
          image: "bitnami/kubectl:1.20"
          command:
            - 'kubectl'
            - 'patch'
            - 'namespace'
            - "kuma-system"
            - '--type'
            - 'merge'
            - '--patch'
            - '{ "metadata": { "labels": { "kuma.io/system-namespace": "true" } } }'
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-install-missing-crds
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  template:
    metadata:
      name: kuma-install-missing-crds-job
      labels:
    
        helm.sh/chart: kuma-0.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.3.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-install-missing-crds
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-upgrade-job
          image: "bitnami/kubectl:1.20"
          command:
            - '/kuma/scripts/install_missing_crds.sh'
          volumeMounts:
            - mountPath: /kuma/missing
              name: missing-crds
              readOnly: true
            - mountPath: /kuma/scripts
              name: scripts
              readOnly: true
      initContainers:
        - name: pre-upgrade-job-init
          image: "docker.io/kumahq/kumactl:1.3.0"
          volumeMounts:
          - mountPath: /kuma/missing
            name: missing-crds
          - mountPath: /kuma/scripts
            name: scripts
            readOnly: true
          command:
          - '/kuma/scripts/save_missing_crds.sh'
      volumes:
        - name: scripts
          configMap:
            name: kuma-install-missing-crds-scripts
            defaultMode: 0755
        - name: missing-crds
          emptyDir: {}
