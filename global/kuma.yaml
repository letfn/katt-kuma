apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-patch-ns-job
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-pre-delete-job
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-install-missing-crds
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-control-plane
  namespace: kuma-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-patch-ns-job
  namespace: kuma-system
rules:
- apiGroups:
  - ""
  resourceNames:
  - kuma-system
  resources:
  - namespaces
  verbs:
  - get
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-control-plane
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - configmaps
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - kuma.io
  resources:
  - dataplanes
  - dataplaneinsights
  - meshes
  - zones
  - zoneinsights
  - zoneingresses
  - zoneingressinsights
  - meshinsights
  - serviceinsights
  - proxytemplates
  - ratelimits
  - trafficpermissions
  - trafficroutes
  - timeouts
  - retries
  - circuitbreakers
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - kuma.io
  resources:
  - externalservices
  - faultinjections
  - healthchecks
  - trafficlogs
  - traffictraces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  verbs:
  - '*'
- apiGroups:
  - kuma.io
  resources:
  - meshes/finalizers
  verbs:
  - '*'
- apiGroups:
  - kuma.io
  resources:
  - dataplanes/finalizers
  verbs:
  - '*'
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-install-missing-crds
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - list
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-pre-delete-job
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - kuma-validating-webhook-configuration
  resources:
  - validatingwebhookconfigurations
  verbs:
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kuma-control-plane
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuma-control-plane
subjects:
- kind: ServiceAccount
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-patch-ns-job
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-patch-ns-job
subjects:
- kind: ServiceAccount
  name: kuma-patch-ns-job
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-control-plane
subjects:
- kind: ServiceAccount
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-install-missing-crds
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-install-missing-crds
subjects:
- kind: ServiceAccount
  name: kuma-install-missing-crds
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-pre-delete-job
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-pre-delete-job
subjects:
- kind: ServiceAccount
  name: kuma-pre-delete-job
  namespace: kuma-system
---
apiVersion: v1
data:
  config.yaml: |
    # use this file to override default configuration of `kuma-cp`
    #
    # see conf/kuma-cp.conf.yml for available settings
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-control-plane-config
  namespace: kuma-system
---
apiVersion: v1
data:
  install_missing_crds.sh: |
    #!/usr/bin/env sh

    if [ -s /kuma/missing/crds.yaml ]; then
      echo "/kuma/missing/crds.yaml found and is not empty, adding crds"
      kubectl create -f /kuma/missing/crds.yaml
    else
      echo "/kuma/missing/crds.yaml not found or empty, it looks like there is no missing crds"
    fi
  save_missing_crds.sh: |
    #!/usr/bin/env sh

    missing_crds="$(kumactl install crds --only-missing)"

    if [ -n "${missing_crds}" ]; then
      echo "found missing crds - saving to /kuma/missing/crds.yaml"
      echo "${missing_crds}" > /kuma/missing/crds.yaml
    fi
kind: ConfigMap
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-install-missing-crds-scripts
  namespace: kuma-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRTnU2cHpPTmdyY2VjQzA1bmhsWjc5ekFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGd3TWpBeE5UQTBPVm9YRFRNeE1EY3pNVEF4TlRBMApPVm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUswSEdubEVPZ0JSQ3pqcE1zK0pjeEM0R01ZTjRMamo0WDQwcEdxL1J2cnZrTElSUTBnUTR1cmsKcldQVStZVGhVWi9xSXI2Y3VxYUlyYUJLMWtodzgraC9XOVJwcjl6R2RKSmQxU1daanZlUU9WV0ttakJoRDdQcgoxM3Q4QlNueUVRMFBHcnF1bmpjaEFUWVpPWkJ0d2FkVVhNWmRicTl6TlRZeHBDNThTZkJvMDlNMVdJNjNzMzI0CmZhK2s2L1ZNSllLRlJzNldRcE00MGdiSHlNdkV5UlhQSFRDTkFyaVRlR3VDQzRKVytHR1pmUkJGNFRGVnphd1UKNXJBbEhhdnZkR2JMNDBhemNIMnYwWTlpNmVRMlFNVzFHRW1VYjNkM1JkMnpqaUtJM2NuZ2ozdEVTa1dXcEIxWgpldHp3Q1plYWljNERxamUyWWVueDk2bVpKUExnYVdFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUNEt2UUlLZGIyZVhBT0E5OFR0Q1hMWWlEbzlEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBSTQ4emYzbUNObkszak10VUpOQVQ1ejBWTnNSV0VaeHMzWEQvUTVva2lJVWhZR2RhNWlodlp5a2ZrNUJWCnBhSmlRNk9xL3NZQ1Z1ZVRxT2JYc2RzL2NaZ00zZWFOTlZSVHY1UEo2dEpQQjhCU2wrQnRnbzNUbUlUZkp4VnMKTnJXandwY0pGVEZ6alMybGxnMDZXai9qMVJKSW9NU3ljQ2dpNDZnNjBLOW1Vb1VYQVZBTHdrTm8za3dNYkVwZQprM0RWUVNGTFFnMTcraVFZKzUyd0FRbkx1VE16azdxQ1YvRW0yM3pPOXpZMHRpWjhzTjQ5M1ZneEF1UHcxeUE4CkxBS0JKMVhUc0lPOEhKdHF1TVVWV0JpM3loZ0FmYmFoQUp5WWE0Yys4YWRWUzRMeDE4VVN5aFdzUDZ6aHVrZWgKS1RDTUxWTUFrUnJVTkExOUNiQ1IwOUcyNVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhekNDQWxPZ0F3SUJBZ0lSQU1qeDBSM2J4NkZ2RU1JcjBITGFMbXN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TURJd01UVXdOVEJhRncwek1UQTNNekV3TVRVdwpOVEJhTUIweEd6QVpCZ05WQkFNVEVtdDFiV0V0WTI5dWRISnZiQzF3YkdGdVpUQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMdXJEdnhhWEk3Z3ZEMEdMeXBHUlNCd3laWnVlL0hVck9LTEdaSXIKTlZSTk8rTlkyeW9UZmREQks4bk9yZW5OdDgrT09waXM3TkRmYWQwZWUvejlxTWRXNE01Y2dHWmh4cms0K2FHdwpxSE1wSERSTmZxTXNSaWRvNSswbGhsTHhHQ0YrNmpoUlN4Mlk2RHlaNFhQWmV6R0kzSDJUclA5ZS92MHplbUJDCkRYS2hDcGVxT20yUTVacHdDNVYwZjYweGtCMys2Tkw1Sjlxb01rSkRtQTJSMWY4VXg4dU1Qem5oVTNRNnlTMEsKbUFQYkdzb2VZeldNandUWm9iNlVrYzhTRDVnaWp2K1RHbG02WXVZcU1oS2ROMGZuekRLMkk1VE9TaDBsWXBKZgpVS3c0OHR4QTlmaUhJSTk1eko1ZWNqTUhiUUhkbGZxdnlqVi9DK29Ya0dFMUZUMENBd0VBQWFPQnNEQ0JyVEFPCkJnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0cKQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVUrQ3IwQ0NuVzlubHdEZ1BmRTdRbHkySWc2UFF3VFFZRApWUjBSQkVZd1JJSWVhM1Z0WVMxamIyNTBjbTlzTFhCc1lXNWxMbXQxYldFdGMzbHpkR1Z0Z2lKcmRXMWhMV052CmJuUnliMnd0Y0d4aGJtVXVhM1Z0WVMxemVYTjBaVzB1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1gKQXNlaktCTkk1R09PalJYRUpybzVpVnNTV3IrZzFyMit6bXAwYlY0V1BXVTBENjNUenlpRnhLamhra3ZpSWt0UgpzQkhVUDZZYWFZLzhVVjc3TzN2NE4wYkY2SEdYbmk4VnI1enZqZGpJMWxFUEFITE1jZ3dvUDkzNXVnVjNYYy9NCmNxSWh1Z2xyNEdDOUlneEhZNkthNVhwUjZTZmlSMVJaWlZ6MHZNdUp5ZmlFbFRrLy8wMm5hdGwzZHM1aTZJL2YKeGxsYTBVbmF3Q2NwdFV6M1RyaFR0a2swZ1VKRVB2dUl2Q08vbk9vUmZWYkZMQ3Q0NFpUbTVxWE50UTRLb25pRwo1bDZET3owREZDUEw5WVBnQnRwVHlzN1hrTDBRdDJJWVFOQk11TXJpZ1B5aXEyWm56WDY2MHJEM2dSTlAwKzNCCmVqd2laQkhCTmlrWE40a3pVL2xTCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdTZzTy9GcGNqdUM4UFFZdktrWkZJSERKbG01NzhkU3M0b3Naa2lzMVZFMDc0MWpiCktoTjkwTUVyeWM2dDZjMjN6NDQ2bUt6czBOOXAzUjU3L1Ayb3gxYmd6bHlBWm1IR3VUajVvYkNvY3lrY05FMSsKb3l4R0oyam43U1dHVXZFWUlYN3FPRkZMSFpqb1BKbmhjOWw3TVlqY2ZaT3MvMTcrL1RONllFSU5jcUVLbDZvNgpiWkRsbW5BTGxYUi9yVEdRSGY3bzB2a24ycWd5UWtPWURaSFYveFRIeTR3L09lRlRkRHJKTFFxWUE5c2F5aDVqCk5ZeVBCTm1odnBTUnp4SVBtQ0tPLzVNYVdicGk1aW95RXAwM1IrZk1NcllqbE01S0hTVmlrbDlRckRqeTNFRDEKK0ljZ2ozbk1ubDV5TXdkdEFkMlYrcS9LTlg4TDZoZVFZVFVWUFFJREFRQUJBb0lCQVFDUlZ0b0ZQK244MFRtWApQU25iNEkzNm9MN09YUVJxZGwzcUdQWVZ5SmJGa2diMmZFTkhvODdGbEVUWVJ0TlRoZmw3cWRmaGs5TFh0SjZsCkc4M0VVYUtidHNIbHI2ZlZJcFlucm1OT0FLV0VnbXNRYW8vUHlTTVB0R1FodWZUOFdURnFCNE5YV0VZSFJ2dGMKcTRQNkY0MGNBTFZhSDd0VUR2c0ZsdytJYXI5RmJQTzg2dTAxMFNwL1JFVW01bmR2RUdoMlovcm92R3hWbGFMYwpsWW9sREVvNWhzZWhGKzF5RWpiVGY2UWh4ZUVrQW1weUZDMSs3ZEM3cGZqaXlZWEc5Yk0wd05RcTdBaStvWERqCjhEdlp5RWNSWFBWZ3dHVWhPWnZsQWhkYnpDbjdYa2ZrT3VWRjQ2eW4vbUxycG9WRnlsTmtmenpvY0lZdjRqRm0KRjU5Yi9FWlZBb0dCQVBJT0NjdHBYM1lyWi9KZ2prUm5jbDAwNEFxTmk3VnhkRHlSdzJBQWFLUmV2dlVrYzd3bQorU2xyTG9FWklQbFl3Z2JsclljTEhza2hNWlhEQnZ3TTBYWnBmZHNjNlZSMkxKbkxMKzBrNjRzQzJpVGN2VWRLClhlQmo0bXA3M2QwbmhCa1h4ZG5VNzBpbHdBdDlwOHdKUzBldmpXNlFSUjRwWDlxbGh2M0FERko3QW9HQkFNWjYKNVRTcnFXbFdyUlhZdWFIWjhocUtMRkxZaDRYd3pvUUxybXYvL29xeVJXZUZzVkZCZ09yWHNSRExsQzdDNHc1UAp0Y2F3US9ZWFJZSDRKRER2WWRkcWMvbDhrSlgwTlNtbkVkQ2dxZlRraWhPTVBDQXdFNGUweUdHOTQwbWxsTE10CitBTlREbEM4R1V6ZC9IOGNzRVdNS2FtUzFLNG5VNDVnS2gxeFpxV25Bb0dCQU5xMlpwRSs0RHYxVXBKR1BxWisKVm03enhQQ2tIelhPa3ZuYnQ0NjZMOU05clF2eWFRVDhyaXlIcFZpUExTVkExdWpHaFhvOVNRN3hpRTFMRUxlVQptWHVHTEd0Yy8xUUxCNWZiYWEyOHEzeExFbk0yWld6U1BHcnh0ZmNEZjJCQ1FYRXU4dDQyTWhRUmVLcXBXb0haCmNBVVJFaGx5RUpJRlRwQlErdDJ6dHk2YkFvR0FDM3kzWVVvQ0h3K2VLdUtGTStIYVNrRHUrY2lBWjNjZGJMVUUKWGtuTm9KZGF2dmdVNENBTFp3d2V1bHNkODJyaUcwVHZ2MVVhU2RiazlmVzNtb0Z3UnpocEIrcDJyOGNYZ0phagp5RkJVSmRGSVVJTlFRNGlreUxqazFBdGFhVHZGRkcyM3FmR1hwWUtOY0U1MHU2S2NiUm9FbTBUZFBFc1lZZWdjCjUrRlZVSWNDZ1lFQXFNczM0a2Z5TnQ3NndhMHZ2YUFRSElJbGVpVmw4dUZhWCt0NklkZXI1c3MxRFY3a3FBYTQKWTRybzBRcGYvNGdFMkhHSUJrRGpGNmVpNENpRHRnUWltR0hYL1YzNUpubHlKQTdaWSs1Sis3OVpCcGxrSjFKNQpEc04yaWpMWE1hZDA1TDladnVwTFpZTmxPeTdac1FORUdMZk1NZ3BlekdnY2dlRFJIcnNrNW44PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-tls-cert
  namespace: kuma-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "5680"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-control-plane
  namespace: kuma-system
spec:
  ports:
  - name: http-api-server
    port: 5681
  - name: https-api-server
    port: 5682
  - name: https-admission-server
    port: 443
    targetPort: 5443
  selector:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/name: kuma
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  name: kuma-global-zone-sync
  namespace: kuma-system
spec:
  ports:
  - name: global-zone-sync
    port: 5685
  selector:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/name: kuma
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-control-plane
  namespace: kuma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-control-plane
      app.kubernetes.io/instance: kuma
      app.kubernetes.io/name: kuma
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        checksum/config: d197fa140fb2f04173c9f38a84787055696f859d2051b121a29b1fb6f20f5202
        checksum/tls-secrets: 20315e383329b25f04675e5b42f75478e168c8d44ffab6510618f52c7b9f7eb3
      labels:
        app: kuma-control-plane
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/name: kuma
    spec:
      containers:
      - args:
        - run
        - --log-level=info
        - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
        env:
        - name: KUMA_API_SERVER_READ_ONLY
          value: "true"
        - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
          value: "false"
        - name: KUMA_DP_SERVER_HDS_ENABLED
          value: "false"
        - name: KUMA_ENVIRONMENT
          value: kubernetes
        - name: KUMA_GENERAL_TLS_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/tls.crt
        - name: KUMA_GENERAL_TLS_KEY_FILE
          value: /var/run/secrets/kuma.io/tls-cert/tls.key
        - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
          value: docker.io/kumahq/kuma-init:1.2.3
        - name: KUMA_MODE
          value: global
        - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
          value: /var/run/secrets/kuma.io/tls-cert
        - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
          value: "5443"
        - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
          value: kuma-control-plane
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/ca.crt
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
          value: "false"
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
          value: docker.io/kumahq/kuma-dp:1.2.3
        - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
          value: kuma-system
        - name: KUMA_STORE_TYPE
          value: kubernetes
        image: docker.io/kumahq/kuma-cp:1.2.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthy
            port: 5680
        name: control-plane
        ports:
        - containerPort: 5681
        - containerPort: 5682
        - containerPort: 5443
        readinessProbe:
          httpGet:
            path: /ready
            port: 5680
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/run/secrets/kuma.io/tls-cert
          name: general-tls-cert
          readOnly: true
        - mountPath: /etc/kuma.io/kuma-control-plane
          name: kuma-control-plane-config
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      serviceAccountName: kuma-control-plane
      volumes:
      - name: general-tls-cert
        secret:
          secretName: kuma-tls-cert
      - configMap:
          name: kuma-control-plane-config
        name: kuma-control-plane-config
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "5"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-delete-webhook
  namespace: kuma-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.2.3
        helm.sh/chart: kuma-0.6.3
      name: kuma-delete-webhook
    spec:
      containers:
      - command:
        - kubectl
        - delete
        - ValidatingWebhookConfiguration
        - kuma-validating-webhook-configuration
        image: bitnami/kubectl:1.20
        name: pre-delete-job
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-pre-delete-job
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-install-missing-crds
  namespace: kuma-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.2.3
        helm.sh/chart: kuma-0.6.3
      name: kuma-install-missing-crds-job
    spec:
      containers:
      - command:
        - /kuma/scripts/install_missing_crds.sh
        image: bitnami/kubectl:1.20
        name: pre-upgrade-job
        volumeMounts:
        - mountPath: /kuma/missing
          name: missing-crds
          readOnly: true
        - mountPath: /kuma/scripts
          name: scripts
          readOnly: true
      initContainers:
      - command:
        - /kuma/scripts/save_missing_crds.sh
        image: docker.io/kumahq/kumactl:1.2.3
        name: pre-upgrade-job-init
        volumeMounts:
        - mountPath: /kuma/missing
          name: missing-crds
        - mountPath: /kuma/scripts
          name: scripts
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-install-missing-crds
      volumes:
      - configMap:
          defaultMode: 493
          name: kuma-install-missing-crds-scripts
        name: scripts
      - emptyDir: {}
        name: missing-crds
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "5"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-patch-ns
  namespace: kuma-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.2.3
        helm.sh/chart: kuma-0.6.3
      name: kuma-patch-ns-script
    spec:
      containers:
      - command:
        - kubectl
        - patch
        - namespace
        - kuma-system
        - --type
        - merge
        - --patch
        - '{ "metadata": { "labels": { "kuma.io/system-namespace": "true" } } }'
        image: bitnami/kubectl:1.20
        name: pre-install-job
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-patch-ns-job
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-admission-mutating-webhook-configuration
  namespace: kuma-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRTnU2cHpPTmdyY2VjQzA1bmhsWjc5ekFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGd3TWpBeE5UQTBPVm9YRFRNeE1EY3pNVEF4TlRBMApPVm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUswSEdubEVPZ0JSQ3pqcE1zK0pjeEM0R01ZTjRMamo0WDQwcEdxL1J2cnZrTElSUTBnUTR1cmsKcldQVStZVGhVWi9xSXI2Y3VxYUlyYUJLMWtodzgraC9XOVJwcjl6R2RKSmQxU1daanZlUU9WV0ttakJoRDdQcgoxM3Q4QlNueUVRMFBHcnF1bmpjaEFUWVpPWkJ0d2FkVVhNWmRicTl6TlRZeHBDNThTZkJvMDlNMVdJNjNzMzI0CmZhK2s2L1ZNSllLRlJzNldRcE00MGdiSHlNdkV5UlhQSFRDTkFyaVRlR3VDQzRKVytHR1pmUkJGNFRGVnphd1UKNXJBbEhhdnZkR2JMNDBhemNIMnYwWTlpNmVRMlFNVzFHRW1VYjNkM1JkMnpqaUtJM2NuZ2ozdEVTa1dXcEIxWgpldHp3Q1plYWljNERxamUyWWVueDk2bVpKUExnYVdFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUNEt2UUlLZGIyZVhBT0E5OFR0Q1hMWWlEbzlEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBSTQ4emYzbUNObkszak10VUpOQVQ1ejBWTnNSV0VaeHMzWEQvUTVva2lJVWhZR2RhNWlodlp5a2ZrNUJWCnBhSmlRNk9xL3NZQ1Z1ZVRxT2JYc2RzL2NaZ00zZWFOTlZSVHY1UEo2dEpQQjhCU2wrQnRnbzNUbUlUZkp4VnMKTnJXandwY0pGVEZ6alMybGxnMDZXai9qMVJKSW9NU3ljQ2dpNDZnNjBLOW1Vb1VYQVZBTHdrTm8za3dNYkVwZQprM0RWUVNGTFFnMTcraVFZKzUyd0FRbkx1VE16azdxQ1YvRW0yM3pPOXpZMHRpWjhzTjQ5M1ZneEF1UHcxeUE4CkxBS0JKMVhUc0lPOEhKdHF1TVVWV0JpM3loZ0FmYmFoQUp5WWE0Yys4YWRWUzRMeDE4VVN5aFdzUDZ6aHVrZWgKS1RDTUxWTUFrUnJVTkExOUNiQ1IwOUcyNVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /default-kuma-io-v1alpha1-mesh
  failurePolicy: Fail
  name: mesh.defaulter.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - meshes
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRTnU2cHpPTmdyY2VjQzA1bmhsWjc5ekFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGd3TWpBeE5UQTBPVm9YRFRNeE1EY3pNVEF4TlRBMApPVm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUswSEdubEVPZ0JSQ3pqcE1zK0pjeEM0R01ZTjRMamo0WDQwcEdxL1J2cnZrTElSUTBnUTR1cmsKcldQVStZVGhVWi9xSXI2Y3VxYUlyYUJLMWtodzgraC9XOVJwcjl6R2RKSmQxU1daanZlUU9WV0ttakJoRDdQcgoxM3Q4QlNueUVRMFBHcnF1bmpjaEFUWVpPWkJ0d2FkVVhNWmRicTl6TlRZeHBDNThTZkJvMDlNMVdJNjNzMzI0CmZhK2s2L1ZNSllLRlJzNldRcE00MGdiSHlNdkV5UlhQSFRDTkFyaVRlR3VDQzRKVytHR1pmUkJGNFRGVnphd1UKNXJBbEhhdnZkR2JMNDBhemNIMnYwWTlpNmVRMlFNVzFHRW1VYjNkM1JkMnpqaUtJM2NuZ2ozdEVTa1dXcEIxWgpldHp3Q1plYWljNERxamUyWWVueDk2bVpKUExnYVdFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUNEt2UUlLZGIyZVhBT0E5OFR0Q1hMWWlEbzlEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBSTQ4emYzbUNObkszak10VUpOQVQ1ejBWTnNSV0VaeHMzWEQvUTVva2lJVWhZR2RhNWlodlp5a2ZrNUJWCnBhSmlRNk9xL3NZQ1Z1ZVRxT2JYc2RzL2NaZ00zZWFOTlZSVHY1UEo2dEpQQjhCU2wrQnRnbzNUbUlUZkp4VnMKTnJXandwY0pGVEZ6alMybGxnMDZXai9qMVJKSW9NU3ljQ2dpNDZnNjBLOW1Vb1VYQVZBTHdrTm8za3dNYkVwZQprM0RWUVNGTFFnMTcraVFZKzUyd0FRbkx1VE16azdxQ1YvRW0yM3pPOXpZMHRpWjhzTjQ5M1ZneEF1UHcxeUE4CkxBS0JKMVhUc0lPOEhKdHF1TVVWV0JpM3loZ0FmYmFoQUp5WWE0Yys4YWRWUzRMeDE4VVN5aFdzUDZ6aHVrZWgKS1RDTUxWTUFrUnJVTkExOUNiQ1IwOUcyNVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /owner-reference-kuma-io-v1alpha1
  failurePolicy: Fail
  name: owner-reference.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - circuitbreakers
    - externalservices
    - faultinjections
    - healthchecks
    - retries
    - proxytemplates
    - ratelimits
    - trafficlogs
    - trafficpermissions
    - trafficroutes
    - traffictraces
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRTnU2cHpPTmdyY2VjQzA1bmhsWjc5ekFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGd3TWpBeE5UQTBPVm9YRFRNeE1EY3pNVEF4TlRBMApPVm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUswSEdubEVPZ0JSQ3pqcE1zK0pjeEM0R01ZTjRMamo0WDQwcEdxL1J2cnZrTElSUTBnUTR1cmsKcldQVStZVGhVWi9xSXI2Y3VxYUlyYUJLMWtodzgraC9XOVJwcjl6R2RKSmQxU1daanZlUU9WV0ttakJoRDdQcgoxM3Q4QlNueUVRMFBHcnF1bmpjaEFUWVpPWkJ0d2FkVVhNWmRicTl6TlRZeHBDNThTZkJvMDlNMVdJNjNzMzI0CmZhK2s2L1ZNSllLRlJzNldRcE00MGdiSHlNdkV5UlhQSFRDTkFyaVRlR3VDQzRKVytHR1pmUkJGNFRGVnphd1UKNXJBbEhhdnZkR2JMNDBhemNIMnYwWTlpNmVRMlFNVzFHRW1VYjNkM1JkMnpqaUtJM2NuZ2ozdEVTa1dXcEIxWgpldHp3Q1plYWljNERxamUyWWVueDk2bVpKUExnYVdFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUNEt2UUlLZGIyZVhBT0E5OFR0Q1hMWWlEbzlEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBSTQ4emYzbUNObkszak10VUpOQVQ1ejBWTnNSV0VaeHMzWEQvUTVva2lJVWhZR2RhNWlodlp5a2ZrNUJWCnBhSmlRNk9xL3NZQ1Z1ZVRxT2JYc2RzL2NaZ00zZWFOTlZSVHY1UEo2dEpQQjhCU2wrQnRnbzNUbUlUZkp4VnMKTnJXandwY0pGVEZ6alMybGxnMDZXai9qMVJKSW9NU3ljQ2dpNDZnNjBLOW1Vb1VYQVZBTHdrTm8za3dNYkVwZQprM0RWUVNGTFFnMTcraVFZKzUyd0FRbkx1VE16azdxQ1YvRW0yM3pPOXpZMHRpWjhzTjQ5M1ZneEF1UHcxeUE4CkxBS0JKMVhUc0lPOEhKdHF1TVVWV0JpM3loZ0FmYmFoQUp5WWE0Yys4YWRWUzRMeDE4VVN5aFdzUDZ6aHVrZWgKS1RDTUxWTUFrUnJVTkExOUNiQ1IwOUcyNVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /inject-sidecar
  failurePolicy: Ignore
  name: kuma-injector.kuma.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.2.3
    helm.sh/chart: kuma-0.6.3
  name: kuma-validating-webhook-configuration
  namespace: kuma-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRTnU2cHpPTmdyY2VjQzA1bmhsWjc5ekFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGd3TWpBeE5UQTBPVm9YRFRNeE1EY3pNVEF4TlRBMApPVm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUswSEdubEVPZ0JSQ3pqcE1zK0pjeEM0R01ZTjRMamo0WDQwcEdxL1J2cnZrTElSUTBnUTR1cmsKcldQVStZVGhVWi9xSXI2Y3VxYUlyYUJLMWtodzgraC9XOVJwcjl6R2RKSmQxU1daanZlUU9WV0ttakJoRDdQcgoxM3Q4QlNueUVRMFBHcnF1bmpjaEFUWVpPWkJ0d2FkVVhNWmRicTl6TlRZeHBDNThTZkJvMDlNMVdJNjNzMzI0CmZhK2s2L1ZNSllLRlJzNldRcE00MGdiSHlNdkV5UlhQSFRDTkFyaVRlR3VDQzRKVytHR1pmUkJGNFRGVnphd1UKNXJBbEhhdnZkR2JMNDBhemNIMnYwWTlpNmVRMlFNVzFHRW1VYjNkM1JkMnpqaUtJM2NuZ2ozdEVTa1dXcEIxWgpldHp3Q1plYWljNERxamUyWWVueDk2bVpKUExnYVdFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUNEt2UUlLZGIyZVhBT0E5OFR0Q1hMWWlEbzlEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBSTQ4emYzbUNObkszak10VUpOQVQ1ejBWTnNSV0VaeHMzWEQvUTVva2lJVWhZR2RhNWlodlp5a2ZrNUJWCnBhSmlRNk9xL3NZQ1Z1ZVRxT2JYc2RzL2NaZ00zZWFOTlZSVHY1UEo2dEpQQjhCU2wrQnRnbzNUbUlUZkp4VnMKTnJXandwY0pGVEZ6alMybGxnMDZXai9qMVJKSW9NU3ljQ2dpNDZnNjBLOW1Vb1VYQVZBTHdrTm8za3dNYkVwZQprM0RWUVNGTFFnMTcraVFZKzUyd0FRbkx1VE16azdxQ1YvRW0yM3pPOXpZMHRpWjhzTjQ5M1ZneEF1UHcxeUE4CkxBS0JKMVhUc0lPOEhKdHF1TVVWV0JpM3loZ0FmYmFoQUp5WWE0Yys4YWRWUzRMeDE4VVN5aFdzUDZ6aHVrZWgKS1RDTUxWTUFrUnJVTkExOUNiQ1IwOUcyNVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-kuma-io-v1alpha1
  failurePolicy: Fail
  name: validator.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - circuitbreakers
    - dataplanes
    - externalservices
    - faultinjections
    - healthchecks
    - retries
    - meshes
    - proxytemplates
    - ratelimits
    - trafficlogs
    - trafficpermissions
    - trafficroutes
    - traffictraces
    - zones
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRTnU2cHpPTmdyY2VjQzA1bmhsWjc5ekFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGd3TWpBeE5UQTBPVm9YRFRNeE1EY3pNVEF4TlRBMApPVm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUswSEdubEVPZ0JSQ3pqcE1zK0pjeEM0R01ZTjRMamo0WDQwcEdxL1J2cnZrTElSUTBnUTR1cmsKcldQVStZVGhVWi9xSXI2Y3VxYUlyYUJLMWtodzgraC9XOVJwcjl6R2RKSmQxU1daanZlUU9WV0ttakJoRDdQcgoxM3Q4QlNueUVRMFBHcnF1bmpjaEFUWVpPWkJ0d2FkVVhNWmRicTl6TlRZeHBDNThTZkJvMDlNMVdJNjNzMzI0CmZhK2s2L1ZNSllLRlJzNldRcE00MGdiSHlNdkV5UlhQSFRDTkFyaVRlR3VDQzRKVytHR1pmUkJGNFRGVnphd1UKNXJBbEhhdnZkR2JMNDBhemNIMnYwWTlpNmVRMlFNVzFHRW1VYjNkM1JkMnpqaUtJM2NuZ2ozdEVTa1dXcEIxWgpldHp3Q1plYWljNERxamUyWWVueDk2bVpKUExnYVdFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUNEt2UUlLZGIyZVhBT0E5OFR0Q1hMWWlEbzlEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBSTQ4emYzbUNObkszak10VUpOQVQ1ejBWTnNSV0VaeHMzWEQvUTVva2lJVWhZR2RhNWlodlp5a2ZrNUJWCnBhSmlRNk9xL3NZQ1Z1ZVRxT2JYc2RzL2NaZ00zZWFOTlZSVHY1UEo2dEpQQjhCU2wrQnRnbzNUbUlUZkp4VnMKTnJXandwY0pGVEZ6alMybGxnMDZXai9qMVJKSW9NU3ljQ2dpNDZnNjBLOW1Vb1VYQVZBTHdrTm8za3dNYkVwZQprM0RWUVNGTFFnMTcraVFZKzUyd0FRbkx1VE16azdxQ1YvRW0yM3pPOXpZMHRpWjhzTjQ5M1ZneEF1UHcxeUE4CkxBS0JKMVhUc0lPOEhKdHF1TVVWV0JpM3loZ0FmYmFoQUp5WWE0Yys4YWRWUzRMeDE4VVN5aFdzUDZ6aHVrZWgKS1RDTUxWTUFrUnJVTkExOUNiQ1IwOUcyNVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-v1-service
  failurePolicy: Ignore
  name: service.validator.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRTnU2cHpPTmdyY2VjQzA1bmhsWjc5ekFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGd3TWpBeE5UQTBPVm9YRFRNeE1EY3pNVEF4TlRBMApPVm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUswSEdubEVPZ0JSQ3pqcE1zK0pjeEM0R01ZTjRMamo0WDQwcEdxL1J2cnZrTElSUTBnUTR1cmsKcldQVStZVGhVWi9xSXI2Y3VxYUlyYUJLMWtodzgraC9XOVJwcjl6R2RKSmQxU1daanZlUU9WV0ttakJoRDdQcgoxM3Q4QlNueUVRMFBHcnF1bmpjaEFUWVpPWkJ0d2FkVVhNWmRicTl6TlRZeHBDNThTZkJvMDlNMVdJNjNzMzI0CmZhK2s2L1ZNSllLRlJzNldRcE00MGdiSHlNdkV5UlhQSFRDTkFyaVRlR3VDQzRKVytHR1pmUkJGNFRGVnphd1UKNXJBbEhhdnZkR2JMNDBhemNIMnYwWTlpNmVRMlFNVzFHRW1VYjNkM1JkMnpqaUtJM2NuZ2ozdEVTa1dXcEIxWgpldHp3Q1plYWljNERxamUyWWVueDk2bVpKUExnYVdFQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJUNEt2UUlLZGIyZVhBT0E5OFR0Q1hMWWlEbzlEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBSTQ4emYzbUNObkszak10VUpOQVQ1ejBWTnNSV0VaeHMzWEQvUTVva2lJVWhZR2RhNWlodlp5a2ZrNUJWCnBhSmlRNk9xL3NZQ1Z1ZVRxT2JYc2RzL2NaZ00zZWFOTlZSVHY1UEo2dEpQQjhCU2wrQnRnbzNUbUlUZkp4VnMKTnJXandwY0pGVEZ6alMybGxnMDZXai9qMVJKSW9NU3ljQ2dpNDZnNjBLOW1Vb1VYQVZBTHdrTm8za3dNYkVwZQprM0RWUVNGTFFnMTcraVFZKzUyd0FRbkx1VE16azdxQ1YvRW0yM3pPOXpZMHRpWjhzTjQ5M1ZneEF1UHcxeUE4CkxBS0JKMVhUc0lPOEhKdHF1TVVWV0JpM3loZ0FmYmFoQUp5WWE0Yys4YWRWUzRMeDE4VVN5aFdzUDZ6aHVrZWgKS1RDTUxWTUFrUnJVTkExOUNiQ1IwOUcyNVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-v1-secret
  failurePolicy: Ignore
  name: secret.validator.kuma-admission.kuma.io
  namespaceSelector:
    matchLabels:
      kuma.io/system-namespace: "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - secrets
  sideEffects: None
