---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/ingress-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-ingress
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: kuma-tls-cert
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhakNDQWxLZ0F3SUJBZ0lRTG5VT3AxVStleHdNWkhTUWpvMlhFekFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGt5TkRJd05UQXhPVm9YRFRNeE1Ea3lNakl3TlRBeApPVm93SFRFYk1Ca0dBMVVFQXhNU2EzVnRZUzFqYjI1MGNtOXNMWEJzWVc1bE1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZkc2dJQlcwUWpIY1l5cEJqRDBXWnlrVWhyZ21mWDY5VVRibFNCS3cKYjkrMHduaVNGQkZQNzQxQXB3VTdnS1huSVIzRzJzTjJDVEEwUGk5dEE1OGlKN3hYaHM3VjcxdFVrYUpXbk9yRQo4N28rVFVEQzBrRmNpRTNzcVIvSHBsMnFSK05FUWV3VzNTbkpvdVR2SXE4OU5HNGdvZTJWZHFHS2pKT3R5SmpICjZncTNjT3hjU2hkTjFFVjJUK3Y5QUJCMDlnNmkwNFQxV3IvRlRoZitFZGE0ZDN5Ly9vZXlKV3NmWXpmOEVSc0MKVGdHaGVBdG0rTCtNYnA1b1M1c1pvcERlUUxxamMwcmo2cDdtbzlLUTFyZHFJYWRVcXhoR0w1TVJIci9yQk9kZgpIMXJhSjN6Ti82OGtpR0g2RTI1SWQzU0dkbndMbDZsdVRpMjBxNElhaGZiZ1pRSURBUUFCbzRHd01JR3RNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUUY0SG93M0lwaE5zVEhNbEN1NjFVYUxvT0FkVEJOQmdOVgpIUkVFUmpCRWdoNXJkVzFoTFdOdmJuUnliMnd0Y0d4aGJtVXVhM1Z0WVMxemVYTjBaVzJDSW10MWJXRXRZMjl1CmRISnZiQzF3YkdGdVpTNXJkVzFoTFhONWMzUmxiUzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJT2sKYkFJaFZub1I4ZWU5RXNqZmRmMVRTMnU0S0lkQXNiempzZmc0RmJydXFoSDVMMWZBUFpicHhCRmdjRlFsQUdxbgpVQlQzV21xVktFVkRtemwrZnFuUkZVczlIZUhZaW1ucHdMYlRXdlpraDY0T2ZYblJHMWlMQzRpYko4QmY5Q2g1CnhBK0l6VDI4bm11ZFMrR2hxcGNERm9MbFptcGVST1VXU1drR25MTW5Hck0vMkFHVjRiNE1SOFZuWjZXTTFCT1UKK3hraGhxUGVYZlkyOWxCa0xsTkxTVjd2RzAvUUxxWW5pTUx0U0JrdmcxbDNwZVhQY3JRR3ROcGRodmVIV08yZQplOXVuK2l6ZVRNeUdPd0E2WGhwYlVnN3VPTmpyK3REd2ppZUY2NDhiMGJZWFRVQlNoc0ZQL01DYmoyVDR2OWk0CnZiVzZwUmxITDVnMmNkMms1NlE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmRzZ0lCVzBRakhjWXlwQmpEMFdaeWtVaHJnbWZYNjlVVGJsU0JLd2I5KzB3bmlTCkZCRlA3NDFBcHdVN2dLWG5JUjNHMnNOMkNUQTBQaTl0QTU4aUo3eFhoczdWNzF0VWthSlduT3JFODdvK1RVREMKMGtGY2lFM3NxUi9IcGwycVIrTkVRZXdXM1NuSm91VHZJcTg5Tkc0Z29lMlZkcUdLakpPdHlKakg2Z3EzY094YwpTaGROMUVWMlQrdjlBQkIwOWc2aTA0VDFXci9GVGhmK0VkYTRkM3kvL29leUpXc2ZZemY4RVJzQ1RnR2hlQXRtCitMK01icDVvUzVzWm9wRGVRTHFqYzByajZwN21vOUtRMXJkcUlhZFVxeGhHTDVNUkhyL3JCT2RmSDFyYUozek4KLzY4a2lHSDZFMjVJZDNTR2Rud0xsNmx1VGkyMHE0SWFoZmJnWlFJREFRQUJBb0lCQUdOaHl5VkFkMFdYV0NoSQp2RnN1dHdWMVNadGoxakluSCs3ZGI1UVV4R3NyalRHbmI4QTFkOFNNQ21YanBVd29qQjZYdWJwV1N2bHdWRWloCkJzMjRoV2FMZnIzQWs5aGgxSmtQZzR0TWthQ0x3NFVvKzFLWWlGbUpnUExmQWVHaWNqcURTdjIvR2hEWGlRZE8KRTZmeVYzV1VtRnhyUTZ2L3o4amFuVU8rUmhmS2NYbU90KzJaL3VhclZ1ZnFlUlJXZC9YNG1sRUJmb0dYRWloRgoxRGRPNG5jQVpDREFsTndDMjJCOGVoaTR4TW85R3N6VHE4Q0NJVGc2Y215K1ZYN1RUR00rRFRSYk1RNE9GV3k4CnZ6V0tkYzlMdTJIcGhhd1EwTkhDNDNUS2FmRmFEL2dscm12NytEZ2pZNEtHMWJ2UXovM2lISXlZK3N2OVFkcjEKYzFod2l0a0NnWUVBMlBtLzJrZGFkRDFYZEhoUWlXTGNXWi9YUGxZOGlaak5XQ0Uyb0NPeHhBbFZHZnhXcUxvQgo2QlIyK2JZTmlsVkwxbnZPMEdwTmIycEhYeE1EMFRQcUNJVUxQMlJqb29LYXpUUnRkY0lkbmU4c1VtU2Q0VzlECnNaRzZoWmZNdHk2OXR6ZmVCdmhZNlFKbytKYk9SWHBkTWFMU3U2SUF5dExRODVMeWprOEdIMk1DZ1lFQTRBQ3oKbzExVWVxb3VOekFkT2toelhwa21DSDluVVh0OTFvL25qcE5kaFRhNENOd2t5V09YdWJGbjczZWNsVlhlb2k2bAo2OEpTLzI4VkgrSHJMOHhUcm5La0xlRVZDSWpmQzdMT3dibXU1QXhodFBCdWZLWCttR0VLYm56ZGlPSTkwWmlOCm84OHdIU0xnZk1zdlg5KzNORDNOdldWTUs4QVRCMFR6amZZclA1Y0NnWUVBdmd2TFltcGJMVE5KZGNlb2F4Mi8KZVhVS3VCd2F2RDZ0cGNLNXNQeHl5UTJQajhvNU1XSnpKdzg5d3EwV0lSTmk4TVBTdXpSUkRRU2U3UVNmdEU3dgpiM1R4REI1bk1zR0l5N0pmS2VUVHdqRHF0bVJROFZOZWpKcmpMLzV0SGduL3ZBcGdHK1ROSTVLcjFRbHFOT3JmCjFBa1U0YW9kWFluWDRYRFZxWlpIKzVjQ2dZQnNURXFOY0FENDhUQTQ1RjB0SVh3TnYxTmhCbCtvU0dFMWpBdHkKcGhLdjVoMmh3dlZTSElGdGVMVDhWTUx5ZkRxUUJLZVpUVEVkWjlJNXdOc1pGOXRaV3ZtL2FMUG5sV3pvMWdFYQpMakM4OXJPQ2JEK3VxZjVtSTN5TW9IZm14eU1HSTVCUEkwdHF1c0wzOHJBcjFSaFkvSXhzeGYzR3BTMU45V3NmCk5tWUFid0tCZ0ZBeHNiOW83cGV2d05lK1JsTUh0K2huZ1hyREE0amdmODFaVEVKclYreXQrQzg3Z2ZEUnYzaDkKLzc5Q1Z4K3JmRXBLK2NsQ0dwS2gvbFNSVVA3ZDBCYmRvdms0Nmc3T2xHL2pMdUl0c2poRXhXYVJVVkFaeFBuawpkMlRDYnM2L1RGUUl2d0dIUGVDcGpiOG9xS3pGbHNpNHhRYVF0K0ZWS0U4bDF3TEwyRlBJCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtUdFpZZHNBZkdoY3hLL3ZxeUtWZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE1TWpReU1EVXdNVGxhRncwek1UQTVNakl5TURVdwpNVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDYlFQZEZqMFlhTy9JbWptYW9yVG91bTVVbHhoMHBpV2czc2RoOG9tVzNtTnRuRzhZeWlDRVgKUkswcks3T25VUHAwODhlREk3UDFrV2paRThjY0tYUVFYYmlyYmkwdThCNjB2RVZRT09VbjRxTFpicWwvN3cxSQpkSUx5YW1wY1Rlalh0NmxhUXBuMThaajFLTEhSeUVqZlRLR2x6TW4yVHZtVnhHS2pBK1FjeDUyUm5udGtGY1puCkNndkc2RWhvZVVaT3U4VTlhYURQWXY0RjBRWUdoRFVHYnJ1MUplQU5kSlpVc3F6YzZCclhBZ25lMFJDcHZlRmwKM1FNYllpMExhclJzdkZ6cG1lcllIaWRQMUZuQjgrRjgyS3hLcFhKd0NRKzRlTGlkakYzakNWa1ZudHFxbjdBcwptd3dyWmZvQU1veXhmRXp5WGFtT1NaV2tQcnU5ODVyL0FnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUJlQjZNTnlLWVRiRXh6SlFydXRWR2k2RGdIVXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF6Uk5NelIyT1RaWWR3SHY4d1V4aHJzQ2hpRjBLcWdMNElKT2JXQlBxUFhabDh6N2NDRFBBcGFFU2hzClFGNkhoKzdDUG1GMnFaZ2dHUUNoZjRTd2RNSzQ2RzZDQURqRkh1Tk5ucnZWNDNEalV6ZkUrTFp4MjRqaHJkSzAKSUxjeVExTTRtVHU1d2tkVjBKZ2pOeWZheE9SaklYZHMyZ3R6VTBJOXZzc3R5TWEvS3NjMzhIL25DRVNSVG1qMwphaWRLOC8zL1VXSmxTcm9odnc1dUd5bDNYeDFDNTgwL0NwMXQ0T2MxSW9SWmdDTmxWcnF2MHdEMFZYMnlvWVd1ClB6Q0ZKTGNPc0daRmNkUVFYdGY3M2x3eUo5UEFyb1h0VGVQc09mc1hza1MvM3hSRkdadmdGMG9VZzJ4WmR5TDAKcGFiaEREZTZ6MVJKaXJvZnBYY2NRbjA1OUZFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: kuma/templates/cp-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kuma-control-plane-config
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    # use this file to override default configuration of `kuma-cp`
    #
    # see conf/kuma-cp.conf.yml for available settings
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-control-plane
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - configmaps
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - kuma.io
    resources:
      - dataplanes
      - dataplaneinsights
      - meshes
      - zones
      - zoneinsights
      - zoneingresses
      - zoneingressinsights
      - meshinsights
      - serviceinsights
      - proxytemplates
      - ratelimits
      - trafficpermissions
      - trafficroutes
      - timeouts
      - retries
      - circuitbreakers
      - virtualoutbounds
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - kuma.io
    resources:
      - externalservices
      - faultinjections
      - healthchecks
      - trafficlogs
      - traffictraces
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - pods/finalizers
    verbs:
      - "*"
  - apiGroups:
      - kuma.io
    resources:
      - meshes/finalizers
    verbs:
      - "*"
  - apiGroups:
      - kuma.io
    resources:
      - dataplanes/finalizers
    verbs:
      - "*"
  # validate k8s token before issuing mTLS cert
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-control-plane
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-control-plane
subjects:
  - kind: ServiceAccount
    name: kuma-control-plane
    namespace: kuma-system
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kuma-control-plane
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuma-control-plane
subjects:
  - kind: ServiceAccount
    name: kuma-control-plane
    namespace: kuma-system
---
# Source: kuma/templates/cp-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5680"
spec:
  type: ClusterIP
  ports:
    - port: 5681
      name: http-api-server
    - port: 5682
      name: https-api-server
    - port: 443
      name: https-admission-server
      targetPort: 5443
    - port: 5676
      name: mads-server
    - port: 5678
      name: dp-server
    - port: 5653
      name: dns-server
      protocol: UDP
  selector:
    app: kuma-control-plane
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
---
# Source: kuma/templates/ingress-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kuma-ingress
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: LoadBalancer
  ports:
    - port: 10001
      protocol: TCP
      targetPort: 10001
  selector:
    app: kuma-ingress
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
---
# Source: kuma/templates/cp-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
    app: kuma-control-plane
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: kuma
      app.kubernetes.io/instance: kuma
      app: kuma-control-plane
  template:
    metadata:
      annotations:
        checksum/config: 6df33ec160599ac1a5e9fda109e2ba0d02c865f926ac14ecf92895e96b70a228
        checksum/tls-secrets: e9168cd5bd4389147294f0875c12e00619460b922033d40873bf483ef983194c
      labels:
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app: kuma-control-plane
    spec:
      serviceAccountName: kuma-control-plane
      nodeSelector:
        
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      containers:
        - name: control-plane
          image: "docker.io/kumahq/kuma-cp:1.3.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: KUMA_API_SERVER_READ_ONLY
              value: "true"
            - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
              value: "false"
            - name: KUMA_DP_SERVER_HDS_ENABLED
              value: "false"
            - name: KUMA_ENVIRONMENT
              value: "kubernetes"
            - name: KUMA_GENERAL_TLS_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.crt"
            - name: KUMA_GENERAL_TLS_KEY_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.key"
            - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
              value: "docker.io/kumahq/kuma-init:1.3.0"
            - name: KUMA_MODE
              value: "zone"
            - name: KUMA_MULTIZONE_ZONE_GLOBAL_ADDRESS
              value: "grpcs://100.100.100.100:5685"
            - name: KUMA_MULTIZONE_ZONE_NAME
              value: "TODO"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
              value: "/var/run/secrets/kuma.io/tls-cert"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
              value: "5443"
            - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
              value: "kuma-control-plane"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/ca.crt"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
              value: "false"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
              value: "docker.io/kumahq/kuma-dp:1.3.0"
            - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
              value: "kuma-system"
            - name: KUMA_STORE_TYPE
              value: "kubernetes"
          args:
            - run
            - --log-level=info
            - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
          ports:
            - containerPort: 5681
            - containerPort: 5682
            - containerPort: 5443
            - containerPort: 5678
            - containerPort: 5653
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /healthy
              port: 5680
          readinessProbe:
            httpGet:
              path: /ready
              port: 5680
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert
              readOnly: true
            - name: kuma-control-plane-config
              mountPath: /etc/kuma.io/kuma-control-plane
              readOnly: true
      volumes:
        - name: general-tls-cert
          secret:
            secretName: kuma-tls-cert
        - name: kuma-control-plane-config
          configMap:
            name: kuma-control-plane-config
---
# Source: kuma/templates/ingress-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-ingress
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
    app: kuma-ingress
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kuma
      app.kubernetes.io/instance: kuma
      app: kuma-ingress
  template:
    metadata:
      annotations:
        kuma.io/ingress: enabled
      labels:
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app: kuma-ingress
    spec:
      serviceAccountName: kuma-ingress
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      containers:
        - name: ingress
          image: "docker.io/kumahq/kuma-dp:1.3.0"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUMA_CONTROL_PLANE_URL
              value: "https://kuma-control-plane.kuma-system:5678"
            - name: KUMA_CONTROL_PLANE_CA_CERT_FILE
              value: /var/run/secrets/kuma.io/tls-cert/ca.crt
            - name: KUMA_DATAPLANE_NAME
              value: $(POD_NAME).$(POD_NAMESPACE)
            - name: KUMA_DATAPLANE_ADMIN_PORT
              value: "9901"
            - name: KUMA_DATAPLANE_DRAIN_TIME
              value: 30s
            - name: KUMA_DATAPLANE_RUNTIME_TOKEN_PATH
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: KUMA_DATAPLANE_PROXY_TYPE
              value: "ingress"
          args:
            - run
            - --log-level=info
          ports:
            - containerPort: 10001
          livenessProbe:
            exec:
              command:
                - wget
                - -qO-
                - http://127.0.0.1:9901
            failureThreshold: 12
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            exec:
              command:
                - wget
                - -qO-
                - http://127.0.0.1:9901
            failureThreshold: 12
            initialDelaySeconds: 1
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          volumeMounts:
            - name: kuma-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert
              readOnly: true
      volumes:
        - name: kuma-tls-cert
          secret:
            secretName: kuma-tls-cert
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: admissionregistration.k8s.io/v1

kind: MutatingWebhookConfiguration
metadata:
  name: kuma-admission-mutating-webhook-configuration
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: mesh.defaulter.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtUdFpZZHNBZkdoY3hLL3ZxeUtWZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE1TWpReU1EVXdNVGxhRncwek1UQTVNakl5TURVdwpNVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDYlFQZEZqMFlhTy9JbWptYW9yVG91bTVVbHhoMHBpV2czc2RoOG9tVzNtTnRuRzhZeWlDRVgKUkswcks3T25VUHAwODhlREk3UDFrV2paRThjY0tYUVFYYmlyYmkwdThCNjB2RVZRT09VbjRxTFpicWwvN3cxSQpkSUx5YW1wY1Rlalh0NmxhUXBuMThaajFLTEhSeUVqZlRLR2x6TW4yVHZtVnhHS2pBK1FjeDUyUm5udGtGY1puCkNndkc2RWhvZVVaT3U4VTlhYURQWXY0RjBRWUdoRFVHYnJ1MUplQU5kSlpVc3F6YzZCclhBZ25lMFJDcHZlRmwKM1FNYllpMExhclJzdkZ6cG1lcllIaWRQMUZuQjgrRjgyS3hLcFhKd0NRKzRlTGlkakYzakNWa1ZudHFxbjdBcwptd3dyWmZvQU1veXhmRXp5WGFtT1NaV2tQcnU5ODVyL0FnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUJlQjZNTnlLWVRiRXh6SlFydXRWR2k2RGdIVXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF6Uk5NelIyT1RaWWR3SHY4d1V4aHJzQ2hpRjBLcWdMNElKT2JXQlBxUFhabDh6N2NDRFBBcGFFU2hzClFGNkhoKzdDUG1GMnFaZ2dHUUNoZjRTd2RNSzQ2RzZDQURqRkh1Tk5ucnZWNDNEalV6ZkUrTFp4MjRqaHJkSzAKSUxjeVExTTRtVHU1d2tkVjBKZ2pOeWZheE9SaklYZHMyZ3R6VTBJOXZzc3R5TWEvS3NjMzhIL25DRVNSVG1qMwphaWRLOC8zL1VXSmxTcm9odnc1dUd5bDNYeDFDNTgwL0NwMXQ0T2MxSW9SWmdDTmxWcnF2MHdEMFZYMnlvWVd1ClB6Q0ZKTGNPc0daRmNkUVFYdGY3M2x3eUo5UEFyb1h0VGVQc09mc1hza1MvM3hSRkdadmdGMG9VZzJ4WmR5TDAKcGFiaEREZTZ6MVJKaXJvZnBYY2NRbjA1OUZFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /default-kuma-io-v1alpha1-mesh
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - meshes
    sideEffects: None
  - name: owner-reference.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtUdFpZZHNBZkdoY3hLL3ZxeUtWZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE1TWpReU1EVXdNVGxhRncwek1UQTVNakl5TURVdwpNVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDYlFQZEZqMFlhTy9JbWptYW9yVG91bTVVbHhoMHBpV2czc2RoOG9tVzNtTnRuRzhZeWlDRVgKUkswcks3T25VUHAwODhlREk3UDFrV2paRThjY0tYUVFYYmlyYmkwdThCNjB2RVZRT09VbjRxTFpicWwvN3cxSQpkSUx5YW1wY1Rlalh0NmxhUXBuMThaajFLTEhSeUVqZlRLR2x6TW4yVHZtVnhHS2pBK1FjeDUyUm5udGtGY1puCkNndkc2RWhvZVVaT3U4VTlhYURQWXY0RjBRWUdoRFVHYnJ1MUplQU5kSlpVc3F6YzZCclhBZ25lMFJDcHZlRmwKM1FNYllpMExhclJzdkZ6cG1lcllIaWRQMUZuQjgrRjgyS3hLcFhKd0NRKzRlTGlkakYzakNWa1ZudHFxbjdBcwptd3dyWmZvQU1veXhmRXp5WGFtT1NaV2tQcnU5ODVyL0FnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUJlQjZNTnlLWVRiRXh6SlFydXRWR2k2RGdIVXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF6Uk5NelIyT1RaWWR3SHY4d1V4aHJzQ2hpRjBLcWdMNElKT2JXQlBxUFhabDh6N2NDRFBBcGFFU2hzClFGNkhoKzdDUG1GMnFaZ2dHUUNoZjRTd2RNSzQ2RzZDQURqRkh1Tk5ucnZWNDNEalV6ZkUrTFp4MjRqaHJkSzAKSUxjeVExTTRtVHU1d2tkVjBKZ2pOeWZheE9SaklYZHMyZ3R6VTBJOXZzc3R5TWEvS3NjMzhIL25DRVNSVG1qMwphaWRLOC8zL1VXSmxTcm9odnc1dUd5bDNYeDFDNTgwL0NwMXQ0T2MxSW9SWmdDTmxWcnF2MHdEMFZYMnlvWVd1ClB6Q0ZKTGNPc0daRmNkUVFYdGY3M2x3eUo5UEFyb1h0VGVQc09mc1hza1MvM3hSRkdadmdGMG9VZzJ4WmR5TDAKcGFiaEREZTZ6MVJKaXJvZnBYY2NRbjA1OUZFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /owner-reference-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
        resources:
          - circuitbreakers
          - externalservices
          - faultinjections
          - healthchecks
          - retries
          - proxytemplates
          - ratelimits
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
          - virtualoutbounds
    
      
    sideEffects: None
  - name: kuma-injector.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtUdFpZZHNBZkdoY3hLL3ZxeUtWZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE1TWpReU1EVXdNVGxhRncwek1UQTVNakl5TURVdwpNVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDYlFQZEZqMFlhTy9JbWptYW9yVG91bTVVbHhoMHBpV2czc2RoOG9tVzNtTnRuRzhZeWlDRVgKUkswcks3T25VUHAwODhlREk3UDFrV2paRThjY0tYUVFYYmlyYmkwdThCNjB2RVZRT09VbjRxTFpicWwvN3cxSQpkSUx5YW1wY1Rlalh0NmxhUXBuMThaajFLTEhSeUVqZlRLR2x6TW4yVHZtVnhHS2pBK1FjeDUyUm5udGtGY1puCkNndkc2RWhvZVVaT3U4VTlhYURQWXY0RjBRWUdoRFVHYnJ1MUplQU5kSlpVc3F6YzZCclhBZ25lMFJDcHZlRmwKM1FNYllpMExhclJzdkZ6cG1lcllIaWRQMUZuQjgrRjgyS3hLcFhKd0NRKzRlTGlkakYzakNWa1ZudHFxbjdBcwptd3dyWmZvQU1veXhmRXp5WGFtT1NaV2tQcnU5ODVyL0FnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUJlQjZNTnlLWVRiRXh6SlFydXRWR2k2RGdIVXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF6Uk5NelIyT1RaWWR3SHY4d1V4aHJzQ2hpRjBLcWdMNElKT2JXQlBxUFhabDh6N2NDRFBBcGFFU2hzClFGNkhoKzdDUG1GMnFaZ2dHUUNoZjRTd2RNSzQ2RzZDQURqRkh1Tk5ucnZWNDNEalV6ZkUrTFp4MjRqaHJkSzAKSUxjeVExTTRtVHU1d2tkVjBKZ2pOeWZheE9SaklYZHMyZ3R6VTBJOXZzc3R5TWEvS3NjMzhIL25DRVNSVG1qMwphaWRLOC8zL1VXSmxTcm9odnc1dUd5bDNYeDFDNTgwL0NwMXQ0T2MxSW9SWmdDTmxWcnF2MHdEMFZYMnlvWVd1ClB6Q0ZKTGNPc0daRmNkUVFYdGY3M2x3eUo5UEFyb1h0VGVQc09mc1hza1MvM3hSRkdadmdGMG9VZzJ4WmR5TDAKcGFiaEREZTZ6MVJKaXJvZnBYY2NRbjA1OUZFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /inject-sidecar
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: admissionregistration.k8s.io/v1

kind: ValidatingWebhookConfiguration
metadata:
  name: kuma-validating-webhook-configuration
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtUdFpZZHNBZkdoY3hLL3ZxeUtWZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE1TWpReU1EVXdNVGxhRncwek1UQTVNakl5TURVdwpNVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDYlFQZEZqMFlhTy9JbWptYW9yVG91bTVVbHhoMHBpV2czc2RoOG9tVzNtTnRuRzhZeWlDRVgKUkswcks3T25VUHAwODhlREk3UDFrV2paRThjY0tYUVFYYmlyYmkwdThCNjB2RVZRT09VbjRxTFpicWwvN3cxSQpkSUx5YW1wY1Rlalh0NmxhUXBuMThaajFLTEhSeUVqZlRLR2x6TW4yVHZtVnhHS2pBK1FjeDUyUm5udGtGY1puCkNndkc2RWhvZVVaT3U4VTlhYURQWXY0RjBRWUdoRFVHYnJ1MUplQU5kSlpVc3F6YzZCclhBZ25lMFJDcHZlRmwKM1FNYllpMExhclJzdkZ6cG1lcllIaWRQMUZuQjgrRjgyS3hLcFhKd0NRKzRlTGlkakYzakNWa1ZudHFxbjdBcwptd3dyWmZvQU1veXhmRXp5WGFtT1NaV2tQcnU5ODVyL0FnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUJlQjZNTnlLWVRiRXh6SlFydXRWR2k2RGdIVXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF6Uk5NelIyT1RaWWR3SHY4d1V4aHJzQ2hpRjBLcWdMNElKT2JXQlBxUFhabDh6N2NDRFBBcGFFU2hzClFGNkhoKzdDUG1GMnFaZ2dHUUNoZjRTd2RNSzQ2RzZDQURqRkh1Tk5ucnZWNDNEalV6ZkUrTFp4MjRqaHJkSzAKSUxjeVExTTRtVHU1d2tkVjBKZ2pOeWZheE9SaklYZHMyZ3R6VTBJOXZzc3R5TWEvS3NjMzhIL25DRVNSVG1qMwphaWRLOC8zL1VXSmxTcm9odnc1dUd5bDNYeDFDNTgwL0NwMXQ0T2MxSW9SWmdDTmxWcnF2MHdEMFZYMnlvWVd1ClB6Q0ZKTGNPc0daRmNkUVFYdGY3M2x3eUo5UEFyb1h0VGVQc09mc1hza1MvM3hSRkdadmdGMG9VZzJ4WmR5TDAKcGFiaEREZTZ6MVJKaXJvZnBYY2NRbjA1OUZFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /validate-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - circuitbreakers
          - dataplanes
          - externalservices
          - faultinjections
          - healthchecks
          - retries
          - meshes
          - proxytemplates
          - ratelimits
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
          - virtualoutbounds
          - zones
    
      
    sideEffects: None
  - name: service.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtUdFpZZHNBZkdoY3hLL3ZxeUtWZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE1TWpReU1EVXdNVGxhRncwek1UQTVNakl5TURVdwpNVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDYlFQZEZqMFlhTy9JbWptYW9yVG91bTVVbHhoMHBpV2czc2RoOG9tVzNtTnRuRzhZeWlDRVgKUkswcks3T25VUHAwODhlREk3UDFrV2paRThjY0tYUVFYYmlyYmkwdThCNjB2RVZRT09VbjRxTFpicWwvN3cxSQpkSUx5YW1wY1Rlalh0NmxhUXBuMThaajFLTEhSeUVqZlRLR2x6TW4yVHZtVnhHS2pBK1FjeDUyUm5udGtGY1puCkNndkc2RWhvZVVaT3U4VTlhYURQWXY0RjBRWUdoRFVHYnJ1MUplQU5kSlpVc3F6YzZCclhBZ25lMFJDcHZlRmwKM1FNYllpMExhclJzdkZ6cG1lcllIaWRQMUZuQjgrRjgyS3hLcFhKd0NRKzRlTGlkakYzakNWa1ZudHFxbjdBcwptd3dyWmZvQU1veXhmRXp5WGFtT1NaV2tQcnU5ODVyL0FnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUJlQjZNTnlLWVRiRXh6SlFydXRWR2k2RGdIVXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF6Uk5NelIyT1RaWWR3SHY4d1V4aHJzQ2hpRjBLcWdMNElKT2JXQlBxUFhabDh6N2NDRFBBcGFFU2hzClFGNkhoKzdDUG1GMnFaZ2dHUUNoZjRTd2RNSzQ2RzZDQURqRkh1Tk5ucnZWNDNEalV6ZkUrTFp4MjRqaHJkSzAKSUxjeVExTTRtVHU1d2tkVjBKZ2pOeWZheE9SaklYZHMyZ3R6VTBJOXZzc3R5TWEvS3NjMzhIL25DRVNSVG1qMwphaWRLOC8zL1VXSmxTcm9odnc1dUd5bDNYeDFDNTgwL0NwMXQ0T2MxSW9SWmdDTmxWcnF2MHdEMFZYMnlvWVd1ClB6Q0ZKTGNPc0daRmNkUVFYdGY3M2x3eUo5UEFyb1h0VGVQc09mc1hza1MvM3hSRkdadmdGMG9VZzJ4WmR5TDAKcGFiaEREZTZ6MVJKaXJvZnBYY2NRbjA1OUZFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /validate-v1-service
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - services
    sideEffects: None
  - name: secret.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    namespaceSelector:
      matchLabels:
        kuma.io/system-namespace: "true"
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtUdFpZZHNBZkdoY3hLL3ZxeUtWZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE1TWpReU1EVXdNVGxhRncwek1UQTVNakl5TURVdwpNVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDYlFQZEZqMFlhTy9JbWptYW9yVG91bTVVbHhoMHBpV2czc2RoOG9tVzNtTnRuRzhZeWlDRVgKUkswcks3T25VUHAwODhlREk3UDFrV2paRThjY0tYUVFYYmlyYmkwdThCNjB2RVZRT09VbjRxTFpicWwvN3cxSQpkSUx5YW1wY1Rlalh0NmxhUXBuMThaajFLTEhSeUVqZlRLR2x6TW4yVHZtVnhHS2pBK1FjeDUyUm5udGtGY1puCkNndkc2RWhvZVVaT3U4VTlhYURQWXY0RjBRWUdoRFVHYnJ1MUplQU5kSlpVc3F6YzZCclhBZ25lMFJDcHZlRmwKM1FNYllpMExhclJzdkZ6cG1lcllIaWRQMUZuQjgrRjgyS3hLcFhKd0NRKzRlTGlkakYzakNWa1ZudHFxbjdBcwptd3dyWmZvQU1veXhmRXp5WGFtT1NaV2tQcnU5ODVyL0FnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUJlQjZNTnlLWVRiRXh6SlFydXRWR2k2RGdIVXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF6Uk5NelIyT1RaWWR3SHY4d1V4aHJzQ2hpRjBLcWdMNElKT2JXQlBxUFhabDh6N2NDRFBBcGFFU2hzClFGNkhoKzdDUG1GMnFaZ2dHUUNoZjRTd2RNSzQ2RzZDQURqRkh1Tk5ucnZWNDNEalV6ZkUrTFp4MjRqaHJkSzAKSUxjeVExTTRtVHU1d2tkVjBKZ2pOeWZheE9SaklYZHMyZ3R6VTBJOXZzc3R5TWEvS3NjMzhIL25DRVNSVG1qMwphaWRLOC8zL1VXSmxTcm9odnc1dUd5bDNYeDFDNTgwL0NwMXQ0T2MxSW9SWmdDTmxWcnF2MHdEMFZYMnlvWVd1ClB6Q0ZKTGNPc0daRmNkUVFYdGY3M2x3eUo5UEFyb1h0VGVQc09mc1hza1MvM3hSRkdadmdGMG9VZzJ4WmR5TDAKcGFiaEREZTZ6MVJKaXJvZnBYY2NRbjA1OUZFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /validate-v1-secret
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - secrets
    sideEffects: None
---
# Source: kuma/templates/pre-delete-webhooks.yaml
# HELM first deletes RBAC of Kuma, then it tries to delete Secrets. We've got validating webhook on Secrets.
# But even that the policy of this webhook is Ignore, it fails because Kuma does not have permission to access Secrets anymore.
# Therefore we first need to delete webhook so we can delete the rest of the deployment
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-pre-delete-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-patch-ns-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kuma-install-missing-crds-scripts
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
data:
  install_missing_crds.sh: |
    #!/usr/bin/env sh

    if [ -s /kuma/missing/crds.yaml ]; then
      echo "/kuma/missing/crds.yaml found and is not empty, adding crds"
      kubectl create -f /kuma/missing/crds.yaml
    else
      echo "/kuma/missing/crds.yaml not found or empty, it looks like there is no missing crds"
    fi
  save_missing_crds.sh: |
    #!/usr/bin/env sh

    missing_crds="$(kumactl install crds --only-missing)"

    if [ -n "${missing_crds}" ]; then
      echo "found missing crds - saving to /kuma/missing/crds.yaml"
      echo "${missing_crds}" > /kuma/missing/crds.yaml
    fi
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-pre-delete-job
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    resourceNames:
      - kuma-validating-webhook-configuration
    verbs:
      - delete
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-patch-ns-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    resourceNames:
      - kuma-system
    verbs:
      - get
      - patch
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - "apiextensions.k8s.io"
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - list
      - get
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-pre-delete-job
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-pre-delete-job
subjects:
  - kind: ServiceAccount
    name: kuma-pre-delete-job
    namespace: kuma-system
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-patch-ns-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-patch-ns-job
subjects:
  - kind: ServiceAccount
    name: kuma-patch-ns-job
    namespace: kuma-system
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-install-missing-crds
subjects:
  - kind: ServiceAccount
    name: kuma-install-missing-crds
    namespace: kuma-system
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-delete-webhook
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-delete"
    
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    metadata:
      name: kuma-delete-webhook
      labels:
    
        helm.sh/chart: kuma-0.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.3.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-pre-delete-job
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-delete-job
          image: "bitnami/kubectl:1.20"
          command:
            - 'kubectl'
            - 'delete'
            - 'ValidatingWebhookConfiguration'
            - kuma-validating-webhook-configuration
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-patch-ns
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-install"
    
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    metadata:
      name: kuma-patch-ns-script
      labels:
    
        helm.sh/chart: kuma-0.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.3.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-patch-ns-job
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-install-job
          image: "bitnami/kubectl:1.20"
          command:
            - 'kubectl'
            - 'patch'
            - 'namespace'
            - "kuma-system"
            - '--type'
            - 'merge'
            - '--patch'
            - '{ "metadata": { "labels": { "kuma.io/system-namespace": "true" } } }'
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-install-missing-crds
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.7.0
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.3.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  template:
    metadata:
      name: kuma-install-missing-crds-job
      labels:
    
        helm.sh/chart: kuma-0.7.0
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.3.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-install-missing-crds
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-upgrade-job
          image: "bitnami/kubectl:1.20"
          command:
            - '/kuma/scripts/install_missing_crds.sh'
          volumeMounts:
            - mountPath: /kuma/missing
              name: missing-crds
              readOnly: true
            - mountPath: /kuma/scripts
              name: scripts
              readOnly: true
      initContainers:
        - name: pre-upgrade-job-init
          image: "docker.io/kumahq/kumactl:1.3.0"
          volumeMounts:
          - mountPath: /kuma/missing
            name: missing-crds
          - mountPath: /kuma/scripts
            name: scripts
            readOnly: true
          command:
          - '/kuma/scripts/save_missing_crds.sh'
      volumes:
        - name: scripts
          configMap:
            name: kuma-install-missing-crds-scripts
            defaultMode: 0755
        - name: missing-crds
          emptyDir: {}
