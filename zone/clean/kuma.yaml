---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/ingress-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-ingress
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: kuma-tls-cert
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhekNDQWxPZ0F3SUJBZ0lSQUxoZTZSQU5icDVpVTc5TnNOR0RPaVl3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEEzTURnd016UXlORFJhRncwek1UQTNNRFl3TXpReQpORFJhTUIweEd6QVpCZ05WQkFNVEVtdDFiV0V0WTI5dWRISnZiQzF3YkdGdVpUQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFKOUNORGxCcjFpSW94eWdIOFdSUGRXS2ZIcC9MZlhwNm90M2JHVnMKRGEvM29OZkxOVXM4Z1VaeTBnRUdBYmNNNjNpMStpYXJiWUNJQVVUSkZ0SCs5MXpwMnpRVUczRWMrM24vYThqWApzMExId09uVVNRZGdxZVZJaEtoVytjZzQ1aDZZaTE5Q2VwUlBjYmJPbnRxeU11aGxGM1BKbHNZOURuTFlUVmc3CmF6bkxjbmRWQTdlaExBdG9YWUMxYUx5RGNhckI3T0N5NUtnT2VDRkk4L2RTR2FMQXpLTytHMTFyMFFydW5KYUUKVDB1MUthVDhidVgrQTRRWnFQQ2xaZk93eGxJRDluVXg5cEJMRy91ZG1yb25JME9DbjhnRHN0cmFBZFQra25rMwpSSVlyU3FBdGI0UTdNUVhvVlh4MkVLaGJZMHFabGZBdXROUEluMUluQjdBTDB3Y0NBd0VBQWFPQnNEQ0JyVEFPCkJnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0cKQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVINXhNUnZvemUrZ2xlU2x5cmViR2hXSjRUMWN3VFFZRApWUjBSQkVZd1JJSWVhM1Z0WVMxamIyNTBjbTlzTFhCc1lXNWxMbXQxYldFdGMzbHpkR1Z0Z2lKcmRXMWhMV052CmJuUnliMnd0Y0d4aGJtVXVhM1Z0WVMxemVYTjBaVzB1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQlMKN0VMMmtnNWsyQmZzSjdvU2ducm5GQVlZalpyMmtkdmtrMkZXTDFuL0hsTDdKWkR5OS9ZVldlUVQ3dkZJK2s1bQpXMmE1MVRrb0NOc3Fyc2RreDZBbG8raERuZmd6ejdLWGFISi9aSEQzcDUwNnpBZ1VmeGNqalJUeEhsTGl4VUttCnFyOTg1cU1ROEV4aFBGSGRmNEErMWMzaGV5RHkvcDBJdkM3czljUXp3U0Rab0gvNDN4WTRKclpkT0FKNk1JYloKRlRsdW5oN09jRXQ0ZVJldVV1cCtxNEM2SERjS2ZRd3pSazlZUUN1anc0K1hZRFU1b2ZJb09DNG5nQUMxUEd5Kwpua1VwRlM1eFpVR3pjais4SXdpU3M4QnI5K2dsbUpXN1BISmM5YUlPTzF4Skw0MGFpN05LbHNIaTgvc2tXZkF3Cm9TUWVpYVU0UXpZaCtlVW0rYUZqCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbjBJME9VR3ZXSWlqSEtBZnhaRTkxWXA4ZW44dDllbnFpM2RzWld3TnIvZWcxOHMxClN6eUJSbkxTQVFZQnR3enJlTFg2SnF0dGdJZ0JSTWtXMGY3M1hPbmJOQlFiY1J6N2VmOXJ5TmV6UXNmQTZkUkoKQjJDcDVVaUVxRmI1eURqbUhwaUxYMEo2bEU5eHRzNmUyckl5NkdVWGM4bVd4ajBPY3RoTldEdHJPY3R5ZDFVRAp0NkVzQzJoZGdMVm92SU54cXNIczRMTGtxQTU0SVVqejkxSVpvc0RNbzc0YlhXdlJDdTZjbG9SUFM3VXBwUHh1CjVmNERoQm1vOEtWbDg3REdVZ1AyZFRIMmtFc2IrNTJhdWljalE0S2Z5QU95MnRvQjFQNlNlVGRFaGl0S29DMXYKaERzeEJlaFZmSFlRcUZ0alNwbVY4QzYwMDhpZlVpY0hzQXZUQndJREFRQUJBb0lCQURyaWw3eXo5TW1mZS9BUgpwSzNBVGtTdXQrZnpMbU5HNGxvL0JlMWFUcFZKMGtiMzgvU2xvb2NSM1dSVGZEN2FvQlk1OHd4cFJrdkgvZkFaCkNqOExMeHREdkxFODNnaXMxcTc5S2pWUXpBOWRISTlZMXNmTGpnWWhFaXZNUFA4elNxTDFkRkw4bWFaTTJaYm0KUHdaTjdWVFFUQ09iM2d2ZWQ0RXZTU25lam44SGpTYUJBdUVyamVNTGhyNUhHMkdMY04yNFVreW0zRG1JTi9NSApheWFSSEF2Nk5jYmt4SzlMdjNVSjhsd2J1cE5XeVdKZ1BESUVBSVl5clpkZkNraG43OVNtR2s4NExtamtjWDl6CnR4NmZMS0N6V0FXbHpOczZtaHQwVFJydjVUTzkvMG1HTkljWitvQnBndGlqZFdQZWZRNURCOHh1aW1VaHhwN3EKQjNkWVhrRUNnWUVBenZPS2o1OVNveVV6RVY3eTdqNzBMaHM5Q2Nmd1FvYzBHQytudGI5dDF0ZEx6c203Zm5BSQpTeVF3ZGVJbGN2djg5cmZndEsveWJFRGE2Qmx6eHhxM21aWWc1NHVLNTVVVWd0YTdyWjRvVWtkbnJHQmpNZWpICmpicFhTQ2FFaC9XemFkY3NOaE9PQU9XQ3ZkemtzcVFxSWZydUI1OUo3ZzQrMVg4SS9kdnloT1VDZ1lFQXhRRDYKblBwUjdPV2FCYUJOcU14dEFtTGh4VFc4dFRtUnduU2pDWUJjbGFiTG1qSDIveGVrY2R6VzY3dVRHd2hKOEpHUApYRi9MVk9Ua0hKcUw4M1JLZWhvNm9ORHlqb0ZQZ1ZxVWNKZVRoK0VsRmNyZlJkdVlzWkZxYnNIMEVQVXRqbU1GCklma2FCeklFczc2YWJtdHVMbitYQ2ZnVm82aVc3dXVKSTBEZmhYc0NnWUJlVTNUeFYyNEQvRjJWYWxDUnROSDQKL2VOSlJQOUdZM2VrR254M2c0UWQ2MDJiT0Nta1RJNExLYmlJMG9XOUxndXpyRVhZTldYcVgza25Wd3FGVXJFaQphT0lnaDJMTmdRNnpRQXFVN01SMkZDTzExc3ovbjVqdENXVGs5dUZyVXRydXYrdGZ6blBvQnJRYnM4WHRncFBOCm55REZDcDVZeWRkcjJoWVFGeU1uM1FLQmdDZVAxOFE0Zk1WUElvd29zZy9JNWNkSjVqNzlXS1VvSjM1ZWYvTkQKaE5SRXg3Unlma0NpRmRNTDMxazl0UUFEdlIyRGpiK21PU1lXUlR6OVNFZWV2ZW9oWkU2eFIxU1k0VWQvMGpsKwpKeEZ0aEU0SkRLZHh2d3RCd1piMmVqWUJscUYyZnl4Z1l2cTQ3N3JNOXlSZmpLUG4yWVFWL3ZwN3U3dkZMeWdXCk9nMExBb0dBRGNoSzZ6SG1ERGp5SUxlT0tudXlNMjcyS2pXVkhYVUdkQW05OHNFLzF6SEZPeWtZSzJhdll4YXkKSVh5TjdSZlJpbWlFRGJ0a2oxcWpiMTNUaFhkRnFWNE5PY1VsR1dQcGdNS2w3Z2E3Umk1R3RKcFNacWo5SE90TwpRTTlXT1I1dVlFeU16UnNTdnZjSElZR1E2S0d2ZGlxSDhCSmNWZkVYNVlJNmtkS2ZKNk09Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRTlcrd0VUd0tDTUVSV3RXSncvVjBNREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGN3T0RBek5ESTBORm9YRFRNeE1EY3dOakF6TkRJMApORm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU5EdFUxNXl1R2NPZjFRbXZRNjN1ZE10NUhNVjB3bWg5VjMvdTZkWHRlK3NPWXVVeEJpc1pGcDkKd05nRkRMYmliUVRqWGNSN1U0aUMxd1FFNW1qY2cyS2FyNUFmaXJBejB6M3hvRTdoQmZEV014N3BjcEMwd3BiQwpLVlR3bExHWEwvOUovbmNSSVdRQWFpNExsREpvUkZ5aWZlSnVsR1c5ejl5aDdWbWEyQjRaMHZ4QzJrejJIZnQ5CkZCa2g3ai9DajYzaXlSK1R3RmxmMlhpbG1kOWNiSHY2T25hcWFsR3NIQ1N0NWJZQ0wybmlvN2thWEZhRDJ1b3EKc3Z4R0txRlhYZXZ4L0tmRTFuMnpvYWQzNmI2bnlVWGt3cFZGTEhMQ0xPT1Z6Q3dzbGwrTVNqbHJoajZsdVFQOAoxZlBTbGxWeWttYW1XbDBYRms2ZGN4VGRKUWtrUVJrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRZm5FeEcrak43NkNWNUtYS3Q1c2FGWW5oUFZ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBeUE3Q1FZVlFQVFhFZHlKd2haTERlYTNmQXh6YlhqOGRFYWlGNE00S0oxaFBpcFFCamMwUEpsVGEyRWNWCnYxdHpkMkJRa0dxRzlNd2t1TVBYanRCUU5zUzZqRHJ1ZENyRW9vRzNhckF0dkRGUUx2WVhVekVOdVB2Q1lsYVgKOEZvbkJGMzBCa0o5cVZiU2VsVnZIcGhLMnpVSFhsaVF2aFFUOE9UbE5QNVJpV2R6V2NhdEQ2VGtTTDB4WXZhagpRdFZDU2ordzlmbHExQ1Y3OVljYkJOZUNQTlkvMkg2OEZRRXVxK2h6SitVaWowS1B6REtVUGFOWURScDVHUElzClNscWx0Y1J6eGJlTXM2OWlVOUpWbERpMnVsNTh2bmcwWUJ4cjlRZ3dkcDQ3S2FxT2F3eDJOZ2psQmhnRUdBaysKbGRDTHFBUjlXSEo3Nm40NUpnSTlLdUJ0eGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: kuma/templates/cp-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kuma-control-plane-config
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    # use this file to override default configuration of `kuma-cp`
    #
    # see conf/kuma-cp.conf.yml for available settings
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-control-plane
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - configmaps
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - kuma.io
    resources:
      - dataplanes
      - dataplaneinsights
      - meshes
      - zones
      - zoneinsights
      - zoneingresses
      - zoneingressinsights
      - meshinsights
      - serviceinsights
      - proxytemplates
      - ratelimits
      - trafficpermissions
      - trafficroutes
      - timeouts
      - retries
      - circuitbreakers
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - kuma.io
    resources:
      - externalservices
      - faultinjections
      - healthchecks
      - trafficlogs
      - traffictraces
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - pods/finalizers
    verbs:
      - "*"
  - apiGroups:
      - kuma.io
    resources:
      - meshes/finalizers
    verbs:
      - "*"
  - apiGroups:
      - kuma.io
    resources:
      - dataplanes/finalizers
    verbs:
      - "*"
  # validate k8s token before issuing mTLS cert
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-control-plane
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-control-plane
subjects:
  - kind: ServiceAccount
    name: kuma-control-plane
    namespace: kuma-system
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kuma-control-plane
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuma-control-plane
subjects:
  - kind: ServiceAccount
    name: kuma-control-plane
    namespace: kuma-system
---
# Source: kuma/templates/cp-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5680"
spec:
  type: ClusterIP
  ports:
    - port: 5681
      name: http-api-server
    - port: 5682
      name: https-api-server
    - port: 443
      name: https-admission-server
      targetPort: 5443
    - port: 5676
      name: mads-server
    - port: 5678
      name: dp-server
    - port: 5653
      name: dns-server
      protocol: UDP
  selector:
    app: kuma-control-plane
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
---
# Source: kuma/templates/ingress-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kuma-ingress
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: LoadBalancer
  ports:
    - port: 10001
      protocol: TCP
      targetPort: 10001
  selector:
    app: kuma-ingress
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
---
# Source: kuma/templates/cp-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app: kuma-control-plane
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: kuma
      app.kubernetes.io/instance: kuma
      app: kuma-control-plane
  template:
    metadata:
      annotations:
        checksum/config: adc29c508fd46e84eec9d28d4927e2b3be0ba37de5cc6baef28f5e0246fafa55
        checksum/tls-secrets: b54ef41626641363d1b1699d425a2cae76cd73080c7fe4b1ed121efdd65b8eda
      labels:
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app: kuma-control-plane
    spec:
      serviceAccountName: kuma-control-plane
      nodeSelector:
        
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      containers:
        - name: control-plane
          image: "docker.io/kumahq/kuma-cp:1.2.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: KUMA_API_SERVER_READ_ONLY
              value: "true"
            - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
              value: "false"
            - name: KUMA_DP_SERVER_HDS_ENABLED
              value: "false"
            - name: KUMA_ENVIRONMENT
              value: "kubernetes"
            - name: KUMA_GENERAL_TLS_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.crt"
            - name: KUMA_GENERAL_TLS_KEY_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.key"
            - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
              value: "docker.io/kumahq/kuma-init:1.2.1"
            - name: KUMA_MODE
              value: "zone"
            - name: KUMA_MULTIZONE_ZONE_GLOBAL_ADDRESS
              value: "grpcs://100.111.69.60:5685"
            - name: KUMA_MULTIZONE_ZONE_NAME
              value: "kind"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
              value: "/var/run/secrets/kuma.io/tls-cert"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
              value: "5443"
            - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
              value: "kuma-control-plane"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/ca.crt"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
              value: "false"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
              value: "docker.io/kumahq/kuma-dp:1.2.1"
            - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
              value: "kuma-system"
            - name: KUMA_STORE_TYPE
              value: "kubernetes"
          args:
            - run
            - --log-level=info
            - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
          ports:
            - containerPort: 5681
            - containerPort: 5682
            - containerPort: 5443
            - containerPort: 5678
            - containerPort: 5653
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /healthy
              port: 5680
          readinessProbe:
            httpGet:
              path: /ready
              port: 5680
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert
              readOnly: true
            - name: kuma-control-plane-config
              mountPath: /etc/kuma.io/kuma-control-plane
              readOnly: true
      volumes:
        - name: general-tls-cert
          secret:
            secretName: kuma-tls-cert
        - name: kuma-control-plane-config
          configMap:
            name: kuma-control-plane-config
---
# Source: kuma/templates/ingress-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-ingress
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
    app: kuma-ingress
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kuma
      app.kubernetes.io/instance: kuma
      app: kuma-ingress
  template:
    metadata:
      annotations:
        kuma.io/ingress: enabled
      labels:
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app: kuma-ingress
    spec:
      serviceAccountName: kuma-ingress
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      containers:
        - name: ingress
          image: "docker.io/kumahq/kuma-dp:1.2.1"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUMA_CONTROL_PLANE_URL
              value: "https://kuma-control-plane.kuma-system:5678"
            - name: KUMA_CONTROL_PLANE_CA_CERT_FILE
              value: /var/run/secrets/kuma.io/tls-cert/ca.crt
            - name: KUMA_DATAPLANE_NAME
              value: $(POD_NAME).$(POD_NAMESPACE)
            - name: KUMA_DATAPLANE_ADMIN_PORT
              value: "9901"
            - name: KUMA_DATAPLANE_DRAIN_TIME
              value: 30s
            - name: KUMA_DATAPLANE_RUNTIME_TOKEN_PATH
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: KUMA_DATAPLANE_PROXY_TYPE
              value: "ingress"
          args:
            - run
            - --log-level=info
          ports:
            - containerPort: 10001
          livenessProbe:
            exec:
              command:
                - wget
                - -qO-
                - http://127.0.0.1:9901
            failureThreshold: 12
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            exec:
              command:
                - wget
                - -qO-
                - http://127.0.0.1:9901
            failureThreshold: 12
            initialDelaySeconds: 1
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          volumeMounts:
            - name: kuma-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert
              readOnly: true
      volumes:
        - name: kuma-tls-cert
          secret:
            secretName: kuma-tls-cert
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: admissionregistration.k8s.io/v1

kind: MutatingWebhookConfiguration
metadata:
  name: kuma-admission-mutating-webhook-configuration
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: mesh.defaulter.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRTlcrd0VUd0tDTUVSV3RXSncvVjBNREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGN3T0RBek5ESTBORm9YRFRNeE1EY3dOakF6TkRJMApORm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU5EdFUxNXl1R2NPZjFRbXZRNjN1ZE10NUhNVjB3bWg5VjMvdTZkWHRlK3NPWXVVeEJpc1pGcDkKd05nRkRMYmliUVRqWGNSN1U0aUMxd1FFNW1qY2cyS2FyNUFmaXJBejB6M3hvRTdoQmZEV014N3BjcEMwd3BiQwpLVlR3bExHWEwvOUovbmNSSVdRQWFpNExsREpvUkZ5aWZlSnVsR1c5ejl5aDdWbWEyQjRaMHZ4QzJrejJIZnQ5CkZCa2g3ai9DajYzaXlSK1R3RmxmMlhpbG1kOWNiSHY2T25hcWFsR3NIQ1N0NWJZQ0wybmlvN2thWEZhRDJ1b3EKc3Z4R0txRlhYZXZ4L0tmRTFuMnpvYWQzNmI2bnlVWGt3cFZGTEhMQ0xPT1Z6Q3dzbGwrTVNqbHJoajZsdVFQOAoxZlBTbGxWeWttYW1XbDBYRms2ZGN4VGRKUWtrUVJrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRZm5FeEcrak43NkNWNUtYS3Q1c2FGWW5oUFZ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBeUE3Q1FZVlFQVFhFZHlKd2haTERlYTNmQXh6YlhqOGRFYWlGNE00S0oxaFBpcFFCamMwUEpsVGEyRWNWCnYxdHpkMkJRa0dxRzlNd2t1TVBYanRCUU5zUzZqRHJ1ZENyRW9vRzNhckF0dkRGUUx2WVhVekVOdVB2Q1lsYVgKOEZvbkJGMzBCa0o5cVZiU2VsVnZIcGhLMnpVSFhsaVF2aFFUOE9UbE5QNVJpV2R6V2NhdEQ2VGtTTDB4WXZhagpRdFZDU2ordzlmbHExQ1Y3OVljYkJOZUNQTlkvMkg2OEZRRXVxK2h6SitVaWowS1B6REtVUGFOWURScDVHUElzClNscWx0Y1J6eGJlTXM2OWlVOUpWbERpMnVsNTh2bmcwWUJ4cjlRZ3dkcDQ3S2FxT2F3eDJOZ2psQmhnRUdBaysKbGRDTHFBUjlXSEo3Nm40NUpnSTlLdUJ0eGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /default-kuma-io-v1alpha1-mesh
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - meshes
    sideEffects: None
  - name: owner-reference.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRTlcrd0VUd0tDTUVSV3RXSncvVjBNREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGN3T0RBek5ESTBORm9YRFRNeE1EY3dOakF6TkRJMApORm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU5EdFUxNXl1R2NPZjFRbXZRNjN1ZE10NUhNVjB3bWg5VjMvdTZkWHRlK3NPWXVVeEJpc1pGcDkKd05nRkRMYmliUVRqWGNSN1U0aUMxd1FFNW1qY2cyS2FyNUFmaXJBejB6M3hvRTdoQmZEV014N3BjcEMwd3BiQwpLVlR3bExHWEwvOUovbmNSSVdRQWFpNExsREpvUkZ5aWZlSnVsR1c5ejl5aDdWbWEyQjRaMHZ4QzJrejJIZnQ5CkZCa2g3ai9DajYzaXlSK1R3RmxmMlhpbG1kOWNiSHY2T25hcWFsR3NIQ1N0NWJZQ0wybmlvN2thWEZhRDJ1b3EKc3Z4R0txRlhYZXZ4L0tmRTFuMnpvYWQzNmI2bnlVWGt3cFZGTEhMQ0xPT1Z6Q3dzbGwrTVNqbHJoajZsdVFQOAoxZlBTbGxWeWttYW1XbDBYRms2ZGN4VGRKUWtrUVJrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRZm5FeEcrak43NkNWNUtYS3Q1c2FGWW5oUFZ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBeUE3Q1FZVlFQVFhFZHlKd2haTERlYTNmQXh6YlhqOGRFYWlGNE00S0oxaFBpcFFCamMwUEpsVGEyRWNWCnYxdHpkMkJRa0dxRzlNd2t1TVBYanRCUU5zUzZqRHJ1ZENyRW9vRzNhckF0dkRGUUx2WVhVekVOdVB2Q1lsYVgKOEZvbkJGMzBCa0o5cVZiU2VsVnZIcGhLMnpVSFhsaVF2aFFUOE9UbE5QNVJpV2R6V2NhdEQ2VGtTTDB4WXZhagpRdFZDU2ordzlmbHExQ1Y3OVljYkJOZUNQTlkvMkg2OEZRRXVxK2h6SitVaWowS1B6REtVUGFOWURScDVHUElzClNscWx0Y1J6eGJlTXM2OWlVOUpWbERpMnVsNTh2bmcwWUJ4cjlRZ3dkcDQ3S2FxT2F3eDJOZ2psQmhnRUdBaysKbGRDTHFBUjlXSEo3Nm40NUpnSTlLdUJ0eGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /owner-reference-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
        resources:
          - circuitbreakers
          - externalservices
          - faultinjections
          - healthchecks
          - retries
          - proxytemplates
          - ratelimits
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
    
      
    sideEffects: None
  - name: kuma-injector.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRTlcrd0VUd0tDTUVSV3RXSncvVjBNREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGN3T0RBek5ESTBORm9YRFRNeE1EY3dOakF6TkRJMApORm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU5EdFUxNXl1R2NPZjFRbXZRNjN1ZE10NUhNVjB3bWg5VjMvdTZkWHRlK3NPWXVVeEJpc1pGcDkKd05nRkRMYmliUVRqWGNSN1U0aUMxd1FFNW1qY2cyS2FyNUFmaXJBejB6M3hvRTdoQmZEV014N3BjcEMwd3BiQwpLVlR3bExHWEwvOUovbmNSSVdRQWFpNExsREpvUkZ5aWZlSnVsR1c5ejl5aDdWbWEyQjRaMHZ4QzJrejJIZnQ5CkZCa2g3ai9DajYzaXlSK1R3RmxmMlhpbG1kOWNiSHY2T25hcWFsR3NIQ1N0NWJZQ0wybmlvN2thWEZhRDJ1b3EKc3Z4R0txRlhYZXZ4L0tmRTFuMnpvYWQzNmI2bnlVWGt3cFZGTEhMQ0xPT1Z6Q3dzbGwrTVNqbHJoajZsdVFQOAoxZlBTbGxWeWttYW1XbDBYRms2ZGN4VGRKUWtrUVJrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRZm5FeEcrak43NkNWNUtYS3Q1c2FGWW5oUFZ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBeUE3Q1FZVlFQVFhFZHlKd2haTERlYTNmQXh6YlhqOGRFYWlGNE00S0oxaFBpcFFCamMwUEpsVGEyRWNWCnYxdHpkMkJRa0dxRzlNd2t1TVBYanRCUU5zUzZqRHJ1ZENyRW9vRzNhckF0dkRGUUx2WVhVekVOdVB2Q1lsYVgKOEZvbkJGMzBCa0o5cVZiU2VsVnZIcGhLMnpVSFhsaVF2aFFUOE9UbE5QNVJpV2R6V2NhdEQ2VGtTTDB4WXZhagpRdFZDU2ordzlmbHExQ1Y3OVljYkJOZUNQTlkvMkg2OEZRRXVxK2h6SitVaWowS1B6REtVUGFOWURScDVHUElzClNscWx0Y1J6eGJlTXM2OWlVOUpWbERpMnVsNTh2bmcwWUJ4cjlRZ3dkcDQ3S2FxT2F3eDJOZ2psQmhnRUdBaysKbGRDTHFBUjlXSEo3Nm40NUpnSTlLdUJ0eGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /inject-sidecar
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: admissionregistration.k8s.io/v1

kind: ValidatingWebhookConfiguration
metadata:
  name: kuma-validating-webhook-configuration
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRTlcrd0VUd0tDTUVSV3RXSncvVjBNREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGN3T0RBek5ESTBORm9YRFRNeE1EY3dOakF6TkRJMApORm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU5EdFUxNXl1R2NPZjFRbXZRNjN1ZE10NUhNVjB3bWg5VjMvdTZkWHRlK3NPWXVVeEJpc1pGcDkKd05nRkRMYmliUVRqWGNSN1U0aUMxd1FFNW1qY2cyS2FyNUFmaXJBejB6M3hvRTdoQmZEV014N3BjcEMwd3BiQwpLVlR3bExHWEwvOUovbmNSSVdRQWFpNExsREpvUkZ5aWZlSnVsR1c5ejl5aDdWbWEyQjRaMHZ4QzJrejJIZnQ5CkZCa2g3ai9DajYzaXlSK1R3RmxmMlhpbG1kOWNiSHY2T25hcWFsR3NIQ1N0NWJZQ0wybmlvN2thWEZhRDJ1b3EKc3Z4R0txRlhYZXZ4L0tmRTFuMnpvYWQzNmI2bnlVWGt3cFZGTEhMQ0xPT1Z6Q3dzbGwrTVNqbHJoajZsdVFQOAoxZlBTbGxWeWttYW1XbDBYRms2ZGN4VGRKUWtrUVJrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRZm5FeEcrak43NkNWNUtYS3Q1c2FGWW5oUFZ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBeUE3Q1FZVlFQVFhFZHlKd2haTERlYTNmQXh6YlhqOGRFYWlGNE00S0oxaFBpcFFCamMwUEpsVGEyRWNWCnYxdHpkMkJRa0dxRzlNd2t1TVBYanRCUU5zUzZqRHJ1ZENyRW9vRzNhckF0dkRGUUx2WVhVekVOdVB2Q1lsYVgKOEZvbkJGMzBCa0o5cVZiU2VsVnZIcGhLMnpVSFhsaVF2aFFUOE9UbE5QNVJpV2R6V2NhdEQ2VGtTTDB4WXZhagpRdFZDU2ordzlmbHExQ1Y3OVljYkJOZUNQTlkvMkg2OEZRRXVxK2h6SitVaWowS1B6REtVUGFOWURScDVHUElzClNscWx0Y1J6eGJlTXM2OWlVOUpWbERpMnVsNTh2bmcwWUJ4cjlRZ3dkcDQ3S2FxT2F3eDJOZ2psQmhnRUdBaysKbGRDTHFBUjlXSEo3Nm40NUpnSTlLdUJ0eGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /validate-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - circuitbreakers
          - dataplanes
          - externalservices
          - faultinjections
          - healthchecks
          - retries
          - meshes
          - proxytemplates
          - ratelimits
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
          - zones
    
      
    sideEffects: None
  - name: service.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRTlcrd0VUd0tDTUVSV3RXSncvVjBNREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGN3T0RBek5ESTBORm9YRFRNeE1EY3dOakF6TkRJMApORm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU5EdFUxNXl1R2NPZjFRbXZRNjN1ZE10NUhNVjB3bWg5VjMvdTZkWHRlK3NPWXVVeEJpc1pGcDkKd05nRkRMYmliUVRqWGNSN1U0aUMxd1FFNW1qY2cyS2FyNUFmaXJBejB6M3hvRTdoQmZEV014N3BjcEMwd3BiQwpLVlR3bExHWEwvOUovbmNSSVdRQWFpNExsREpvUkZ5aWZlSnVsR1c5ejl5aDdWbWEyQjRaMHZ4QzJrejJIZnQ5CkZCa2g3ai9DajYzaXlSK1R3RmxmMlhpbG1kOWNiSHY2T25hcWFsR3NIQ1N0NWJZQ0wybmlvN2thWEZhRDJ1b3EKc3Z4R0txRlhYZXZ4L0tmRTFuMnpvYWQzNmI2bnlVWGt3cFZGTEhMQ0xPT1Z6Q3dzbGwrTVNqbHJoajZsdVFQOAoxZlBTbGxWeWttYW1XbDBYRms2ZGN4VGRKUWtrUVJrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRZm5FeEcrak43NkNWNUtYS3Q1c2FGWW5oUFZ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBeUE3Q1FZVlFQVFhFZHlKd2haTERlYTNmQXh6YlhqOGRFYWlGNE00S0oxaFBpcFFCamMwUEpsVGEyRWNWCnYxdHpkMkJRa0dxRzlNd2t1TVBYanRCUU5zUzZqRHJ1ZENyRW9vRzNhckF0dkRGUUx2WVhVekVOdVB2Q1lsYVgKOEZvbkJGMzBCa0o5cVZiU2VsVnZIcGhLMnpVSFhsaVF2aFFUOE9UbE5QNVJpV2R6V2NhdEQ2VGtTTDB4WXZhagpRdFZDU2ordzlmbHExQ1Y3OVljYkJOZUNQTlkvMkg2OEZRRXVxK2h6SitVaWowS1B6REtVUGFOWURScDVHUElzClNscWx0Y1J6eGJlTXM2OWlVOUpWbERpMnVsNTh2bmcwWUJ4cjlRZ3dkcDQ3S2FxT2F3eDJOZ2psQmhnRUdBaysKbGRDTHFBUjlXSEo3Nm40NUpnSTlLdUJ0eGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /validate-v1-service
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - services
    sideEffects: None
  - name: secret.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    namespaceSelector:
      matchLabels:
        kuma.io/system-namespace: "true"
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRTlcrd0VUd0tDTUVSV3RXSncvVjBNREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGN3T0RBek5ESTBORm9YRFRNeE1EY3dOakF6TkRJMApORm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU5EdFUxNXl1R2NPZjFRbXZRNjN1ZE10NUhNVjB3bWg5VjMvdTZkWHRlK3NPWXVVeEJpc1pGcDkKd05nRkRMYmliUVRqWGNSN1U0aUMxd1FFNW1qY2cyS2FyNUFmaXJBejB6M3hvRTdoQmZEV014N3BjcEMwd3BiQwpLVlR3bExHWEwvOUovbmNSSVdRQWFpNExsREpvUkZ5aWZlSnVsR1c5ejl5aDdWbWEyQjRaMHZ4QzJrejJIZnQ5CkZCa2g3ai9DajYzaXlSK1R3RmxmMlhpbG1kOWNiSHY2T25hcWFsR3NIQ1N0NWJZQ0wybmlvN2thWEZhRDJ1b3EKc3Z4R0txRlhYZXZ4L0tmRTFuMnpvYWQzNmI2bnlVWGt3cFZGTEhMQ0xPT1Z6Q3dzbGwrTVNqbHJoajZsdVFQOAoxZlBTbGxWeWttYW1XbDBYRms2ZGN4VGRKUWtrUVJrQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRZm5FeEcrak43NkNWNUtYS3Q1c2FGWW5oUFZ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBeUE3Q1FZVlFQVFhFZHlKd2haTERlYTNmQXh6YlhqOGRFYWlGNE00S0oxaFBpcFFCamMwUEpsVGEyRWNWCnYxdHpkMkJRa0dxRzlNd2t1TVBYanRCUU5zUzZqRHJ1ZENyRW9vRzNhckF0dkRGUUx2WVhVekVOdVB2Q1lsYVgKOEZvbkJGMzBCa0o5cVZiU2VsVnZIcGhLMnpVSFhsaVF2aFFUOE9UbE5QNVJpV2R6V2NhdEQ2VGtTTDB4WXZhagpRdFZDU2ordzlmbHExQ1Y3OVljYkJOZUNQTlkvMkg2OEZRRXVxK2h6SitVaWowS1B6REtVUGFOWURScDVHUElzClNscWx0Y1J6eGJlTXM2OWlVOUpWbERpMnVsNTh2bmcwWUJ4cjlRZ3dkcDQ3S2FxT2F3eDJOZ2psQmhnRUdBaysKbGRDTHFBUjlXSEo3Nm40NUpnSTlLdUJ0eGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /validate-v1-secret
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - secrets
    sideEffects: None
---
# Source: kuma/templates/pre-delete-webhooks.yaml
# HELM first deletes RBAC of Kuma, then it tries to delete Secrets. We've got validating webhook on Secrets.
# But even that the policy of this webhook is Ignore, it fails because Kuma does not have permission to access Secrets anymore.
# Therefore we first need to delete webhook so we can delete the rest of the deployment
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-pre-delete-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-patch-ns-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kuma-install-missing-crds-scripts
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
data:
  install_missing_crds.sh: |
    #!/usr/bin/env sh

    if [ -s /kuma/missing/crds.yaml ]; then
      echo "/kuma/missing/crds.yaml found and is not empty, adding crds"
      kubectl create -f /kuma/missing/crds.yaml
    else
      echo "/kuma/missing/crds.yaml not found or empty, it looks like there is no missing crds"
    fi
  save_missing_crds.sh: |
    #!/usr/bin/env sh

    missing_crds="$(kumactl install crds --only-missing)"

    if [ -n "${missing_crds}" ]; then
      echo "found missing crds - saving to /kuma/missing/crds.yaml"
      echo "${missing_crds}" > /kuma/missing/crds.yaml
    fi
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-pre-delete-job
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    resourceNames:
      - kuma-validating-webhook-configuration
    verbs:
      - delete
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-patch-ns-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    resourceNames:
      - kuma-system
    verbs:
      - get
      - patch
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - "apiextensions.k8s.io"
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - list
      - get
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-pre-delete-job
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-pre-delete-job
subjects:
  - kind: ServiceAccount
    name: kuma-pre-delete-job
    namespace: kuma-system
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-patch-ns-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-patch-ns-job
subjects:
  - kind: ServiceAccount
    name: kuma-patch-ns-job
    namespace: kuma-system
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-install-missing-crds
subjects:
  - kind: ServiceAccount
    name: kuma-install-missing-crds
    namespace: kuma-system
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-delete-webhook
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-delete"
    
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    metadata:
      name: kuma-delete-webhook
      labels:
    
        helm.sh/chart: kuma-0.6.1
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.2.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-pre-delete-job
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-delete-job
          image: "bitnami/kubectl:1.20"
          command:
            - 'kubectl'
            - 'delete'
            - 'ValidatingWebhookConfiguration'
            - kuma-validating-webhook-configuration
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-patch-ns
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-install"
    
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    metadata:
      name: kuma-patch-ns-script
      labels:
    
        helm.sh/chart: kuma-0.6.1
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.2.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-patch-ns-job
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-install-job
          image: "bitnami/kubectl:1.20"
          command:
            - 'kubectl'
            - 'patch'
            - 'namespace'
            - "kuma-system"
            - '--type'
            - 'merge'
            - '--patch'
            - '{ "metadata": { "labels": { "kuma.io/system-namespace": "true" } } }'
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-install-missing-crds
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.6.1
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  template:
    metadata:
      name: kuma-install-missing-crds-job
      labels:
    
        helm.sh/chart: kuma-0.6.1
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.2.1"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-install-missing-crds
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-upgrade-job
          image: "bitnami/kubectl:1.20"
          command:
            - '/kuma/scripts/install_missing_crds.sh'
          volumeMounts:
            - mountPath: /kuma/missing
              name: missing-crds
              readOnly: true
            - mountPath: /kuma/scripts
              name: scripts
              readOnly: true
      initContainers:
        - name: pre-upgrade-job-init
          image: "docker.io/kumahq/kumactl:1.2.1"
          volumeMounts:
          - mountPath: /kuma/missing
            name: missing-crds
          - mountPath: /kuma/scripts
            name: scripts
            readOnly: true
          command:
          - '/kuma/scripts/save_missing_crds.sh'
      volumes:
        - name: scripts
          configMap:
            name: kuma-install-missing-crds-scripts
            defaultMode: 0755
        - name: missing-crds
          emptyDir: {}
