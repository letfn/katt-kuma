---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/ingress-rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-ingress
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: kuma-tls-cert
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhakNDQWxLZ0F3SUJBZ0lRZUl4akYycE45OCtjS1M2dnR4cVVPVEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGd3TWpBeE5URXhNVm9YRFRNeE1EY3pNVEF4TlRFeApNVm93SFRFYk1Ca0dBMVVFQXhNU2EzVnRZUzFqYjI1MGNtOXNMWEJzWVc1bE1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVLaDIzaHNqTjEzVHpaM0doVlVpaE4wdUo4RDlVQzNIRmFSUjZudWgKMlZMRFRFSndFeU9XYkZTanVqOHVXTE5MSUpQOFpZWTNMWGlQdHN6b1pyM2JzSEdWNVpoaGYwNmFqOWVQaTVTMwpPQXhNUjVtWW5jNlRiZytpQlBiekZIekttRXZLVTRmRVJ2K2xFMzdNenBoRDEzZnNtY1V1THkxTnd4UmFFNTZaCkEwNGdpSmVkMjZETDJFZml1QmRDaVR4dkxISjl4RmNpdmpZL0tNRGcrcXVMOTloOHlIcVhiSWplem9aUU1pY3QKUmFIUGtVSmFZOGNDU0t0WTdpRWZYWlBEc2NQSmNIN2dSTzVmVnRaY2ZxeERjQjFjZkZrWVFMeitnTGg4NVBnZQpURjhRSklQRldtQlp0QmxDOTdKcjg4Z2pwdlNZNHM1Tjl2VFQwdTRkczVQcHd3SURBUUFCbzRHd01JR3RNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUWU0OWhCcWZHLzJWOVJUQTNlQ2pta1VoeE5yREJOQmdOVgpIUkVFUmpCRWdoNXJkVzFoTFdOdmJuUnliMnd0Y0d4aGJtVXVhM1Z0WVMxemVYTjBaVzJDSW10MWJXRXRZMjl1CmRISnZiQzF3YkdGdVpTNXJkVzFoTFhONWMzUmxiUzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJam4KWXc0VWpnYjVzRXAyQStWa3NWdjNFQm1YUGNTd3BQU3RMV0tERDRDdUpGUmJyNkM3ODFnTDlUQkppdVBPemFyNgo4NnFmVlE4T29ZY0NxK2NpbkNmbFpFQUxiN3NhVUUrK3pROGM1T2NCOFhhUndPL3ltZlRWWFBLNGFlNmFiVk1jCnE1RFJjNnZ5UVROWkZoejdZWWJTNEU1SjJZZ2VHR1lvNHRIbG8xRVQzOW9pdEIvcy9wQ1YyeUZwRXlSU0Mya3oKQXd5NEZJd21jeVM3U3EyaWIweDhKQnphTjF2VlJBWWc3SDNpajJ6bm5KdmRTL2RUK1JlRE91QXJZWDl3R3Byawp5UUdMZFVzeU5vdURUZFFzak1Rb1BQOS9MTWxhWEhyN0h2NEJJMlZicVV2dmdjRkxNUW5kditPQXZUWS91Wm9FCkIyWVRvVFZJZzc3UlRGcjh5cU09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdUtoMjNoc2pOMTNUelozR2hWVWloTjB1SjhEOVVDM0hGYVJSNm51aDJWTERURUp3CkV5T1diRlNqdWo4dVdMTkxJSlA4WllZM0xYaVB0c3pvWnIzYnNIR1Y1WmhoZjA2YWo5ZVBpNVMzT0F4TVI1bVkKbmM2VGJnK2lCUGJ6Rkh6S21FdktVNGZFUnYrbEUzN016cGhEMTNmc21jVXVMeTFOd3hSYUU1NlpBMDRnaUplZAoyNkRMMkVmaXVCZENpVHh2TEhKOXhGY2l2alkvS01EZytxdUw5OWg4eUhxWGJJamV6b1pRTWljdFJhSFBrVUphClk4Y0NTS3RZN2lFZlhaUERzY1BKY0g3Z1JPNWZWdFpjZnF4RGNCMWNmRmtZUUx6K2dMaDg1UGdlVEY4UUpJUEYKV21CWnRCbEM5N0pyODhnanB2U1k0czVOOXZUVDB1NGRzNVBwd3dJREFRQUJBb0lCQVFDYUJEa1F5OFcxdWxhYwptMG9uajNpNUpOb0lZbGxsOUtpbWptV2NrLzNNaTlGRTIrMHFxWFlmYVFFZXFPLzVINkk3eS9LcW95V0drWlljCnZBL2pFZHdZOE1RN3Vic29PZUdFdENDUUpUd2tUVzJhRXF4T2d5eElrbFZxbXFib29hVkJIWVhsNGNsK0JtQWoKUUpHR2gwMmVlL0lsMTJiTUJwZGpiS2dzMFEyQ3lNMVJHeGUzUWlWRTQ2dG15TlprZjVUdFdYRDdrOGZ4SGd6aQp3TlhNMTNLT2tFWnYydGY2M2pKVnE3WitTNEJjRWxDam50N1BGRHdYenVXRlFCSm5lVXJ2TlY3MlRObUZHMEdtCjBwc1lPQ2o0a2pzUzJhQlA2VjdVOERmVHRJeGJSQjJUSFhmVDNYQ2lrUlpLZ0t3cEhoTENkdUNDc2JCbDEwNjAKVThtWitCUmhBb0dCQU1pbktIenl5NXhGbW4rWUpjdncyeTJRcnN1VHlQVnJPRkthOGc3OUdtOTNXbkpLcjJONQpCUWtwcFhJQnUrb0R1ZGFoVTJmcHNpT0hJWkxQRzBPMVZMVXFmajkrbmJyVGpVdytmbjlxV0dYSTRBRlNJKzJDCjVKUWJmUVJNdkQzZXlpdDZ3RTVRcDJjeC8xWUdWZEE4UmtxS3o5cnI4MnJKeWNpOWxCcytQM1ZMQW9HQkFPdVgKMlFZcWd5dEFCWVJGYjlMQndLWWk2Z1haREd4TkphcXZFZmVieGV4Z1FmNzlEOVZMRGcxNFRXRTg2Z1RCZWcrTwoyYTdQK213dTB0c09FamJhWXk2WTlGYXArUG5TbFNzWitNaDRDZ040NzBjQXRjczBNY3hRSDlPVksxTlVaSGtaCm4rVTRsbFhOMTJGK2QwTTlpdjJTWVdmQmI2SlZVd2xPTWcxQ1c2cHBBb0dBWWN2SEdnOGtXZ2c2b3hHKzZrVjgKTGhza2RxaVMrN3JFZXM1MlNBUG9qSWQ1bDliNjROcXRMNmdTc1J4VFFGMk1pQ1dkQnpxSnpuTWdVL09KY0ZqQwo3b0hGZ3FEdHM0OUVnUEs4cU5GbVFFWEZtQjgyejU1S1ZqMkhrejdyU0tSN21QRjlKUzUrU1BlL1lXZzVEd014CnAwYzh3NURZMVNXQXFjeHNrVktuanowQ2dZQjc4dmdMZG5Kc1h0S0lOTUFRY2orWktPVlhEa3FxOEN2UkVTcXkKeXhIbXV2MzkyY1pxd1lJek5BZ0NFTHBPcGp4QjB6WlQ4cmdlRXNSODIzcFp3YXhNNTh3bGpHZWhpRmxTdytkUQpFVmV6Vy8wSHJpZjNNUTdDSDZXZSsrdy9lemNoUDRvUVh5VTVINE1obUJmSEdLbjNudndBU3BVaEl5TDgwbGNqCkFyYVhnUUtCZ0FnT2VLTHdVLzhYUGZwNXE3V09HTmg1OUVzeEZvVjgwcnpaR2R6WnlndzEvNzBGT0UxOTJ2amQKbzZ2MUI5TWtNZmdqZTlUVDB3b3JPK3N6LzZMRDNHY1JYSmNINnRlcXpoK1MvVUpGTmRlc1dTK2d6c0tOaDJIbQpuVGEyaG41Z0NET0RwM3lIbi9EUDBFTE04eU1CVnlNR1pQc2dhbHBqYmt5Z0w1Y0p0S0JWCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRUldVSFlUeUJJanFrVGZFVG5sREFvREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGd3TWpBeE5URXhNRm9YRFRNeE1EY3pNVEF4TlRFeApNRm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUtpcXFPNTU0MDFTVGVxeHRTRTZqU0RsVFl1SnNjV0R3TGJySWMwd0RZVWZwZlE1WVpSQXJ0Q3YKTGV1SGl2V1RDelNFRjE2bEJRWmJ0bE16cVhDVlp6Um1jVU1JVW0zeUoxaCtSSWNlS2JrMHpoNytCamJLNGhhQQpDSGtjVkFKc3Ria2hXYjlwTHc4ejV4OE5qK0QwbitrWmYvbHovZGZzSGc4ZGFNajUyOCtyeEQ5S0ZFaXR2WVl1ClZuWDBaZ1g4S2lTaTY2clhhWktZWVlsYjE2elZLZjlGb1JIYnRIWFdwcUFsSUNWTGh0THA4OWcwZDZHamFjYUkKYkczRHY0ai9kNktPK0M0RksyNURRSkdjYjR3K3NlYVNMUkRaOGJsNHE5Wjhld3N6UG9PYmhtTHdOVnU2dEJqdgpMMEFKdFNKbjZITTErMnNBa2dpZ3p1Z3VJbkJ2TllVQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRZTQ5aEJxZkcvMlY5UlRBM2VDam1rVWh4TnJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBYnA4clhSY2NQRjF4QkJ4ZEhUL0s5cEZEc0JQSjhIT0o0UStKNTU0UEswOE5ONlMzdHNpdFpWVHRiejFyCnIwbTNsTUpZcHBiMEh1V3ROWHJtKzc2MWF5NG01cjQ5aXVMcXN1dVpzL2d4QmhOcWh0clNRb1dSVDdnOFBXd2EKRWtCb1M2ZWdudjQ5ZGVJMFdPeGphRTU4cHk4WDc3REVpVkpPNi9oNmpBdGE0MU5tZmhsRS83a0dsZEN3bkdFdQpTdjV3UEEvbWxEMXYyczlkb3NDOXJvNTJvYmN3WEhOdUxRWjZHNmhweVNQalNEaWk2bjRQV3pPUHpKTG5EYUJjCjhYWUVaSVMxckk5b3BUUFZiTUxiZ2Vva2NXa3JIRlhqWVZNUENmV0NIK01xMzEyWjdOaUw3MUVRWFFscWVabFcKUkVSRFZvZGFDakU4bURkeC9aczdFS0tLN0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: kuma/templates/cp-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kuma-control-plane-config
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
data:
  config.yaml: |
    # use this file to override default configuration of `kuma-cp`
    #
    # see conf/kuma-cp.conf.yml for available settings
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-control-plane
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
      - pods
      - configmaps
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - kuma.io
    resources:
      - dataplanes
      - dataplaneinsights
      - meshes
      - zones
      - zoneinsights
      - zoneingresses
      - zoneingressinsights
      - meshinsights
      - serviceinsights
      - proxytemplates
      - ratelimits
      - trafficpermissions
      - trafficroutes
      - timeouts
      - retries
      - circuitbreakers
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - kuma.io
    resources:
      - externalservices
      - faultinjections
      - healthchecks
      - trafficlogs
      - traffictraces
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - pods/finalizers
    verbs:
      - "*"
  - apiGroups:
      - kuma.io
    resources:
      - meshes/finalizers
    verbs:
      - "*"
  - apiGroups:
      - kuma.io
    resources:
      - dataplanes/finalizers
    verbs:
      - "*"
  # validate k8s token before issuing mTLS cert
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-control-plane
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-control-plane
subjects:
  - kind: ServiceAccount
    name: kuma-control-plane
    namespace: kuma-system
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
---
# Source: kuma/templates/cp-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kuma-control-plane
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuma-control-plane
subjects:
  - kind: ServiceAccount
    name: kuma-control-plane
    namespace: kuma-system
---
# Source: kuma/templates/cp-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5680"
spec:
  type: ClusterIP
  ports:
    - port: 5681
      name: http-api-server
    - port: 5682
      name: https-api-server
    - port: 443
      name: https-admission-server
      targetPort: 5443
    - port: 5676
      name: mads-server
    - port: 5678
      name: dp-server
    - port: 5653
      name: dns-server
      protocol: UDP
  selector:
    app: kuma-control-plane
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
---
# Source: kuma/templates/ingress-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: kuma-ingress
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
spec:
  type: LoadBalancer
  ports:
    - port: 10001
      protocol: TCP
      targetPort: 10001
  selector:
    app: kuma-ingress
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
---
# Source: kuma/templates/cp-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-control-plane
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
    app: kuma-control-plane
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: kuma
      app.kubernetes.io/instance: kuma
      app: kuma-control-plane
  template:
    metadata:
      annotations:
        checksum/config: d197fa140fb2f04173c9f38a84787055696f859d2051b121a29b1fb6f20f5202
        checksum/tls-secrets: 1ac3db05e437297fd426c66343facf3b7fce787226e12c0cd95f7c9e22b53410
      labels:
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app: kuma-control-plane
    spec:
      serviceAccountName: kuma-control-plane
      nodeSelector:
        
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      containers:
        - name: control-plane
          image: "docker.io/kumahq/kuma-cp:1.2.3"
          imagePullPolicy: IfNotPresent
          env:
            - name: KUMA_API_SERVER_READ_ONLY
              value: "true"
            - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
              value: "false"
            - name: KUMA_DP_SERVER_HDS_ENABLED
              value: "false"
            - name: KUMA_ENVIRONMENT
              value: "kubernetes"
            - name: KUMA_GENERAL_TLS_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.crt"
            - name: KUMA_GENERAL_TLS_KEY_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/tls.key"
            - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
              value: "docker.io/kumahq/kuma-init:1.2.3"
            - name: KUMA_MODE
              value: "zone"
            - name: KUMA_MULTIZONE_ZONE_GLOBAL_ADDRESS
              value: "grpcs://100.111.69.60:5685"
            - name: KUMA_MULTIZONE_ZONE_NAME
              value: "kind"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
              value: "/var/run/secrets/kuma.io/tls-cert"
            - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
              value: "5443"
            - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
              value: "kuma-control-plane"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
              value: "/var/run/secrets/kuma.io/tls-cert/ca.crt"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
              value: "false"
            - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
              value: "docker.io/kumahq/kuma-dp:1.2.3"
            - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
              value: "kuma-system"
            - name: KUMA_STORE_TYPE
              value: "kubernetes"
          args:
            - run
            - --log-level=info
            - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
          ports:
            - containerPort: 5681
            - containerPort: 5682
            - containerPort: 5443
            - containerPort: 5678
            - containerPort: 5653
              protocol: UDP
          livenessProbe:
            httpGet:
              path: /healthy
              port: 5680
          readinessProbe:
            httpGet:
              path: /ready
              port: 5680
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
          volumeMounts:
            - name: general-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert
              readOnly: true
            - name: kuma-control-plane-config
              mountPath: /etc/kuma.io/kuma-control-plane
              readOnly: true
      volumes:
        - name: general-tls-cert
          secret:
            secretName: kuma-tls-cert
        - name: kuma-control-plane-config
          configMap:
            name: kuma-control-plane-config
---
# Source: kuma/templates/ingress-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kuma-ingress
  namespace: kuma-system
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
    app: kuma-ingress
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: kuma
      app.kubernetes.io/instance: kuma
      app: kuma-ingress
  template:
    metadata:
      annotations:
        kuma.io/ingress: enabled
      labels:
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app: kuma-ingress
    spec:
      serviceAccountName: kuma-ingress
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      containers:
        - name: ingress
          image: "docker.io/kumahq/kuma-dp:1.2.3"
          imagePullPolicy: IfNotPresent
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUMA_CONTROL_PLANE_URL
              value: "https://kuma-control-plane.kuma-system:5678"
            - name: KUMA_CONTROL_PLANE_CA_CERT_FILE
              value: /var/run/secrets/kuma.io/tls-cert/ca.crt
            - name: KUMA_DATAPLANE_NAME
              value: $(POD_NAME).$(POD_NAMESPACE)
            - name: KUMA_DATAPLANE_ADMIN_PORT
              value: "9901"
            - name: KUMA_DATAPLANE_DRAIN_TIME
              value: 30s
            - name: KUMA_DATAPLANE_RUNTIME_TOKEN_PATH
              value: /var/run/secrets/kubernetes.io/serviceaccount/token
            - name: KUMA_DATAPLANE_PROXY_TYPE
              value: "ingress"
          args:
            - run
            - --log-level=info
          ports:
            - containerPort: 10001
          livenessProbe:
            exec:
              command:
                - wget
                - -qO-
                - http://127.0.0.1:9901
            failureThreshold: 12
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          readinessProbe:
            exec:
              command:
                - wget
                - -qO-
                - http://127.0.0.1:9901
            failureThreshold: 12
            initialDelaySeconds: 1
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          resources:
            requests:
              cpu: 50m
              memory: 64Mi
            limits:
              cpu: 1000m
              memory: 512Mi
          volumeMounts:
            - name: kuma-tls-cert
              mountPath: /var/run/secrets/kuma.io/tls-cert
              readOnly: true
      volumes:
        - name: kuma-tls-cert
          secret:
            secretName: kuma-tls-cert
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: admissionregistration.k8s.io/v1

kind: MutatingWebhookConfiguration
metadata:
  name: kuma-admission-mutating-webhook-configuration
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: mesh.defaulter.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRUldVSFlUeUJJanFrVGZFVG5sREFvREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGd3TWpBeE5URXhNRm9YRFRNeE1EY3pNVEF4TlRFeApNRm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUtpcXFPNTU0MDFTVGVxeHRTRTZqU0RsVFl1SnNjV0R3TGJySWMwd0RZVWZwZlE1WVpSQXJ0Q3YKTGV1SGl2V1RDelNFRjE2bEJRWmJ0bE16cVhDVlp6Um1jVU1JVW0zeUoxaCtSSWNlS2JrMHpoNytCamJLNGhhQQpDSGtjVkFKc3Ria2hXYjlwTHc4ejV4OE5qK0QwbitrWmYvbHovZGZzSGc4ZGFNajUyOCtyeEQ5S0ZFaXR2WVl1ClZuWDBaZ1g4S2lTaTY2clhhWktZWVlsYjE2elZLZjlGb1JIYnRIWFdwcUFsSUNWTGh0THA4OWcwZDZHamFjYUkKYkczRHY0ai9kNktPK0M0RksyNURRSkdjYjR3K3NlYVNMUkRaOGJsNHE5Wjhld3N6UG9PYmhtTHdOVnU2dEJqdgpMMEFKdFNKbjZITTErMnNBa2dpZ3p1Z3VJbkJ2TllVQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRZTQ5aEJxZkcvMlY5UlRBM2VDam1rVWh4TnJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBYnA4clhSY2NQRjF4QkJ4ZEhUL0s5cEZEc0JQSjhIT0o0UStKNTU0UEswOE5ONlMzdHNpdFpWVHRiejFyCnIwbTNsTUpZcHBiMEh1V3ROWHJtKzc2MWF5NG01cjQ5aXVMcXN1dVpzL2d4QmhOcWh0clNRb1dSVDdnOFBXd2EKRWtCb1M2ZWdudjQ5ZGVJMFdPeGphRTU4cHk4WDc3REVpVkpPNi9oNmpBdGE0MU5tZmhsRS83a0dsZEN3bkdFdQpTdjV3UEEvbWxEMXYyczlkb3NDOXJvNTJvYmN3WEhOdUxRWjZHNmhweVNQalNEaWk2bjRQV3pPUHpKTG5EYUJjCjhYWUVaSVMxckk5b3BUUFZiTUxiZ2Vva2NXa3JIRlhqWVZNUENmV0NIK01xMzEyWjdOaUw3MUVRWFFscWVabFcKUkVSRFZvZGFDakU4bURkeC9aczdFS0tLN0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /default-kuma-io-v1alpha1-mesh
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
        resources:
          - meshes
    sideEffects: None
  - name: owner-reference.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRUldVSFlUeUJJanFrVGZFVG5sREFvREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGd3TWpBeE5URXhNRm9YRFRNeE1EY3pNVEF4TlRFeApNRm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUtpcXFPNTU0MDFTVGVxeHRTRTZqU0RsVFl1SnNjV0R3TGJySWMwd0RZVWZwZlE1WVpSQXJ0Q3YKTGV1SGl2V1RDelNFRjE2bEJRWmJ0bE16cVhDVlp6Um1jVU1JVW0zeUoxaCtSSWNlS2JrMHpoNytCamJLNGhhQQpDSGtjVkFKc3Ria2hXYjlwTHc4ejV4OE5qK0QwbitrWmYvbHovZGZzSGc4ZGFNajUyOCtyeEQ5S0ZFaXR2WVl1ClZuWDBaZ1g4S2lTaTY2clhhWktZWVlsYjE2elZLZjlGb1JIYnRIWFdwcUFsSUNWTGh0THA4OWcwZDZHamFjYUkKYkczRHY0ai9kNktPK0M0RksyNURRSkdjYjR3K3NlYVNMUkRaOGJsNHE5Wjhld3N6UG9PYmhtTHdOVnU2dEJqdgpMMEFKdFNKbjZITTErMnNBa2dpZ3p1Z3VJbkJ2TllVQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRZTQ5aEJxZkcvMlY5UlRBM2VDam1rVWh4TnJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBYnA4clhSY2NQRjF4QkJ4ZEhUL0s5cEZEc0JQSjhIT0o0UStKNTU0UEswOE5ONlMzdHNpdFpWVHRiejFyCnIwbTNsTUpZcHBiMEh1V3ROWHJtKzc2MWF5NG01cjQ5aXVMcXN1dVpzL2d4QmhOcWh0clNRb1dSVDdnOFBXd2EKRWtCb1M2ZWdudjQ5ZGVJMFdPeGphRTU4cHk4WDc3REVpVkpPNi9oNmpBdGE0MU5tZmhsRS83a0dsZEN3bkdFdQpTdjV3UEEvbWxEMXYyczlkb3NDOXJvNTJvYmN3WEhOdUxRWjZHNmhweVNQalNEaWk2bjRQV3pPUHpKTG5EYUJjCjhYWUVaSVMxckk5b3BUUFZiTUxiZ2Vva2NXa3JIRlhqWVZNUENmV0NIK01xMzEyWjdOaUw3MUVRWFFscWVabFcKUkVSRFZvZGFDakU4bURkeC9aczdFS0tLN0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /owner-reference-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
        resources:
          - circuitbreakers
          - externalservices
          - faultinjections
          - healthchecks
          - retries
          - proxytemplates
          - ratelimits
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
    
      
    sideEffects: None
  - name: kuma-injector.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRUldVSFlUeUJJanFrVGZFVG5sREFvREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGd3TWpBeE5URXhNRm9YRFRNeE1EY3pNVEF4TlRFeApNRm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUtpcXFPNTU0MDFTVGVxeHRTRTZqU0RsVFl1SnNjV0R3TGJySWMwd0RZVWZwZlE1WVpSQXJ0Q3YKTGV1SGl2V1RDelNFRjE2bEJRWmJ0bE16cVhDVlp6Um1jVU1JVW0zeUoxaCtSSWNlS2JrMHpoNytCamJLNGhhQQpDSGtjVkFKc3Ria2hXYjlwTHc4ejV4OE5qK0QwbitrWmYvbHovZGZzSGc4ZGFNajUyOCtyeEQ5S0ZFaXR2WVl1ClZuWDBaZ1g4S2lTaTY2clhhWktZWVlsYjE2elZLZjlGb1JIYnRIWFdwcUFsSUNWTGh0THA4OWcwZDZHamFjYUkKYkczRHY0ai9kNktPK0M0RksyNURRSkdjYjR3K3NlYVNMUkRaOGJsNHE5Wjhld3N6UG9PYmhtTHdOVnU2dEJqdgpMMEFKdFNKbjZITTErMnNBa2dpZ3p1Z3VJbkJ2TllVQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRZTQ5aEJxZkcvMlY5UlRBM2VDam1rVWh4TnJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBYnA4clhSY2NQRjF4QkJ4ZEhUL0s5cEZEc0JQSjhIT0o0UStKNTU0UEswOE5ONlMzdHNpdFpWVHRiejFyCnIwbTNsTUpZcHBiMEh1V3ROWHJtKzc2MWF5NG01cjQ5aXVMcXN1dVpzL2d4QmhOcWh0clNRb1dSVDdnOFBXd2EKRWtCb1M2ZWdudjQ5ZGVJMFdPeGphRTU4cHk4WDc3REVpVkpPNi9oNmpBdGE0MU5tZmhsRS83a0dsZEN3bkdFdQpTdjV3UEEvbWxEMXYyczlkb3NDOXJvNTJvYmN3WEhOdUxRWjZHNmhweVNQalNEaWk2bjRQV3pPUHpKTG5EYUJjCjhYWUVaSVMxckk5b3BUUFZiTUxiZ2Vva2NXa3JIRlhqWVZNUENmV0NIK01xMzEyWjdOaUw3MUVRWFFscWVabFcKUkVSRFZvZGFDakU4bURkeC9aczdFS0tLN0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /inject-sidecar
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: None
---
# Source: kuma/templates/cp-webhooks-and-secrets.yaml
apiVersion: admissionregistration.k8s.io/v1

kind: ValidatingWebhookConfiguration
metadata:
  name: kuma-validating-webhook-configuration
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
webhooks:
  - name: validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Fail
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRUldVSFlUeUJJanFrVGZFVG5sREFvREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGd3TWpBeE5URXhNRm9YRFRNeE1EY3pNVEF4TlRFeApNRm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUtpcXFPNTU0MDFTVGVxeHRTRTZqU0RsVFl1SnNjV0R3TGJySWMwd0RZVWZwZlE1WVpSQXJ0Q3YKTGV1SGl2V1RDelNFRjE2bEJRWmJ0bE16cVhDVlp6Um1jVU1JVW0zeUoxaCtSSWNlS2JrMHpoNytCamJLNGhhQQpDSGtjVkFKc3Ria2hXYjlwTHc4ejV4OE5qK0QwbitrWmYvbHovZGZzSGc4ZGFNajUyOCtyeEQ5S0ZFaXR2WVl1ClZuWDBaZ1g4S2lTaTY2clhhWktZWVlsYjE2elZLZjlGb1JIYnRIWFdwcUFsSUNWTGh0THA4OWcwZDZHamFjYUkKYkczRHY0ai9kNktPK0M0RksyNURRSkdjYjR3K3NlYVNMUkRaOGJsNHE5Wjhld3N6UG9PYmhtTHdOVnU2dEJqdgpMMEFKdFNKbjZITTErMnNBa2dpZ3p1Z3VJbkJ2TllVQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRZTQ5aEJxZkcvMlY5UlRBM2VDam1rVWh4TnJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBYnA4clhSY2NQRjF4QkJ4ZEhUL0s5cEZEc0JQSjhIT0o0UStKNTU0UEswOE5ONlMzdHNpdFpWVHRiejFyCnIwbTNsTUpZcHBiMEh1V3ROWHJtKzc2MWF5NG01cjQ5aXVMcXN1dVpzL2d4QmhOcWh0clNRb1dSVDdnOFBXd2EKRWtCb1M2ZWdudjQ5ZGVJMFdPeGphRTU4cHk4WDc3REVpVkpPNi9oNmpBdGE0MU5tZmhsRS83a0dsZEN3bkdFdQpTdjV3UEEvbWxEMXYyczlkb3NDOXJvNTJvYmN3WEhOdUxRWjZHNmhweVNQalNEaWk2bjRQV3pPUHpKTG5EYUJjCjhYWUVaSVMxckk5b3BUUFZiTUxiZ2Vva2NXa3JIRlhqWVZNUENmV0NIK01xMzEyWjdOaUw3MUVRWFFscWVabFcKUkVSRFZvZGFDakU4bURkeC9aczdFS0tLN0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /validate-kuma-io-v1alpha1
    rules:
      - apiGroups:
          - kuma.io
        apiVersions:
          - v1alpha1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - circuitbreakers
          - dataplanes
          - externalservices
          - faultinjections
          - healthchecks
          - retries
          - meshes
          - proxytemplates
          - ratelimits
          - trafficlogs
          - trafficpermissions
          - trafficroutes
          - traffictraces
          - zones
    
      
    sideEffects: None
  - name: service.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRUldVSFlUeUJJanFrVGZFVG5sREFvREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGd3TWpBeE5URXhNRm9YRFRNeE1EY3pNVEF4TlRFeApNRm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUtpcXFPNTU0MDFTVGVxeHRTRTZqU0RsVFl1SnNjV0R3TGJySWMwd0RZVWZwZlE1WVpSQXJ0Q3YKTGV1SGl2V1RDelNFRjE2bEJRWmJ0bE16cVhDVlp6Um1jVU1JVW0zeUoxaCtSSWNlS2JrMHpoNytCamJLNGhhQQpDSGtjVkFKc3Ria2hXYjlwTHc4ejV4OE5qK0QwbitrWmYvbHovZGZzSGc4ZGFNajUyOCtyeEQ5S0ZFaXR2WVl1ClZuWDBaZ1g4S2lTaTY2clhhWktZWVlsYjE2elZLZjlGb1JIYnRIWFdwcUFsSUNWTGh0THA4OWcwZDZHamFjYUkKYkczRHY0ai9kNktPK0M0RksyNURRSkdjYjR3K3NlYVNMUkRaOGJsNHE5Wjhld3N6UG9PYmhtTHdOVnU2dEJqdgpMMEFKdFNKbjZITTErMnNBa2dpZ3p1Z3VJbkJ2TllVQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRZTQ5aEJxZkcvMlY5UlRBM2VDam1rVWh4TnJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBYnA4clhSY2NQRjF4QkJ4ZEhUL0s5cEZEc0JQSjhIT0o0UStKNTU0UEswOE5ONlMzdHNpdFpWVHRiejFyCnIwbTNsTUpZcHBiMEh1V3ROWHJtKzc2MWF5NG01cjQ5aXVMcXN1dVpzL2d4QmhOcWh0clNRb1dSVDdnOFBXd2EKRWtCb1M2ZWdudjQ5ZGVJMFdPeGphRTU4cHk4WDc3REVpVkpPNi9oNmpBdGE0MU5tZmhsRS83a0dsZEN3bkdFdQpTdjV3UEEvbWxEMXYyczlkb3NDOXJvNTJvYmN3WEhOdUxRWjZHNmhweVNQalNEaWk2bjRQV3pPUHpKTG5EYUJjCjhYWUVaSVMxckk5b3BUUFZiTUxiZ2Vva2NXa3JIRlhqWVZNUENmV0NIK01xMzEyWjdOaUw3MUVRWFFscWVabFcKUkVSRFZvZGFDakU4bURkeC9aczdFS0tLN0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /validate-v1-service
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - services
    sideEffects: None
  - name: secret.validator.kuma-admission.kuma.io
    admissionReviewVersions: ["v1beta1"]
    namespaceSelector:
      matchLabels:
        kuma.io/system-namespace: "true"
    failurePolicy: Ignore
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRUldVSFlUeUJJanFrVGZFVG5sREFvREFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGd3TWpBeE5URXhNRm9YRFRNeE1EY3pNVEF4TlRFeApNRm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUtpcXFPNTU0MDFTVGVxeHRTRTZqU0RsVFl1SnNjV0R3TGJySWMwd0RZVWZwZlE1WVpSQXJ0Q3YKTGV1SGl2V1RDelNFRjE2bEJRWmJ0bE16cVhDVlp6Um1jVU1JVW0zeUoxaCtSSWNlS2JrMHpoNytCamJLNGhhQQpDSGtjVkFKc3Ria2hXYjlwTHc4ejV4OE5qK0QwbitrWmYvbHovZGZzSGc4ZGFNajUyOCtyeEQ5S0ZFaXR2WVl1ClZuWDBaZ1g4S2lTaTY2clhhWktZWVlsYjE2elZLZjlGb1JIYnRIWFdwcUFsSUNWTGh0THA4OWcwZDZHamFjYUkKYkczRHY0ai9kNktPK0M0RksyNURRSkdjYjR3K3NlYVNMUkRaOGJsNHE5Wjhld3N6UG9PYmhtTHdOVnU2dEJqdgpMMEFKdFNKbjZITTErMnNBa2dpZ3p1Z3VJbkJ2TllVQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJRZTQ5aEJxZkcvMlY5UlRBM2VDam1rVWh4TnJEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBYnA4clhSY2NQRjF4QkJ4ZEhUL0s5cEZEc0JQSjhIT0o0UStKNTU0UEswOE5ONlMzdHNpdFpWVHRiejFyCnIwbTNsTUpZcHBiMEh1V3ROWHJtKzc2MWF5NG01cjQ5aXVMcXN1dVpzL2d4QmhOcWh0clNRb1dSVDdnOFBXd2EKRWtCb1M2ZWdudjQ5ZGVJMFdPeGphRTU4cHk4WDc3REVpVkpPNi9oNmpBdGE0MU5tZmhsRS83a0dsZEN3bkdFdQpTdjV3UEEvbWxEMXYyczlkb3NDOXJvNTJvYmN3WEhOdUxRWjZHNmhweVNQalNEaWk2bjRQV3pPUHpKTG5EYUJjCjhYWUVaSVMxckk5b3BUUFZiTUxiZ2Vva2NXa3JIRlhqWVZNUENmV0NIK01xMzEyWjdOaUw3MUVRWFFscWVabFcKUkVSRFZvZGFDakU4bURkeC9aczdFS0tLN0E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        namespace: kuma-system
        name: kuma-control-plane
        path: /validate-v1-secret
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - secrets
    sideEffects: None
---
# Source: kuma/templates/pre-delete-webhooks.yaml
# HELM first deletes RBAC of Kuma, then it tries to delete Secrets. We've got validating webhook on Secrets.
# But even that the policy of this webhook is Ignore, it fails because Kuma does not have permission to access Secrets anymore.
# Therefore we first need to delete webhook so we can delete the rest of the deployment
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-pre-delete-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-patch-ns-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kuma-install-missing-crds-scripts
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
data:
  install_missing_crds.sh: |
    #!/usr/bin/env sh

    if [ -s /kuma/missing/crds.yaml ]; then
      echo "/kuma/missing/crds.yaml found and is not empty, adding crds"
      kubectl create -f /kuma/missing/crds.yaml
    else
      echo "/kuma/missing/crds.yaml not found or empty, it looks like there is no missing crds"
    fi
  save_missing_crds.sh: |
    #!/usr/bin/env sh

    missing_crds="$(kumactl install crds --only-missing)"

    if [ -n "${missing_crds}" ]; then
      echo "found missing crds - saving to /kuma/missing/crds.yaml"
      echo "${missing_crds}" > /kuma/missing/crds.yaml
    fi
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-pre-delete-job
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    resourceNames:
      - kuma-validating-webhook-configuration
    verbs:
      - delete
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-patch-ns-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    resourceNames:
      - kuma-system
    verbs:
      - get
      - patch
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
rules:
  - apiGroups:
    - "apiextensions.k8s.io"
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - list
      - get
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-pre-delete-job
  annotations:
    "helm.sh/hook": "pre-delete"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-pre-delete-job
subjects:
  - kind: ServiceAccount
    name: kuma-pre-delete-job
    namespace: kuma-system
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-patch-ns-job
  namespace: kuma-system
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-patch-ns-job
subjects:
  - kind: ServiceAccount
    name: kuma-patch-ns-job
    namespace: kuma-system
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kuma-install-missing-crds
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
  labels:
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-install-missing-crds
subjects:
  - kind: ServiceAccount
    name: kuma-install-missing-crds
    namespace: kuma-system
---
# Source: kuma/templates/pre-delete-webhooks.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-delete-webhook
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-delete"
    
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    metadata:
      name: kuma-delete-webhook
      labels:
    
        helm.sh/chart: kuma-0.6.3
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.2.3"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-pre-delete-job
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-delete-job
          image: "bitnami/kubectl:1.20"
          command:
            - 'kubectl'
            - 'delete'
            - 'ValidatingWebhookConfiguration'
            - kuma-validating-webhook-configuration
---
# Source: kuma/templates/pre-install-patch-namespace-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-patch-ns
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-install"
    
    "helm.sh/hook-weight": "5"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
spec:
  template:
    metadata:
      name: kuma-patch-ns-script
      labels:
    
        helm.sh/chart: kuma-0.6.3
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.2.3"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-patch-ns-job
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-install-job
          image: "bitnami/kubectl:1.20"
          command:
            - 'kubectl'
            - 'patch'
            - 'namespace'
            - "kuma-system"
            - '--type'
            - 'merge'
            - '--patch'
            - '{ "metadata": { "labels": { "kuma.io/system-namespace": "true" } } }'
---
# Source: kuma/templates/pre-upgrade-install-missing-crds-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kuma-install-missing-crds
  namespace: kuma-system
  labels:
  
    helm.sh/chart: kuma-0.6.3
    app.kubernetes.io/name: kuma
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/version: "1.2.3"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded"
spec:
  template:
    metadata:
      name: kuma-install-missing-crds-job
      labels:
    
        helm.sh/chart: kuma-0.6.3
        app.kubernetes.io/name: kuma
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/version: "1.2.3"
        app.kubernetes.io/managed-by: Helm
    spec:
      serviceAccountName: kuma-install-missing-crds
      nodeSelector:
      
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      containers:
        - name: pre-upgrade-job
          image: "bitnami/kubectl:1.20"
          command:
            - '/kuma/scripts/install_missing_crds.sh'
          volumeMounts:
            - mountPath: /kuma/missing
              name: missing-crds
              readOnly: true
            - mountPath: /kuma/scripts
              name: scripts
              readOnly: true
      initContainers:
        - name: pre-upgrade-job-init
          image: "docker.io/kumahq/kumactl:1.2.3"
          volumeMounts:
          - mountPath: /kuma/missing
            name: missing-crds
          - mountPath: /kuma/scripts
            name: scripts
            readOnly: true
          command:
          - '/kuma/scripts/save_missing_crds.sh'
      volumes:
        - name: scripts
          configMap:
            name: kuma-install-missing-crds-scripts
            defaultMode: 0755
        - name: missing-crds
          emptyDir: {}
