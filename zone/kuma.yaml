apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-ingress
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-patch-ns-job
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-pre-delete-job
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-install-missing-crds
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-control-plane
  namespace: kuma-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-patch-ns-job
  namespace: kuma-system
rules:
- apiGroups:
  - ""
  resourceNames:
  - kuma-system
  resources:
  - namespaces
  verbs:
  - get
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-control-plane
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - configmaps
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - kuma.io
  resources:
  - dataplanes
  - dataplaneinsights
  - meshes
  - zones
  - zoneinsights
  - zoneingresses
  - zoneingressinsights
  - meshinsights
  - serviceinsights
  - proxytemplates
  - ratelimits
  - trafficpermissions
  - trafficroutes
  - timeouts
  - retries
  - circuitbreakers
  - virtualoutbounds
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - kuma.io
  resources:
  - externalservices
  - faultinjections
  - healthchecks
  - trafficlogs
  - traffictraces
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  verbs:
  - '*'
- apiGroups:
  - kuma.io
  resources:
  - meshes/finalizers
  verbs:
  - '*'
- apiGroups:
  - kuma.io
  resources:
  - dataplanes/finalizers
  verbs:
  - '*'
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-install-missing-crds
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - list
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-pre-delete-job
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - kuma-validating-webhook-configuration
  resources:
  - validatingwebhookconfigurations
  verbs:
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kuma-control-plane
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuma-control-plane
subjects:
- kind: ServiceAccount
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-patch-ns-job
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-patch-ns-job
subjects:
- kind: ServiceAccount
  name: kuma-patch-ns-job
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-control-plane
subjects:
- kind: ServiceAccount
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-install-missing-crds
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-install-missing-crds
subjects:
- kind: ServiceAccount
  name: kuma-install-missing-crds
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-pre-delete-job
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-pre-delete-job
subjects:
- kind: ServiceAccount
  name: kuma-pre-delete-job
  namespace: kuma-system
---
apiVersion: v1
data:
  config.yaml: |
    # use this file to override default configuration of `kuma-cp`
    #
    # see conf/kuma-cp.conf.yml for available settings
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-control-plane-config
  namespace: kuma-system
---
apiVersion: v1
data:
  install_missing_crds.sh: |
    #!/usr/bin/env sh

    if [ -s /kuma/missing/crds.yaml ]; then
      echo "/kuma/missing/crds.yaml found and is not empty, adding crds"
      kubectl create -f /kuma/missing/crds.yaml
    else
      echo "/kuma/missing/crds.yaml not found or empty, it looks like there is no missing crds"
    fi
  save_missing_crds.sh: |
    #!/usr/bin/env sh

    missing_crds="$(kumactl install crds --only-missing)"

    if [ -n "${missing_crds}" ]; then
      echo "found missing crds - saving to /kuma/missing/crds.yaml"
      echo "${missing_crds}" > /kuma/missing/crds.yaml
    fi
kind: ConfigMap
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-install-missing-crds-scripts
  namespace: kuma-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtUdFpZZHNBZkdoY3hLL3ZxeUtWZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE1TWpReU1EVXdNVGxhRncwek1UQTVNakl5TURVdwpNVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDYlFQZEZqMFlhTy9JbWptYW9yVG91bTVVbHhoMHBpV2czc2RoOG9tVzNtTnRuRzhZeWlDRVgKUkswcks3T25VUHAwODhlREk3UDFrV2paRThjY0tYUVFYYmlyYmkwdThCNjB2RVZRT09VbjRxTFpicWwvN3cxSQpkSUx5YW1wY1Rlalh0NmxhUXBuMThaajFLTEhSeUVqZlRLR2x6TW4yVHZtVnhHS2pBK1FjeDUyUm5udGtGY1puCkNndkc2RWhvZVVaT3U4VTlhYURQWXY0RjBRWUdoRFVHYnJ1MUplQU5kSlpVc3F6YzZCclhBZ25lMFJDcHZlRmwKM1FNYllpMExhclJzdkZ6cG1lcllIaWRQMUZuQjgrRjgyS3hLcFhKd0NRKzRlTGlkakYzakNWa1ZudHFxbjdBcwptd3dyWmZvQU1veXhmRXp5WGFtT1NaV2tQcnU5ODVyL0FnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUJlQjZNTnlLWVRiRXh6SlFydXRWR2k2RGdIVXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF6Uk5NelIyT1RaWWR3SHY4d1V4aHJzQ2hpRjBLcWdMNElKT2JXQlBxUFhabDh6N2NDRFBBcGFFU2hzClFGNkhoKzdDUG1GMnFaZ2dHUUNoZjRTd2RNSzQ2RzZDQURqRkh1Tk5ucnZWNDNEalV6ZkUrTFp4MjRqaHJkSzAKSUxjeVExTTRtVHU1d2tkVjBKZ2pOeWZheE9SaklYZHMyZ3R6VTBJOXZzc3R5TWEvS3NjMzhIL25DRVNSVG1qMwphaWRLOC8zL1VXSmxTcm9odnc1dUd5bDNYeDFDNTgwL0NwMXQ0T2MxSW9SWmdDTmxWcnF2MHdEMFZYMnlvWVd1ClB6Q0ZKTGNPc0daRmNkUVFYdGY3M2x3eUo5UEFyb1h0VGVQc09mc1hza1MvM3hSRkdadmdGMG9VZzJ4WmR5TDAKcGFiaEREZTZ6MVJKaXJvZnBYY2NRbjA1OUZFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhakNDQWxLZ0F3SUJBZ0lRTG5VT3AxVStleHdNWkhTUWpvMlhFekFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNRGt5TkRJd05UQXhPVm9YRFRNeE1Ea3lNakl3TlRBeApPVm93SFRFYk1Ca0dBMVVFQXhNU2EzVnRZUzFqYjI1MGNtOXNMWEJzWVc1bE1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXZkc2dJQlcwUWpIY1l5cEJqRDBXWnlrVWhyZ21mWDY5VVRibFNCS3cKYjkrMHduaVNGQkZQNzQxQXB3VTdnS1huSVIzRzJzTjJDVEEwUGk5dEE1OGlKN3hYaHM3VjcxdFVrYUpXbk9yRQo4N28rVFVEQzBrRmNpRTNzcVIvSHBsMnFSK05FUWV3VzNTbkpvdVR2SXE4OU5HNGdvZTJWZHFHS2pKT3R5SmpICjZncTNjT3hjU2hkTjFFVjJUK3Y5QUJCMDlnNmkwNFQxV3IvRlRoZitFZGE0ZDN5Ly9vZXlKV3NmWXpmOEVSc0MKVGdHaGVBdG0rTCtNYnA1b1M1c1pvcERlUUxxamMwcmo2cDdtbzlLUTFyZHFJYWRVcXhoR0w1TVJIci9yQk9kZgpIMXJhSjN6Ti82OGtpR0g2RTI1SWQzU0dkbndMbDZsdVRpMjBxNElhaGZiZ1pRSURBUUFCbzRHd01JR3RNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUUY0SG93M0lwaE5zVEhNbEN1NjFVYUxvT0FkVEJOQmdOVgpIUkVFUmpCRWdoNXJkVzFoTFdOdmJuUnliMnd0Y0d4aGJtVXVhM1Z0WVMxemVYTjBaVzJDSW10MWJXRXRZMjl1CmRISnZiQzF3YkdGdVpTNXJkVzFoTFhONWMzUmxiUzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFJT2sKYkFJaFZub1I4ZWU5RXNqZmRmMVRTMnU0S0lkQXNiempzZmc0RmJydXFoSDVMMWZBUFpicHhCRmdjRlFsQUdxbgpVQlQzV21xVktFVkRtemwrZnFuUkZVczlIZUhZaW1ucHdMYlRXdlpraDY0T2ZYblJHMWlMQzRpYko4QmY5Q2g1CnhBK0l6VDI4bm11ZFMrR2hxcGNERm9MbFptcGVST1VXU1drR25MTW5Hck0vMkFHVjRiNE1SOFZuWjZXTTFCT1UKK3hraGhxUGVYZlkyOWxCa0xsTkxTVjd2RzAvUUxxWW5pTUx0U0JrdmcxbDNwZVhQY3JRR3ROcGRodmVIV08yZQplOXVuK2l6ZVRNeUdPd0E2WGhwYlVnN3VPTmpyK3REd2ppZUY2NDhiMGJZWFRVQlNoc0ZQL01DYmoyVDR2OWk0CnZiVzZwUmxITDVnMmNkMms1NlE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdmRzZ0lCVzBRakhjWXlwQmpEMFdaeWtVaHJnbWZYNjlVVGJsU0JLd2I5KzB3bmlTCkZCRlA3NDFBcHdVN2dLWG5JUjNHMnNOMkNUQTBQaTl0QTU4aUo3eFhoczdWNzF0VWthSlduT3JFODdvK1RVREMKMGtGY2lFM3NxUi9IcGwycVIrTkVRZXdXM1NuSm91VHZJcTg5Tkc0Z29lMlZkcUdLakpPdHlKakg2Z3EzY094YwpTaGROMUVWMlQrdjlBQkIwOWc2aTA0VDFXci9GVGhmK0VkYTRkM3kvL29leUpXc2ZZemY4RVJzQ1RnR2hlQXRtCitMK01icDVvUzVzWm9wRGVRTHFqYzByajZwN21vOUtRMXJkcUlhZFVxeGhHTDVNUkhyL3JCT2RmSDFyYUozek4KLzY4a2lHSDZFMjVJZDNTR2Rud0xsNmx1VGkyMHE0SWFoZmJnWlFJREFRQUJBb0lCQUdOaHl5VkFkMFdYV0NoSQp2RnN1dHdWMVNadGoxakluSCs3ZGI1UVV4R3NyalRHbmI4QTFkOFNNQ21YanBVd29qQjZYdWJwV1N2bHdWRWloCkJzMjRoV2FMZnIzQWs5aGgxSmtQZzR0TWthQ0x3NFVvKzFLWWlGbUpnUExmQWVHaWNqcURTdjIvR2hEWGlRZE8KRTZmeVYzV1VtRnhyUTZ2L3o4amFuVU8rUmhmS2NYbU90KzJaL3VhclZ1ZnFlUlJXZC9YNG1sRUJmb0dYRWloRgoxRGRPNG5jQVpDREFsTndDMjJCOGVoaTR4TW85R3N6VHE4Q0NJVGc2Y215K1ZYN1RUR00rRFRSYk1RNE9GV3k4CnZ6V0tkYzlMdTJIcGhhd1EwTkhDNDNUS2FmRmFEL2dscm12NytEZ2pZNEtHMWJ2UXovM2lISXlZK3N2OVFkcjEKYzFod2l0a0NnWUVBMlBtLzJrZGFkRDFYZEhoUWlXTGNXWi9YUGxZOGlaak5XQ0Uyb0NPeHhBbFZHZnhXcUxvQgo2QlIyK2JZTmlsVkwxbnZPMEdwTmIycEhYeE1EMFRQcUNJVUxQMlJqb29LYXpUUnRkY0lkbmU4c1VtU2Q0VzlECnNaRzZoWmZNdHk2OXR6ZmVCdmhZNlFKbytKYk9SWHBkTWFMU3U2SUF5dExRODVMeWprOEdIMk1DZ1lFQTRBQ3oKbzExVWVxb3VOekFkT2toelhwa21DSDluVVh0OTFvL25qcE5kaFRhNENOd2t5V09YdWJGbjczZWNsVlhlb2k2bAo2OEpTLzI4VkgrSHJMOHhUcm5La0xlRVZDSWpmQzdMT3dibXU1QXhodFBCdWZLWCttR0VLYm56ZGlPSTkwWmlOCm84OHdIU0xnZk1zdlg5KzNORDNOdldWTUs4QVRCMFR6amZZclA1Y0NnWUVBdmd2TFltcGJMVE5KZGNlb2F4Mi8KZVhVS3VCd2F2RDZ0cGNLNXNQeHl5UTJQajhvNU1XSnpKdzg5d3EwV0lSTmk4TVBTdXpSUkRRU2U3UVNmdEU3dgpiM1R4REI1bk1zR0l5N0pmS2VUVHdqRHF0bVJROFZOZWpKcmpMLzV0SGduL3ZBcGdHK1ROSTVLcjFRbHFOT3JmCjFBa1U0YW9kWFluWDRYRFZxWlpIKzVjQ2dZQnNURXFOY0FENDhUQTQ1RjB0SVh3TnYxTmhCbCtvU0dFMWpBdHkKcGhLdjVoMmh3dlZTSElGdGVMVDhWTUx5ZkRxUUJLZVpUVEVkWjlJNXdOc1pGOXRaV3ZtL2FMUG5sV3pvMWdFYQpMakM4OXJPQ2JEK3VxZjVtSTN5TW9IZm14eU1HSTVCUEkwdHF1c0wzOHJBcjFSaFkvSXhzeGYzR3BTMU45V3NmCk5tWUFid0tCZ0ZBeHNiOW83cGV2d05lK1JsTUh0K2huZ1hyREE0amdmODFaVEVKclYreXQrQzg3Z2ZEUnYzaDkKLzc5Q1Z4K3JmRXBLK2NsQ0dwS2gvbFNSVVA3ZDBCYmRvdms0Nmc3T2xHL2pMdUl0c2poRXhXYVJVVkFaeFBuawpkMlRDYnM2L1RGUUl2d0dIUGVDcGpiOG9xS3pGbHNpNHhRYVF0K0ZWS0U4bDF3TEwyRlBJCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-tls-cert
  namespace: kuma-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "5680"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-control-plane
  namespace: kuma-system
spec:
  ports:
  - name: http-api-server
    port: 5681
  - name: https-api-server
    port: 5682
  - name: https-admission-server
    port: 443
    targetPort: 5443
  - name: mads-server
    port: 5676
  - name: dp-server
    port: 5678
  - name: dns-server
    port: 5653
    protocol: UDP
  selector:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/name: kuma
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-ingress
  namespace: kuma-system
spec:
  ports:
  - port: 10001
    protocol: TCP
    targetPort: 10001
  selector:
    app: kuma-ingress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/name: kuma
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-control-plane
  namespace: kuma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-control-plane
      app.kubernetes.io/instance: kuma
      app.kubernetes.io/name: kuma
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        checksum/config: 6df33ec160599ac1a5e9fda109e2ba0d02c865f926ac14ecf92895e96b70a228
        checksum/tls-secrets: e9168cd5bd4389147294f0875c12e00619460b922033d40873bf483ef983194c
      labels:
        app: kuma-control-plane
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/name: kuma
    spec:
      containers:
      - args:
        - run
        - --log-level=info
        - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
        env:
        - name: KUMA_API_SERVER_READ_ONLY
          value: "true"
        - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
          value: "false"
        - name: KUMA_DP_SERVER_HDS_ENABLED
          value: "false"
        - name: KUMA_ENVIRONMENT
          value: kubernetes
        - name: KUMA_GENERAL_TLS_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/tls.crt
        - name: KUMA_GENERAL_TLS_KEY_FILE
          value: /var/run/secrets/kuma.io/tls-cert/tls.key
        - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
          value: docker.io/kumahq/kuma-init:1.3.0
        - name: KUMA_MODE
          value: zone
        - name: KUMA_MULTIZONE_ZONE_GLOBAL_ADDRESS
          value: grpcs://100.100.100.100:5685
        - name: KUMA_MULTIZONE_ZONE_NAME
          value: TODO
        - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
          value: /var/run/secrets/kuma.io/tls-cert
        - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
          value: "5443"
        - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
          value: kuma-control-plane
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/ca.crt
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
          value: "false"
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
          value: docker.io/kumahq/kuma-dp:1.3.0
        - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
          value: kuma-system
        - name: KUMA_STORE_TYPE
          value: kubernetes
        image: docker.io/kumahq/kuma-cp:1.3.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthy
            port: 5680
        name: control-plane
        ports:
        - containerPort: 5681
        - containerPort: 5682
        - containerPort: 5443
        - containerPort: 5678
        - containerPort: 5653
          protocol: UDP
        readinessProbe:
          httpGet:
            path: /ready
            port: 5680
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/run/secrets/kuma.io/tls-cert
          name: general-tls-cert
          readOnly: true
        - mountPath: /etc/kuma.io/kuma-control-plane
          name: kuma-control-plane-config
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      serviceAccountName: kuma-control-plane
      volumes:
      - name: general-tls-cert
        secret:
          secretName: kuma-tls-cert
      - configMap:
          name: kuma-control-plane-config
        name: kuma-control-plane-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kuma-ingress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-ingress
  namespace: kuma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-ingress
      app.kubernetes.io/instance: kuma
      app.kubernetes.io/name: kuma
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        kuma.io/ingress: enabled
      labels:
        app: kuma-ingress
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/name: kuma
    spec:
      containers:
      - args:
        - run
        - --log-level=info
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUMA_CONTROL_PLANE_URL
          value: https://kuma-control-plane.kuma-system:5678
        - name: KUMA_CONTROL_PLANE_CA_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/ca.crt
        - name: KUMA_DATAPLANE_NAME
          value: $(POD_NAME).$(POD_NAMESPACE)
        - name: KUMA_DATAPLANE_ADMIN_PORT
          value: "9901"
        - name: KUMA_DATAPLANE_DRAIN_TIME
          value: 30s
        - name: KUMA_DATAPLANE_RUNTIME_TOKEN_PATH
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: KUMA_DATAPLANE_PROXY_TYPE
          value: ingress
        image: docker.io/kumahq/kuma-dp:1.3.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - wget
            - -qO-
            - http://127.0.0.1:9901
          failureThreshold: 12
          initialDelaySeconds: 60
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: ingress
        ports:
        - containerPort: 10001
        readinessProbe:
          exec:
            command:
            - wget
            - -qO-
            - http://127.0.0.1:9901
          failureThreshold: 12
          initialDelaySeconds: 1
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - mountPath: /var/run/secrets/kuma.io/tls-cert
          name: kuma-tls-cert
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      serviceAccountName: kuma-ingress
      volumes:
      - name: kuma-tls-cert
        secret:
          secretName: kuma-tls-cert
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "5"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-delete-webhook
  namespace: kuma-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.3.0
        helm.sh/chart: kuma-0.7.0
      name: kuma-delete-webhook
    spec:
      containers:
      - command:
        - kubectl
        - delete
        - ValidatingWebhookConfiguration
        - kuma-validating-webhook-configuration
        image: bitnami/kubectl:1.20
        name: pre-delete-job
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-pre-delete-job
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-install-missing-crds
  namespace: kuma-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.3.0
        helm.sh/chart: kuma-0.7.0
      name: kuma-install-missing-crds-job
    spec:
      containers:
      - command:
        - /kuma/scripts/install_missing_crds.sh
        image: bitnami/kubectl:1.20
        name: pre-upgrade-job
        volumeMounts:
        - mountPath: /kuma/missing
          name: missing-crds
          readOnly: true
        - mountPath: /kuma/scripts
          name: scripts
          readOnly: true
      initContainers:
      - command:
        - /kuma/scripts/save_missing_crds.sh
        image: docker.io/kumahq/kumactl:1.3.0
        name: pre-upgrade-job-init
        volumeMounts:
        - mountPath: /kuma/missing
          name: missing-crds
        - mountPath: /kuma/scripts
          name: scripts
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-install-missing-crds
      volumes:
      - configMap:
          defaultMode: 493
          name: kuma-install-missing-crds-scripts
        name: scripts
      - emptyDir: {}
        name: missing-crds
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "5"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-patch-ns
  namespace: kuma-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.3.0
        helm.sh/chart: kuma-0.7.0
      name: kuma-patch-ns-script
    spec:
      containers:
      - command:
        - kubectl
        - patch
        - namespace
        - kuma-system
        - --type
        - merge
        - --patch
        - '{ "metadata": { "labels": { "kuma.io/system-namespace": "true" } } }'
        image: bitnami/kubectl:1.20
        name: pre-install-job
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-patch-ns-job
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-admission-mutating-webhook-configuration
  namespace: kuma-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtUdFpZZHNBZkdoY3hLL3ZxeUtWZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE1TWpReU1EVXdNVGxhRncwek1UQTVNakl5TURVdwpNVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDYlFQZEZqMFlhTy9JbWptYW9yVG91bTVVbHhoMHBpV2czc2RoOG9tVzNtTnRuRzhZeWlDRVgKUkswcks3T25VUHAwODhlREk3UDFrV2paRThjY0tYUVFYYmlyYmkwdThCNjB2RVZRT09VbjRxTFpicWwvN3cxSQpkSUx5YW1wY1Rlalh0NmxhUXBuMThaajFLTEhSeUVqZlRLR2x6TW4yVHZtVnhHS2pBK1FjeDUyUm5udGtGY1puCkNndkc2RWhvZVVaT3U4VTlhYURQWXY0RjBRWUdoRFVHYnJ1MUplQU5kSlpVc3F6YzZCclhBZ25lMFJDcHZlRmwKM1FNYllpMExhclJzdkZ6cG1lcllIaWRQMUZuQjgrRjgyS3hLcFhKd0NRKzRlTGlkakYzakNWa1ZudHFxbjdBcwptd3dyWmZvQU1veXhmRXp5WGFtT1NaV2tQcnU5ODVyL0FnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUJlQjZNTnlLWVRiRXh6SlFydXRWR2k2RGdIVXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF6Uk5NelIyT1RaWWR3SHY4d1V4aHJzQ2hpRjBLcWdMNElKT2JXQlBxUFhabDh6N2NDRFBBcGFFU2hzClFGNkhoKzdDUG1GMnFaZ2dHUUNoZjRTd2RNSzQ2RzZDQURqRkh1Tk5ucnZWNDNEalV6ZkUrTFp4MjRqaHJkSzAKSUxjeVExTTRtVHU1d2tkVjBKZ2pOeWZheE9SaklYZHMyZ3R6VTBJOXZzc3R5TWEvS3NjMzhIL25DRVNSVG1qMwphaWRLOC8zL1VXSmxTcm9odnc1dUd5bDNYeDFDNTgwL0NwMXQ0T2MxSW9SWmdDTmxWcnF2MHdEMFZYMnlvWVd1ClB6Q0ZKTGNPc0daRmNkUVFYdGY3M2x3eUo5UEFyb1h0VGVQc09mc1hza1MvM3hSRkdadmdGMG9VZzJ4WmR5TDAKcGFiaEREZTZ6MVJKaXJvZnBYY2NRbjA1OUZFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /default-kuma-io-v1alpha1-mesh
  failurePolicy: Fail
  name: mesh.defaulter.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - meshes
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtUdFpZZHNBZkdoY3hLL3ZxeUtWZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE1TWpReU1EVXdNVGxhRncwek1UQTVNakl5TURVdwpNVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDYlFQZEZqMFlhTy9JbWptYW9yVG91bTVVbHhoMHBpV2czc2RoOG9tVzNtTnRuRzhZeWlDRVgKUkswcks3T25VUHAwODhlREk3UDFrV2paRThjY0tYUVFYYmlyYmkwdThCNjB2RVZRT09VbjRxTFpicWwvN3cxSQpkSUx5YW1wY1Rlalh0NmxhUXBuMThaajFLTEhSeUVqZlRLR2x6TW4yVHZtVnhHS2pBK1FjeDUyUm5udGtGY1puCkNndkc2RWhvZVVaT3U4VTlhYURQWXY0RjBRWUdoRFVHYnJ1MUplQU5kSlpVc3F6YzZCclhBZ25lMFJDcHZlRmwKM1FNYllpMExhclJzdkZ6cG1lcllIaWRQMUZuQjgrRjgyS3hLcFhKd0NRKzRlTGlkakYzakNWa1ZudHFxbjdBcwptd3dyWmZvQU1veXhmRXp5WGFtT1NaV2tQcnU5ODVyL0FnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUJlQjZNTnlLWVRiRXh6SlFydXRWR2k2RGdIVXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF6Uk5NelIyT1RaWWR3SHY4d1V4aHJzQ2hpRjBLcWdMNElKT2JXQlBxUFhabDh6N2NDRFBBcGFFU2hzClFGNkhoKzdDUG1GMnFaZ2dHUUNoZjRTd2RNSzQ2RzZDQURqRkh1Tk5ucnZWNDNEalV6ZkUrTFp4MjRqaHJkSzAKSUxjeVExTTRtVHU1d2tkVjBKZ2pOeWZheE9SaklYZHMyZ3R6VTBJOXZzc3R5TWEvS3NjMzhIL25DRVNSVG1qMwphaWRLOC8zL1VXSmxTcm9odnc1dUd5bDNYeDFDNTgwL0NwMXQ0T2MxSW9SWmdDTmxWcnF2MHdEMFZYMnlvWVd1ClB6Q0ZKTGNPc0daRmNkUVFYdGY3M2x3eUo5UEFyb1h0VGVQc09mc1hza1MvM3hSRkdadmdGMG9VZzJ4WmR5TDAKcGFiaEREZTZ6MVJKaXJvZnBYY2NRbjA1OUZFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /owner-reference-kuma-io-v1alpha1
  failurePolicy: Fail
  name: owner-reference.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - circuitbreakers
    - externalservices
    - faultinjections
    - healthchecks
    - retries
    - proxytemplates
    - ratelimits
    - trafficlogs
    - trafficpermissions
    - trafficroutes
    - traffictraces
    - virtualoutbounds
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtUdFpZZHNBZkdoY3hLL3ZxeUtWZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE1TWpReU1EVXdNVGxhRncwek1UQTVNakl5TURVdwpNVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDYlFQZEZqMFlhTy9JbWptYW9yVG91bTVVbHhoMHBpV2czc2RoOG9tVzNtTnRuRzhZeWlDRVgKUkswcks3T25VUHAwODhlREk3UDFrV2paRThjY0tYUVFYYmlyYmkwdThCNjB2RVZRT09VbjRxTFpicWwvN3cxSQpkSUx5YW1wY1Rlalh0NmxhUXBuMThaajFLTEhSeUVqZlRLR2x6TW4yVHZtVnhHS2pBK1FjeDUyUm5udGtGY1puCkNndkc2RWhvZVVaT3U4VTlhYURQWXY0RjBRWUdoRFVHYnJ1MUplQU5kSlpVc3F6YzZCclhBZ25lMFJDcHZlRmwKM1FNYllpMExhclJzdkZ6cG1lcllIaWRQMUZuQjgrRjgyS3hLcFhKd0NRKzRlTGlkakYzakNWa1ZudHFxbjdBcwptd3dyWmZvQU1veXhmRXp5WGFtT1NaV2tQcnU5ODVyL0FnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUJlQjZNTnlLWVRiRXh6SlFydXRWR2k2RGdIVXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF6Uk5NelIyT1RaWWR3SHY4d1V4aHJzQ2hpRjBLcWdMNElKT2JXQlBxUFhabDh6N2NDRFBBcGFFU2hzClFGNkhoKzdDUG1GMnFaZ2dHUUNoZjRTd2RNSzQ2RzZDQURqRkh1Tk5ucnZWNDNEalV6ZkUrTFp4MjRqaHJkSzAKSUxjeVExTTRtVHU1d2tkVjBKZ2pOeWZheE9SaklYZHMyZ3R6VTBJOXZzc3R5TWEvS3NjMzhIL25DRVNSVG1qMwphaWRLOC8zL1VXSmxTcm9odnc1dUd5bDNYeDFDNTgwL0NwMXQ0T2MxSW9SWmdDTmxWcnF2MHdEMFZYMnlvWVd1ClB6Q0ZKTGNPc0daRmNkUVFYdGY3M2x3eUo5UEFyb1h0VGVQc09mc1hza1MvM3hSRkdadmdGMG9VZzJ4WmR5TDAKcGFiaEREZTZ6MVJKaXJvZnBYY2NRbjA1OUZFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /inject-sidecar
  failurePolicy: Ignore
  name: kuma-injector.kuma.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-validating-webhook-configuration
  namespace: kuma-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtUdFpZZHNBZkdoY3hLL3ZxeUtWZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE1TWpReU1EVXdNVGxhRncwek1UQTVNakl5TURVdwpNVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDYlFQZEZqMFlhTy9JbWptYW9yVG91bTVVbHhoMHBpV2czc2RoOG9tVzNtTnRuRzhZeWlDRVgKUkswcks3T25VUHAwODhlREk3UDFrV2paRThjY0tYUVFYYmlyYmkwdThCNjB2RVZRT09VbjRxTFpicWwvN3cxSQpkSUx5YW1wY1Rlalh0NmxhUXBuMThaajFLTEhSeUVqZlRLR2x6TW4yVHZtVnhHS2pBK1FjeDUyUm5udGtGY1puCkNndkc2RWhvZVVaT3U4VTlhYURQWXY0RjBRWUdoRFVHYnJ1MUplQU5kSlpVc3F6YzZCclhBZ25lMFJDcHZlRmwKM1FNYllpMExhclJzdkZ6cG1lcllIaWRQMUZuQjgrRjgyS3hLcFhKd0NRKzRlTGlkakYzakNWa1ZudHFxbjdBcwptd3dyWmZvQU1veXhmRXp5WGFtT1NaV2tQcnU5ODVyL0FnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUJlQjZNTnlLWVRiRXh6SlFydXRWR2k2RGdIVXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF6Uk5NelIyT1RaWWR3SHY4d1V4aHJzQ2hpRjBLcWdMNElKT2JXQlBxUFhabDh6N2NDRFBBcGFFU2hzClFGNkhoKzdDUG1GMnFaZ2dHUUNoZjRTd2RNSzQ2RzZDQURqRkh1Tk5ucnZWNDNEalV6ZkUrTFp4MjRqaHJkSzAKSUxjeVExTTRtVHU1d2tkVjBKZ2pOeWZheE9SaklYZHMyZ3R6VTBJOXZzc3R5TWEvS3NjMzhIL25DRVNSVG1qMwphaWRLOC8zL1VXSmxTcm9odnc1dUd5bDNYeDFDNTgwL0NwMXQ0T2MxSW9SWmdDTmxWcnF2MHdEMFZYMnlvWVd1ClB6Q0ZKTGNPc0daRmNkUVFYdGY3M2x3eUo5UEFyb1h0VGVQc09mc1hza1MvM3hSRkdadmdGMG9VZzJ4WmR5TDAKcGFiaEREZTZ6MVJKaXJvZnBYY2NRbjA1OUZFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-kuma-io-v1alpha1
  failurePolicy: Fail
  name: validator.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - circuitbreakers
    - dataplanes
    - externalservices
    - faultinjections
    - healthchecks
    - retries
    - meshes
    - proxytemplates
    - ratelimits
    - trafficlogs
    - trafficpermissions
    - trafficroutes
    - traffictraces
    - virtualoutbounds
    - zones
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtUdFpZZHNBZkdoY3hLL3ZxeUtWZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE1TWpReU1EVXdNVGxhRncwek1UQTVNakl5TURVdwpNVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDYlFQZEZqMFlhTy9JbWptYW9yVG91bTVVbHhoMHBpV2czc2RoOG9tVzNtTnRuRzhZeWlDRVgKUkswcks3T25VUHAwODhlREk3UDFrV2paRThjY0tYUVFYYmlyYmkwdThCNjB2RVZRT09VbjRxTFpicWwvN3cxSQpkSUx5YW1wY1Rlalh0NmxhUXBuMThaajFLTEhSeUVqZlRLR2x6TW4yVHZtVnhHS2pBK1FjeDUyUm5udGtGY1puCkNndkc2RWhvZVVaT3U4VTlhYURQWXY0RjBRWUdoRFVHYnJ1MUplQU5kSlpVc3F6YzZCclhBZ25lMFJDcHZlRmwKM1FNYllpMExhclJzdkZ6cG1lcllIaWRQMUZuQjgrRjgyS3hLcFhKd0NRKzRlTGlkakYzakNWa1ZudHFxbjdBcwptd3dyWmZvQU1veXhmRXp5WGFtT1NaV2tQcnU5ODVyL0FnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUJlQjZNTnlLWVRiRXh6SlFydXRWR2k2RGdIVXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF6Uk5NelIyT1RaWWR3SHY4d1V4aHJzQ2hpRjBLcWdMNElKT2JXQlBxUFhabDh6N2NDRFBBcGFFU2hzClFGNkhoKzdDUG1GMnFaZ2dHUUNoZjRTd2RNSzQ2RzZDQURqRkh1Tk5ucnZWNDNEalV6ZkUrTFp4MjRqaHJkSzAKSUxjeVExTTRtVHU1d2tkVjBKZ2pOeWZheE9SaklYZHMyZ3R6VTBJOXZzc3R5TWEvS3NjMzhIL25DRVNSVG1qMwphaWRLOC8zL1VXSmxTcm9odnc1dUd5bDNYeDFDNTgwL0NwMXQ0T2MxSW9SWmdDTmxWcnF2MHdEMFZYMnlvWVd1ClB6Q0ZKTGNPc0daRmNkUVFYdGY3M2x3eUo5UEFyb1h0VGVQc09mc1hza1MvM3hSRkdadmdGMG9VZzJ4WmR5TDAKcGFiaEREZTZ6MVJKaXJvZnBYY2NRbjA1OUZFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-v1-service
  failurePolicy: Ignore
  name: service.validator.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtUdFpZZHNBZkdoY3hLL3ZxeUtWZWt3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE1TWpReU1EVXdNVGxhRncwek1UQTVNakl5TURVdwpNVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFDYlFQZEZqMFlhTy9JbWptYW9yVG91bTVVbHhoMHBpV2czc2RoOG9tVzNtTnRuRzhZeWlDRVgKUkswcks3T25VUHAwODhlREk3UDFrV2paRThjY0tYUVFYYmlyYmkwdThCNjB2RVZRT09VbjRxTFpicWwvN3cxSQpkSUx5YW1wY1Rlalh0NmxhUXBuMThaajFLTEhSeUVqZlRLR2x6TW4yVHZtVnhHS2pBK1FjeDUyUm5udGtGY1puCkNndkc2RWhvZVVaT3U4VTlhYURQWXY0RjBRWUdoRFVHYnJ1MUplQU5kSlpVc3F6YzZCclhBZ25lMFJDcHZlRmwKM1FNYllpMExhclJzdkZ6cG1lcllIaWRQMUZuQjgrRjgyS3hLcFhKd0NRKzRlTGlkakYzakNWa1ZudHFxbjdBcwptd3dyWmZvQU1veXhmRXp5WGFtT1NaV2tQcnU5ODVyL0FnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVUJlQjZNTnlLWVRiRXh6SlFydXRWR2k2RGdIVXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUF6Uk5NelIyT1RaWWR3SHY4d1V4aHJzQ2hpRjBLcWdMNElKT2JXQlBxUFhabDh6N2NDRFBBcGFFU2hzClFGNkhoKzdDUG1GMnFaZ2dHUUNoZjRTd2RNSzQ2RzZDQURqRkh1Tk5ucnZWNDNEalV6ZkUrTFp4MjRqaHJkSzAKSUxjeVExTTRtVHU1d2tkVjBKZ2pOeWZheE9SaklYZHMyZ3R6VTBJOXZzc3R5TWEvS3NjMzhIL25DRVNSVG1qMwphaWRLOC8zL1VXSmxTcm9odnc1dUd5bDNYeDFDNTgwL0NwMXQ0T2MxSW9SWmdDTmxWcnF2MHdEMFZYMnlvWVd1ClB6Q0ZKTGNPc0daRmNkUVFYdGY3M2x3eUo5UEFyb1h0VGVQc09mc1hza1MvM3hSRkdadmdGMG9VZzJ4WmR5TDAKcGFiaEREZTZ6MVJKaXJvZnBYY2NRbjA1OUZFPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-v1-secret
  failurePolicy: Ignore
  name: secret.validator.kuma-admission.kuma.io
  namespaceSelector:
    matchLabels:
      kuma.io/system-namespace: "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - secrets
  sideEffects: None
