apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-ingress
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-patch-ns-job
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-pre-delete-job
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-install-missing-crds
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
  namespace: kuma-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-patch-ns-job
  namespace: kuma-system
rules:
- apiGroups:
  - ""
  resourceNames:
  - kuma-system
  resources:
  - namespaces
  verbs:
  - get
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - configmaps
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - kuma.io
  resources:
  - dataplanes
  - dataplaneinsights
  - meshes
  - zones
  - zoneinsights
  - zoneingresses
  - zoneingressinsights
  - meshinsights
  - serviceinsights
  - proxytemplates
  - ratelimits
  - trafficpermissions
  - trafficroutes
  - timeouts
  - retries
  - circuitbreakers
  - virtualoutbounds
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - kuma.io
  resources:
  - externalservices
  - faultinjections
  - healthchecks
  - trafficlogs
  - traffictraces
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  verbs:
  - '*'
- apiGroups:
  - kuma.io
  resources:
  - meshes/finalizers
  verbs:
  - '*'
- apiGroups:
  - kuma.io
  resources:
  - dataplanes/finalizers
  verbs:
  - '*'
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-install-missing-crds
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - list
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-pre-delete-job
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - kuma-validating-webhook-configuration
  resources:
  - validatingwebhookconfigurations
  verbs:
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kuma-control-plane
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuma-control-plane
subjects:
- kind: ServiceAccount
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-patch-ns-job
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-patch-ns-job
subjects:
- kind: ServiceAccount
  name: kuma-patch-ns-job
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-control-plane
subjects:
- kind: ServiceAccount
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-install-missing-crds
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-install-missing-crds
subjects:
- kind: ServiceAccount
  name: kuma-install-missing-crds
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-pre-delete-job
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-pre-delete-job
subjects:
- kind: ServiceAccount
  name: kuma-pre-delete-job
  namespace: kuma-system
---
apiVersion: v1
data:
  config.yaml: |
    # use this file to override default configuration of `kuma-cp`
    #
    # see conf/kuma-cp.conf.yml for available settings
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane-config
  namespace: kuma-system
---
apiVersion: v1
data:
  install_missing_crds.sh: |
    #!/usr/bin/env sh

    if [ -s /kuma/missing/crds.yaml ]; then
      echo "/kuma/missing/crds.yaml found and is not empty, adding crds"
      kubectl create -f /kuma/missing/crds.yaml
    else
      echo "/kuma/missing/crds.yaml not found or empty, it looks like there is no missing crds"
    fi
  save_missing_crds.sh: |
    #!/usr/bin/env sh

    missing_crds="$(kumactl install crds --only-missing)"

    if [ -n "${missing_crds}" ]; then
      echo "found missing crds - saving to /kuma/missing/crds.yaml"
      echo "${missing_crds}" > /kuma/missing/crds.yaml
    fi
kind: ConfigMap
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-install-missing-crds-scripts
  namespace: kuma-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRQTQ3WU1DRnBqTDdxVW13SjViaEkrVEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEF3TnpBek1Ua3hNRm9YRFRNeE1UQXdOVEF6TVRreApNRm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU1kalNwdWI1VXpObk9lakdhbkZ4TDd2dEZWZWFCcGhMblk0T1hSR293dDhZeXhQZUhPa3ByL28KN0JlTXZJNmFxSnVJdmlaZFFQRjRRTUxoV1FpeE94cVhZUlNUQUJZaDY3d1FKQ1JFb0V6TFAzQ3Noc2RDc3FnMApNa25tc1V2VkEzdzNKcjRTMit2NVdHd2JLcjYzVFM3b2hDcXVJQTZySi8zRmd0U0QxQlJCb0NLYkVnMGE1OTZRClFJem1PSXd6azhLRkh0LytPSXd3UCtkV3o3NDJhSncwS2cyMWcrY1pJeEtSRzRMVGVXZmd4empqSFpyUFc1OWoKYnhubUM3Q2FsN1VVdk0zQ2IreEpGbVQwZUFLOVk3K3huZmREWWJxQ1hZTThSRk9VOEtmQzN0QlpsS1dwZkpEUgpRRGZONmk4dWhyeU94MnB1U1hFaWhVNy9EWWhIQU5FQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJReFhFa3ZiSzZxMFNvTDl4bnh5RUdHUkxEV2dqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBdjBLbzNpbnJEcnpLWUo2b2crVisvYm54S1g4bDJlR1I0SjJZR3pvZ29rV1AzTkhIaTl4MFM4TE0zT1Q4CmxkVWVmMlFsNXplZ0U5WnQzOVpRUU4yeVRlcDQ4RnkrSkVTMWUyK2xaTUxOT2xwWmlNTWErK2NKclFlUWJsenIKNU5JNmpnS0NnYkFna0RSOU1NVElTU08xYk53L0dwdms1UHNyMmp3dndHdEFDZ0dSZ2N1SEhjU1VOYWJKakdaNApJWDhBWlo2TjFweE9wbmc1eUVydHg4MDRBd1dWdlFoM1NtRDBFcm9pS2NlNVh3YnZaZjYyZ0Z6Vm1STXNrWVNmCldiZXJMVUg2b05xZWNYcVpsZlUyMTJHUGMxSDRYTG1uMFNiTjlkaWZBMEVxay93QW9GTndOZmpVcEVYc09iUVcKU2RwT1BxSlpGclB1TXprR2M4RFBGNnJjRWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhekNDQWxPZ0F3SUJBZ0lSQU5SUHNieHI2VXRJWFMzTittR21ydWt3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEV3TURjd016RTVNVEJhRncwek1URXdNRFV3TXpFNQpNVEJhTUIweEd6QVpCZ05WQkFNVEVtdDFiV0V0WTI5dWRISnZiQzF3YkdGdVpUQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMV054UGNlK09xSVFVQW8yUW5seE1QUGQ1YXI1cHJ4MlNjdWh1RHYKVzdBOTI2dVAyQWpHbGpsOVh4Y2RDdUp3YVFqK1hkRWpUUk9yTWsvb3NzUlgwQ0tBTE1LZksvU0ZJbVBPUnFLNwpYeEZ4YmRERU9ybVNIUlUwRVVGVkhzeXhkK3cvN3hDaTV6QWFvL3BCeTV2RXJLREFTM1prdWIya3MvUDRnQXNZCmMyRjBxK3dQY1o5Sk9YY1VlSTgvdFlPTUpPUjRwaVhTVjNoSm5IbkVXUGZOTjh2eWc1YVFwYWFWVDN0VmVUdjAKR3c4MTk4VFJDNm8zcnlBNHJpeVVRUmE0VlRNV2NuSTlwaTQza1pRWFlDVFhSTU1ESitkQ3dFeUFZN3U1L3BlVAo3TDBQMm1lWllOdE5KS1RhRGFpTy8zVjVLc2x2MGdVdkhyeDhEeTdLTjJWWWcra0NBd0VBQWFPQnNEQ0JyVEFPCkJnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0cKQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVNVnhKTDJ5dXF0RXFDL2NaOGNoQmhrU3cxb0l3VFFZRApWUjBSQkVZd1JJSWVhM1Z0WVMxamIyNTBjbTlzTFhCc1lXNWxMbXQxYldFdGMzbHpkR1Z0Z2lKcmRXMWhMV052CmJuUnliMnd0Y0d4aGJtVXVhM1Z0WVMxemVYTjBaVzB1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQksKcUxJSFBzZ1FEN1MyRHFTenJKWUhRemdoZmo0SC9CN25qNWVtaGU3dDlUZnptNXFzYlVjSlpESzNrc05aRGtwYQp6b09lTzlZd1ZGRldNM0pmT0xHaHllbUcxNnE4WWxibkMveEZYL3JyWm11MmUyNjd3ZVNDM1lWMU1XWWRLTmhJCjFtaEpYVjNIMW5LMzAvWm40Qnh2emJ3T1NVS3BBV3VxUmJPUitoN3JMdm1iUlRLZXhFZHNsN2l5OW5PTGZQcGkKZkxqa3pUSE9keDM5M2ZLY1EzOU5NRjREZWR3ZGIwTjM1b1dEMFZwT1RxUHFOelRxZlgyZzJmb1BnWnpsNG5zRQpQRXFwUUtGWFhHNmN1alNuOHZHa1hZNWREdUR1eUk3WWhhYjRNQ3FMRkd4MEtqQ2NyNjR2ZjNxUzhObHNCOUpuCnlWemJ0dE44ZEpZNmduNU9aZVlNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdFkzRTl4NzQ2b2hCUUNqWkNlWEV3ODkzbHF2bW12SFpKeTZHNE85YnNEM2JxNC9ZCkNNYVdPWDFmRngwSzRuQnBDUDVkMFNOTkU2c3lUK2l5eEZmUUlvQXN3cDhyOUlVaVk4NUdvcnRmRVhGdDBNUTYKdVpJZEZUUVJRVlVlekxGMzdEL3ZFS0xuTUJxaitrSExtOFNzb01CTGRtUzV2YVN6OC9pQUN4aHpZWFNyN0E5eApuMGs1ZHhSNGp6KzFnNHdrNUhpbUpkSlhlRW1jZWNSWTk4MDN5L0tEbHBDbHBwVlBlMVY1Ty9RYkR6WDN4TkVMCnFqZXZJRGl1TEpSQkZyaFZNeFp5Y2oybUxqZVJsQmRnSk5kRXd3TW41MExBVElCanU3bitsNVBzdlEvYVo1bGcKMjAwa3BOb05xSTcvZFhrcXlXL1NCUzhldkh3UExzbzNaVmlENlFJREFRQUJBb0lCQUJWeHltc2FHSEt6WjJtcApxWUUyeDVnTllHWEdwalYxRFo1SUs1eFVDWE4yeXdTbnQrL0piU01iUU9rZEFCVWhDL2NJL0pIZ1pwRkZMbXNyCjVEbTIyWm5Kby8vVkJ6OFpucWRGVFNpWmt6QWZRc1plOTBUR0VuTlh0QllRZE5QZXZuaUVVTHVaVWs5blJpa2cKTG1tV3dJRTRWWEdGa2o3cFBtdzUxUDM2aEY1bFUwbkU3L3c4YTNHN2k4aGVicm9wcXJReCtyRlROTGlJcTJvQwpVNndOUlpQUk9TcTE3T0RZN0duY0c1MFpTUXpjQUQxRlFnUEQ4Smt4NWdkU0kweU85QzkxSDIvenZuM3BaQUd2CmwvNC9CZTYvVldwTi9PMkxsS2hJdjVZUVZjVVhNMktqanpIckl3ZWwrWnlCSXhxT3h2TnVvWStOQk9vY1hydFAKUEx5MmhIVUNnWUVBd0VMdHJDdHdaZnhEaFM4Y2c0MTFJNUx0VXdySEFhRU9Tclo3b0k5dWtSWHRteGRzMTZtegpjY1RRbXBndHBkYXVwdjdHeVNNVWdHK2lYb3FjbzFxTktnVjc4RDFJUG5OamZQQitsMTdwWjh0T0RjOERXTE5ZCmJsUCtWMUcySVc4ZXhNT0I1S1FnbTAxMDFlQ0x2b1JrK216a2F5U2Mzd2N4WWlzbzU4TWM0R3NDZ1lFQThiNFgKWExaRnhYeGU4R2JvNitYZlNSWWdjYWNpaktXK3ZuR1ROTDJwSy9NajdkSzlUSmIvaFpZNWpWaGdvTjZLcHdOTgp0dStUZW5OQitUWTNyOFRDTmZxSVFkRFpCQkR5eGR5NUd0d2VlSnNSVktSSjRXRS85aEl5NlJiNWk4TDYweHV0ClZYbFdYMkcvRC9MSUNYNEhxOStlRGMvWjlyZUg5Z01BdCtnOE1mc0NnWUVBcWJVcVNGUmJ0Wm8wRzRiWFc0UHQKQjBhMU9CMEdSdmpjUGJUUWNZektJMFZBNUNxTVI5Mmk2T1M2NGdzOEYrdmxaTUQxeFN1eStDQVNLZk9laWs3dQoxazNhOWRlU1FwWG1GcTNPZ0YwbUdCbU1QNElneVJZZUU5ME9ZQk5mZWltMDlpaEJLd3A1UWJ6Z1NiNFlmRVl2ClFDSUlpazdhTGNBU3BqM0VzTGM0Y1JzQ2dZRUF3dzA4N21xSGkxdlpncUdXU0ZoMnZCTGxaSzZWZXVSMUxsYVgKanhPRS8xZzBZajBLemxSN29iN2Zld09YRzlYVURBUG5YYmFheVU5Y0tRZXRFTjV5VVhsdkhhTzBwc3BDQ0pJYQpyT2gwa1oyVTh6V0lBeGtqc1psbmlKa29DclB0REE4bDRYU0EwMzhiMlhOc0lmU1ZuZ0ZWRnhIaGJXY1NoZFpRCmF4TXdGcWNDZ1lBbmZ5QmlQRXBvSGxVU0tHWm9iM3NCUG1qR0VCK3ovVDI5Y3lyak1SSnRtbXIvQWhvNEVybzIKNUpJUTZGekdxSTJCaEdYbzFqOHgzWjZjR3pTVGx0aU94aHdxb1ErdnZSVnZibmFkMzNObWlIZDkrRXVsZ25iawpTZGNXOXJXTlpIYkpXeHBOZnVyb3dpTnpFMTByRitQS3l2U1lxUnpEbVB2MlpYQ1Y3R1loSUE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-tls-cert
  namespace: kuma-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "5680"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
  namespace: kuma-system
spec:
  ports:
  - name: http-api-server
    port: 5681
  - name: https-api-server
    port: 5682
  - name: https-admission-server
    port: 443
    targetPort: 5443
  - name: mads-server
    port: 5676
  - name: dp-server
    port: 5678
  - name: dns-server
    port: 5653
    protocol: UDP
  selector:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/name: kuma
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-ingress
  namespace: kuma-system
spec:
  ports:
  - port: 10001
    protocol: TCP
    targetPort: 10001
  selector:
    app: kuma-ingress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/name: kuma
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
  namespace: kuma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-control-plane
      app.kubernetes.io/instance: kuma
      app.kubernetes.io/name: kuma
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        checksum/config: 003c3e67518c0669b2aa9b652d392cb44ea07d671f5180cc1596fbeb44a7110d
        checksum/tls-secrets: ba85b10d89ee7106a7cb17298c1fb98d5282dfdb6d5f437e3950bc4a30175a4a
      labels:
        app: kuma-control-plane
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/name: kuma
    spec:
      containers:
      - args:
        - run
        - --log-level=info
        - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
        env:
        - name: KUMA_API_SERVER_READ_ONLY
          value: "true"
        - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
          value: "false"
        - name: KUMA_DP_SERVER_HDS_ENABLED
          value: "false"
        - name: KUMA_ENVIRONMENT
          value: kubernetes
        - name: KUMA_GENERAL_TLS_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/tls.crt
        - name: KUMA_GENERAL_TLS_KEY_FILE
          value: /var/run/secrets/kuma.io/tls-cert/tls.key
        - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
          value: docker.io/kumahq/kuma-init:1.3.1
        - name: KUMA_MODE
          value: zone
        - name: KUMA_MULTIZONE_ZONE_GLOBAL_ADDRESS
          value: grpcs://100.100.100.100:5685
        - name: KUMA_MULTIZONE_ZONE_NAME
          value: TODO
        - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
          value: /var/run/secrets/kuma.io/tls-cert
        - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
          value: "5443"
        - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
          value: kuma-control-plane
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/ca.crt
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
          value: "false"
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
          value: docker.io/kumahq/kuma-dp:1.3.1
        - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
          value: kuma-system
        - name: KUMA_STORE_TYPE
          value: kubernetes
        image: docker.io/kumahq/kuma-cp:1.3.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthy
            port: 5680
        name: control-plane
        ports:
        - containerPort: 5681
        - containerPort: 5682
        - containerPort: 5443
        - containerPort: 5678
        - containerPort: 5653
          protocol: UDP
        readinessProbe:
          httpGet:
            path: /ready
            port: 5680
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/run/secrets/kuma.io/tls-cert
          name: general-tls-cert
          readOnly: true
        - mountPath: /etc/kuma.io/kuma-control-plane
          name: kuma-control-plane-config
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      serviceAccountName: kuma-control-plane
      volumes:
      - name: general-tls-cert
        secret:
          secretName: kuma-tls-cert
      - configMap:
          name: kuma-control-plane-config
        name: kuma-control-plane-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kuma-ingress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-ingress
  namespace: kuma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-ingress
      app.kubernetes.io/instance: kuma
      app.kubernetes.io/name: kuma
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        kuma.io/ingress: enabled
      labels:
        app: kuma-ingress
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/name: kuma
    spec:
      containers:
      - args:
        - run
        - --log-level=info
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUMA_CONTROL_PLANE_URL
          value: https://kuma-control-plane.kuma-system:5678
        - name: KUMA_CONTROL_PLANE_CA_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/ca.crt
        - name: KUMA_DATAPLANE_NAME
          value: $(POD_NAME).$(POD_NAMESPACE)
        - name: KUMA_DATAPLANE_ADMIN_PORT
          value: "9901"
        - name: KUMA_DATAPLANE_DRAIN_TIME
          value: 30s
        - name: KUMA_DATAPLANE_RUNTIME_TOKEN_PATH
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: KUMA_DATAPLANE_PROXY_TYPE
          value: ingress
        image: docker.io/kumahq/kuma-dp:1.3.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - wget
            - -qO-
            - http://127.0.0.1:9901
          failureThreshold: 12
          initialDelaySeconds: 60
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: ingress
        ports:
        - containerPort: 10001
        readinessProbe:
          exec:
            command:
            - wget
            - -qO-
            - http://127.0.0.1:9901
          failureThreshold: 12
          initialDelaySeconds: 1
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - mountPath: /var/run/secrets/kuma.io/tls-cert
          name: kuma-tls-cert
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      serviceAccountName: kuma-ingress
      volumes:
      - name: kuma-tls-cert
        secret:
          secretName: kuma-tls-cert
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "5"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-delete-webhook
  namespace: kuma-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.3.1
        helm.sh/chart: kuma-0.7.1
      name: kuma-delete-webhook
    spec:
      containers:
      - command:
        - kubectl
        - delete
        - ValidatingWebhookConfiguration
        - kuma-validating-webhook-configuration
        image: bitnami/kubectl:1.20
        name: pre-delete-job
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-pre-delete-job
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-install-missing-crds
  namespace: kuma-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.3.1
        helm.sh/chart: kuma-0.7.1
      name: kuma-install-missing-crds-job
    spec:
      containers:
      - command:
        - /kuma/scripts/install_missing_crds.sh
        image: bitnami/kubectl:1.20
        name: pre-upgrade-job
        volumeMounts:
        - mountPath: /kuma/missing
          name: missing-crds
          readOnly: true
        - mountPath: /kuma/scripts
          name: scripts
          readOnly: true
      initContainers:
      - command:
        - /kuma/scripts/save_missing_crds.sh
        image: docker.io/kumahq/kumactl:1.3.1
        name: pre-upgrade-job-init
        volumeMounts:
        - mountPath: /kuma/missing
          name: missing-crds
        - mountPath: /kuma/scripts
          name: scripts
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-install-missing-crds
      volumes:
      - configMap:
          defaultMode: 493
          name: kuma-install-missing-crds-scripts
        name: scripts
      - emptyDir: {}
        name: missing-crds
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "5"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-patch-ns
  namespace: kuma-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.3.1
        helm.sh/chart: kuma-0.7.1
      name: kuma-patch-ns-script
    spec:
      containers:
      - command:
        - kubectl
        - patch
        - namespace
        - kuma-system
        - --type
        - merge
        - --patch
        - '{ "metadata": { "labels": { "kuma.io/system-namespace": "true" } } }'
        image: bitnami/kubectl:1.20
        name: pre-install-job
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-patch-ns-job
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-admission-mutating-webhook-configuration
  namespace: kuma-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRQTQ3WU1DRnBqTDdxVW13SjViaEkrVEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEF3TnpBek1Ua3hNRm9YRFRNeE1UQXdOVEF6TVRreApNRm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU1kalNwdWI1VXpObk9lakdhbkZ4TDd2dEZWZWFCcGhMblk0T1hSR293dDhZeXhQZUhPa3ByL28KN0JlTXZJNmFxSnVJdmlaZFFQRjRRTUxoV1FpeE94cVhZUlNUQUJZaDY3d1FKQ1JFb0V6TFAzQ3Noc2RDc3FnMApNa25tc1V2VkEzdzNKcjRTMit2NVdHd2JLcjYzVFM3b2hDcXVJQTZySi8zRmd0U0QxQlJCb0NLYkVnMGE1OTZRClFJem1PSXd6azhLRkh0LytPSXd3UCtkV3o3NDJhSncwS2cyMWcrY1pJeEtSRzRMVGVXZmd4empqSFpyUFc1OWoKYnhubUM3Q2FsN1VVdk0zQ2IreEpGbVQwZUFLOVk3K3huZmREWWJxQ1hZTThSRk9VOEtmQzN0QlpsS1dwZkpEUgpRRGZONmk4dWhyeU94MnB1U1hFaWhVNy9EWWhIQU5FQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJReFhFa3ZiSzZxMFNvTDl4bnh5RUdHUkxEV2dqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBdjBLbzNpbnJEcnpLWUo2b2crVisvYm54S1g4bDJlR1I0SjJZR3pvZ29rV1AzTkhIaTl4MFM4TE0zT1Q4CmxkVWVmMlFsNXplZ0U5WnQzOVpRUU4yeVRlcDQ4RnkrSkVTMWUyK2xaTUxOT2xwWmlNTWErK2NKclFlUWJsenIKNU5JNmpnS0NnYkFna0RSOU1NVElTU08xYk53L0dwdms1UHNyMmp3dndHdEFDZ0dSZ2N1SEhjU1VOYWJKakdaNApJWDhBWlo2TjFweE9wbmc1eUVydHg4MDRBd1dWdlFoM1NtRDBFcm9pS2NlNVh3YnZaZjYyZ0Z6Vm1STXNrWVNmCldiZXJMVUg2b05xZWNYcVpsZlUyMTJHUGMxSDRYTG1uMFNiTjlkaWZBMEVxay93QW9GTndOZmpVcEVYc09iUVcKU2RwT1BxSlpGclB1TXprR2M4RFBGNnJjRWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /default-kuma-io-v1alpha1-mesh
  failurePolicy: Fail
  name: mesh.defaulter.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - meshes
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRQTQ3WU1DRnBqTDdxVW13SjViaEkrVEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEF3TnpBek1Ua3hNRm9YRFRNeE1UQXdOVEF6TVRreApNRm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU1kalNwdWI1VXpObk9lakdhbkZ4TDd2dEZWZWFCcGhMblk0T1hSR293dDhZeXhQZUhPa3ByL28KN0JlTXZJNmFxSnVJdmlaZFFQRjRRTUxoV1FpeE94cVhZUlNUQUJZaDY3d1FKQ1JFb0V6TFAzQ3Noc2RDc3FnMApNa25tc1V2VkEzdzNKcjRTMit2NVdHd2JLcjYzVFM3b2hDcXVJQTZySi8zRmd0U0QxQlJCb0NLYkVnMGE1OTZRClFJem1PSXd6azhLRkh0LytPSXd3UCtkV3o3NDJhSncwS2cyMWcrY1pJeEtSRzRMVGVXZmd4empqSFpyUFc1OWoKYnhubUM3Q2FsN1VVdk0zQ2IreEpGbVQwZUFLOVk3K3huZmREWWJxQ1hZTThSRk9VOEtmQzN0QlpsS1dwZkpEUgpRRGZONmk4dWhyeU94MnB1U1hFaWhVNy9EWWhIQU5FQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJReFhFa3ZiSzZxMFNvTDl4bnh5RUdHUkxEV2dqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBdjBLbzNpbnJEcnpLWUo2b2crVisvYm54S1g4bDJlR1I0SjJZR3pvZ29rV1AzTkhIaTl4MFM4TE0zT1Q4CmxkVWVmMlFsNXplZ0U5WnQzOVpRUU4yeVRlcDQ4RnkrSkVTMWUyK2xaTUxOT2xwWmlNTWErK2NKclFlUWJsenIKNU5JNmpnS0NnYkFna0RSOU1NVElTU08xYk53L0dwdms1UHNyMmp3dndHdEFDZ0dSZ2N1SEhjU1VOYWJKakdaNApJWDhBWlo2TjFweE9wbmc1eUVydHg4MDRBd1dWdlFoM1NtRDBFcm9pS2NlNVh3YnZaZjYyZ0Z6Vm1STXNrWVNmCldiZXJMVUg2b05xZWNYcVpsZlUyMTJHUGMxSDRYTG1uMFNiTjlkaWZBMEVxay93QW9GTndOZmpVcEVYc09iUVcKU2RwT1BxSlpGclB1TXprR2M4RFBGNnJjRWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /owner-reference-kuma-io-v1alpha1
  failurePolicy: Fail
  name: owner-reference.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - circuitbreakers
    - externalservices
    - faultinjections
    - healthchecks
    - retries
    - proxytemplates
    - ratelimits
    - trafficlogs
    - trafficpermissions
    - trafficroutes
    - traffictraces
    - virtualoutbounds
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRQTQ3WU1DRnBqTDdxVW13SjViaEkrVEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEF3TnpBek1Ua3hNRm9YRFRNeE1UQXdOVEF6TVRreApNRm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU1kalNwdWI1VXpObk9lakdhbkZ4TDd2dEZWZWFCcGhMblk0T1hSR293dDhZeXhQZUhPa3ByL28KN0JlTXZJNmFxSnVJdmlaZFFQRjRRTUxoV1FpeE94cVhZUlNUQUJZaDY3d1FKQ1JFb0V6TFAzQ3Noc2RDc3FnMApNa25tc1V2VkEzdzNKcjRTMit2NVdHd2JLcjYzVFM3b2hDcXVJQTZySi8zRmd0U0QxQlJCb0NLYkVnMGE1OTZRClFJem1PSXd6azhLRkh0LytPSXd3UCtkV3o3NDJhSncwS2cyMWcrY1pJeEtSRzRMVGVXZmd4empqSFpyUFc1OWoKYnhubUM3Q2FsN1VVdk0zQ2IreEpGbVQwZUFLOVk3K3huZmREWWJxQ1hZTThSRk9VOEtmQzN0QlpsS1dwZkpEUgpRRGZONmk4dWhyeU94MnB1U1hFaWhVNy9EWWhIQU5FQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJReFhFa3ZiSzZxMFNvTDl4bnh5RUdHUkxEV2dqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBdjBLbzNpbnJEcnpLWUo2b2crVisvYm54S1g4bDJlR1I0SjJZR3pvZ29rV1AzTkhIaTl4MFM4TE0zT1Q4CmxkVWVmMlFsNXplZ0U5WnQzOVpRUU4yeVRlcDQ4RnkrSkVTMWUyK2xaTUxOT2xwWmlNTWErK2NKclFlUWJsenIKNU5JNmpnS0NnYkFna0RSOU1NVElTU08xYk53L0dwdms1UHNyMmp3dndHdEFDZ0dSZ2N1SEhjU1VOYWJKakdaNApJWDhBWlo2TjFweE9wbmc1eUVydHg4MDRBd1dWdlFoM1NtRDBFcm9pS2NlNVh3YnZaZjYyZ0Z6Vm1STXNrWVNmCldiZXJMVUg2b05xZWNYcVpsZlUyMTJHUGMxSDRYTG1uMFNiTjlkaWZBMEVxay93QW9GTndOZmpVcEVYc09iUVcKU2RwT1BxSlpGclB1TXprR2M4RFBGNnJjRWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /inject-sidecar
  failurePolicy: Ignore
  name: kuma-injector.kuma.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-validating-webhook-configuration
  namespace: kuma-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRQTQ3WU1DRnBqTDdxVW13SjViaEkrVEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEF3TnpBek1Ua3hNRm9YRFRNeE1UQXdOVEF6TVRreApNRm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU1kalNwdWI1VXpObk9lakdhbkZ4TDd2dEZWZWFCcGhMblk0T1hSR293dDhZeXhQZUhPa3ByL28KN0JlTXZJNmFxSnVJdmlaZFFQRjRRTUxoV1FpeE94cVhZUlNUQUJZaDY3d1FKQ1JFb0V6TFAzQ3Noc2RDc3FnMApNa25tc1V2VkEzdzNKcjRTMit2NVdHd2JLcjYzVFM3b2hDcXVJQTZySi8zRmd0U0QxQlJCb0NLYkVnMGE1OTZRClFJem1PSXd6azhLRkh0LytPSXd3UCtkV3o3NDJhSncwS2cyMWcrY1pJeEtSRzRMVGVXZmd4empqSFpyUFc1OWoKYnhubUM3Q2FsN1VVdk0zQ2IreEpGbVQwZUFLOVk3K3huZmREWWJxQ1hZTThSRk9VOEtmQzN0QlpsS1dwZkpEUgpRRGZONmk4dWhyeU94MnB1U1hFaWhVNy9EWWhIQU5FQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJReFhFa3ZiSzZxMFNvTDl4bnh5RUdHUkxEV2dqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBdjBLbzNpbnJEcnpLWUo2b2crVisvYm54S1g4bDJlR1I0SjJZR3pvZ29rV1AzTkhIaTl4MFM4TE0zT1Q4CmxkVWVmMlFsNXplZ0U5WnQzOVpRUU4yeVRlcDQ4RnkrSkVTMWUyK2xaTUxOT2xwWmlNTWErK2NKclFlUWJsenIKNU5JNmpnS0NnYkFna0RSOU1NVElTU08xYk53L0dwdms1UHNyMmp3dndHdEFDZ0dSZ2N1SEhjU1VOYWJKakdaNApJWDhBWlo2TjFweE9wbmc1eUVydHg4MDRBd1dWdlFoM1NtRDBFcm9pS2NlNVh3YnZaZjYyZ0Z6Vm1STXNrWVNmCldiZXJMVUg2b05xZWNYcVpsZlUyMTJHUGMxSDRYTG1uMFNiTjlkaWZBMEVxay93QW9GTndOZmpVcEVYc09iUVcKU2RwT1BxSlpGclB1TXprR2M4RFBGNnJjRWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-kuma-io-v1alpha1
  failurePolicy: Fail
  name: validator.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - circuitbreakers
    - dataplanes
    - externalservices
    - faultinjections
    - healthchecks
    - retries
    - meshes
    - proxytemplates
    - ratelimits
    - trafficlogs
    - trafficpermissions
    - trafficroutes
    - traffictraces
    - virtualoutbounds
    - zones
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRQTQ3WU1DRnBqTDdxVW13SjViaEkrVEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEF3TnpBek1Ua3hNRm9YRFRNeE1UQXdOVEF6TVRreApNRm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU1kalNwdWI1VXpObk9lakdhbkZ4TDd2dEZWZWFCcGhMblk0T1hSR293dDhZeXhQZUhPa3ByL28KN0JlTXZJNmFxSnVJdmlaZFFQRjRRTUxoV1FpeE94cVhZUlNUQUJZaDY3d1FKQ1JFb0V6TFAzQ3Noc2RDc3FnMApNa25tc1V2VkEzdzNKcjRTMit2NVdHd2JLcjYzVFM3b2hDcXVJQTZySi8zRmd0U0QxQlJCb0NLYkVnMGE1OTZRClFJem1PSXd6azhLRkh0LytPSXd3UCtkV3o3NDJhSncwS2cyMWcrY1pJeEtSRzRMVGVXZmd4empqSFpyUFc1OWoKYnhubUM3Q2FsN1VVdk0zQ2IreEpGbVQwZUFLOVk3K3huZmREWWJxQ1hZTThSRk9VOEtmQzN0QlpsS1dwZkpEUgpRRGZONmk4dWhyeU94MnB1U1hFaWhVNy9EWWhIQU5FQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJReFhFa3ZiSzZxMFNvTDl4bnh5RUdHUkxEV2dqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBdjBLbzNpbnJEcnpLWUo2b2crVisvYm54S1g4bDJlR1I0SjJZR3pvZ29rV1AzTkhIaTl4MFM4TE0zT1Q4CmxkVWVmMlFsNXplZ0U5WnQzOVpRUU4yeVRlcDQ4RnkrSkVTMWUyK2xaTUxOT2xwWmlNTWErK2NKclFlUWJsenIKNU5JNmpnS0NnYkFna0RSOU1NVElTU08xYk53L0dwdms1UHNyMmp3dndHdEFDZ0dSZ2N1SEhjU1VOYWJKakdaNApJWDhBWlo2TjFweE9wbmc1eUVydHg4MDRBd1dWdlFoM1NtRDBFcm9pS2NlNVh3YnZaZjYyZ0Z6Vm1STXNrWVNmCldiZXJMVUg2b05xZWNYcVpsZlUyMTJHUGMxSDRYTG1uMFNiTjlkaWZBMEVxay93QW9GTndOZmpVcEVYc09iUVcKU2RwT1BxSlpGclB1TXprR2M4RFBGNnJjRWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-v1-service
  failurePolicy: Ignore
  name: service.validator.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUREekNDQWZlZ0F3SUJBZ0lRQTQ3WU1DRnBqTDdxVW13SjViaEkrVEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEF3TnpBek1Ua3hNRm9YRFRNeE1UQXdOVEF6TVRreApNRm93RWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQU1kalNwdWI1VXpObk9lakdhbkZ4TDd2dEZWZWFCcGhMblk0T1hSR293dDhZeXhQZUhPa3ByL28KN0JlTXZJNmFxSnVJdmlaZFFQRjRRTUxoV1FpeE94cVhZUlNUQUJZaDY3d1FKQ1JFb0V6TFAzQ3Noc2RDc3FnMApNa25tc1V2VkEzdzNKcjRTMit2NVdHd2JLcjYzVFM3b2hDcXVJQTZySi8zRmd0U0QxQlJCb0NLYkVnMGE1OTZRClFJem1PSXd6azhLRkh0LytPSXd3UCtkV3o3NDJhSncwS2cyMWcrY1pJeEtSRzRMVGVXZmd4empqSFpyUFc1OWoKYnhubUM3Q2FsN1VVdk0zQ2IreEpGbVQwZUFLOVk3K3huZmREWWJxQ1hZTThSRk9VOEtmQzN0QlpsS1dwZkpEUgpRRGZONmk4dWhyeU94MnB1U1hFaWhVNy9EWWhIQU5FQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trCk1CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC8KTUIwR0ExVWREZ1FXQkJReFhFa3ZiSzZxMFNvTDl4bnh5RUdHUkxEV2dqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBdjBLbzNpbnJEcnpLWUo2b2crVisvYm54S1g4bDJlR1I0SjJZR3pvZ29rV1AzTkhIaTl4MFM4TE0zT1Q4CmxkVWVmMlFsNXplZ0U5WnQzOVpRUU4yeVRlcDQ4RnkrSkVTMWUyK2xaTUxOT2xwWmlNTWErK2NKclFlUWJsenIKNU5JNmpnS0NnYkFna0RSOU1NVElTU08xYk53L0dwdms1UHNyMmp3dndHdEFDZ0dSZ2N1SEhjU1VOYWJKakdaNApJWDhBWlo2TjFweE9wbmc1eUVydHg4MDRBd1dWdlFoM1NtRDBFcm9pS2NlNVh3YnZaZjYyZ0Z6Vm1STXNrWVNmCldiZXJMVUg2b05xZWNYcVpsZlUyMTJHUGMxSDRYTG1uMFNiTjlkaWZBMEVxay93QW9GTndOZmpVcEVYc09iUVcKU2RwT1BxSlpGclB1TXprR2M4RFBGNnJjRWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-v1-secret
  failurePolicy: Ignore
  name: secret.validator.kuma-admission.kuma.io
  namespaceSelector:
    matchLabels:
      kuma.io/system-namespace: "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - secrets
  sideEffects: None
