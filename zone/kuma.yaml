apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-ingress
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-patch-ns-job
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-pre-delete-job
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-install-missing-crds
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-control-plane
  namespace: kuma-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-patch-ns-job
  namespace: kuma-system
rules:
- apiGroups:
  - ""
  resourceNames:
  - kuma-system
  resources:
  - namespaces
  verbs:
  - get
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-control-plane
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - configmaps
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - kuma.io
  resources:
  - dataplanes
  - dataplaneinsights
  - meshes
  - zones
  - zoneinsights
  - zoneingresses
  - zoneingressinsights
  - meshinsights
  - serviceinsights
  - proxytemplates
  - ratelimits
  - trafficpermissions
  - trafficroutes
  - timeouts
  - retries
  - circuitbreakers
  - virtualoutbounds
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - kuma.io
  resources:
  - externalservices
  - faultinjections
  - healthchecks
  - trafficlogs
  - traffictraces
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  verbs:
  - '*'
- apiGroups:
  - kuma.io
  resources:
  - meshes/finalizers
  verbs:
  - '*'
- apiGroups:
  - kuma.io
  resources:
  - dataplanes/finalizers
  verbs:
  - '*'
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-install-missing-crds
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - list
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-pre-delete-job
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - kuma-validating-webhook-configuration
  resources:
  - validatingwebhookconfigurations
  verbs:
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kuma-control-plane
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuma-control-plane
subjects:
- kind: ServiceAccount
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-patch-ns-job
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-patch-ns-job
subjects:
- kind: ServiceAccount
  name: kuma-patch-ns-job
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-control-plane
subjects:
- kind: ServiceAccount
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-install-missing-crds
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-install-missing-crds
subjects:
- kind: ServiceAccount
  name: kuma-install-missing-crds
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-pre-delete-job
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-pre-delete-job
subjects:
- kind: ServiceAccount
  name: kuma-pre-delete-job
  namespace: kuma-system
---
apiVersion: v1
data:
  config.yaml: |
    # use this file to override default configuration of `kuma-cp`
    #
    # see conf/kuma-cp.conf.yml for available settings
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-control-plane-config
  namespace: kuma-system
---
apiVersion: v1
data:
  install_missing_crds.sh: |
    #!/usr/bin/env sh

    if [ -s /kuma/missing/crds.yaml ]; then
      echo "/kuma/missing/crds.yaml found and is not empty, adding crds"
      kubectl create -f /kuma/missing/crds.yaml
    else
      echo "/kuma/missing/crds.yaml not found or empty, it looks like there is no missing crds"
    fi
  save_missing_crds.sh: |
    #!/usr/bin/env sh

    missing_crds="$(kumactl install crds --only-missing)"

    if [ -n "${missing_crds}" ]; then
      echo "found missing crds - saving to /kuma/missing/crds.yaml"
      echo "${missing_crds}" > /kuma/missing/crds.yaml
    fi
kind: ConfigMap
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-install-missing-crds-scripts
  namespace: kuma-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU5GUzRibllaZFFGaXVqRHBDM1NtT2N3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTNNek5hRncwek1UQTRNall4TmpBMwpNek5hTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEQVZSTmFTc0ZIcUQxSis5blIwVDU2eEJuOUJIT25jUVppaXZ2bmhDZlMweGZXQ0xnaFM3MlkKMFdjSkw0SE9UTGtQNFVxbW1XQnpoRGNKdWlCVUNNNXZDUjNBUVBSK0FrVUJ2REJVM254M21jc3F4a29tVWVTWQpTbWpHMU5NR016UUlDYnBFc0lKZktaMVVROE9tZjNyS3NhZ2RWaWMzZVB3U2tMaU1Dcm9EeHNNZVZDQjBNUHhXCnFjRXJHcUJ6MlNHczljK2toM05Gek5sd1FRMHZwVUlPVlFxVTRvL1RJVEdlNXRJSnpFNURTeXA4RGR6bmhsaU4KY1JleWVGZWo4d2g0Q2V0T3dCM3hqVDdTdGIzK3hUV0pIUkpUM2haYW1kLy9JNHZFcThhMmMrUHV1RGZJRUdlTgo0K3BlTDUyb2Y0MzBKTXdIVWxsZTl0RlJiS0NkaWt6dEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVW9lcHIvakhWZ3Y1N3BDUC91TXpMY3ovaTE1RXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUlOSHNjN1dja3QrWkVvcjNMaUMxc1dZS09SdGp6eFJad04vUEhGU1Q3eVU2dTF6TWhOSjFvU2hQUTNnCk00NStPWHZsWll0cGhrM2RmMHEzdVhDanJMVkgyampFUFVXNW16OVNZSjZESkxDWW9vR2xKVExNcmhMNkVIVjIKQ0ZXUWpvbU5jalllWkxTOGc1U0RNS3oxR1ozb044MW11MVNXZ0k4TGdDak94MUFxSllDd1p5Y3NhWDhBQ2IwRApGUnBUVWI0M0pGM2gzUFVkdnIvd3VXZ3Q2aVlaam5Nemx4bFdyZzNsYllTaENocmIrWmgxbVdBR0VHNks0QW53CjVPVUhmQjlTZ1d2SnBMTDRsWER0dnFHVlRWVXpSNklhQU84WDBaNDM5WkNvZFBjUGdoaXl5NDZDdzdJbFo2b00KcklEOTVtZkxiRGhCeDdmMFRkUnpJeEtETDZ3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhekNDQWxPZ0F3SUJBZ0lSQUloL3FhZjZ1K3k1SWJ3YjRPbXUzejB3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTNNek5hRncwek1UQTRNall4TmpBMwpNek5hTUIweEd6QVpCZ05WQkFNVEVtdDFiV0V0WTI5dWRISnZiQzF3YkdGdVpUQ0NBU0l3RFFZSktvWklodmNOCkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFPRTIwWHVtU3JDb1pmMGREcm9CMkVVeGhpZ3FZd3lyK1JHa2srR2EKMlVNSlVoKzlTVUcxaGtYam9IK2YrNVZSVXBVUGNocEVoVHpHckJIUTVXcFUyamV0NDdYYUNIUzNQNTRlUlU5SgpoZ0p0OFMrZEhBTlJ6WDB6RkxxUjVsQk9GYzZqUXlqcVYzWmRyMU81eERSb2N4MnUyMGlxNERtNVYxcjJBQnYzCm9Dakp1OGlkK0pVUDdaWDVkMmdzUkxTYk9nR3J1MWFuZXhJMk40NHM5MzlSY05CSjdvY3ZsZC94TkZ5MmtHODYKWHMxYUs4Mk41SENUODI4Q0F1aUQxWUdGcmZyMVdiZkV6NXFXclZkR3lteVN4WTBCaklhVlVwcDN3bW1BLzdNbgpxTEZDSzl1ZVpoaCtSU1ZyS29oUTBsMjBMbStNbU9RalBZbGNoaEplN1RST2xzVUNBd0VBQWFPQnNEQ0JyVEFPCkJnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01Bd0cKQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVvZXByL2pIVmd2NTdwQ1AvdU16TGN6L2kxNUV3VFFZRApWUjBSQkVZd1JJSWVhM1Z0WVMxamIyNTBjbTlzTFhCc1lXNWxMbXQxYldFdGMzbHpkR1Z0Z2lKcmRXMWhMV052CmJuUnliMnd0Y0d4aGJtVXVhM1Z0WVMxemVYTjBaVzB1YzNaak1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQzcKMW1Zd3QrcmFPeisyRTZxQ2FmeEQ3QUxuUGltai9tWm1ZcFRhSGhwWGJSUGNFQXNsb0ZlazZjVER1anRxbG41TgpYWEdQYXU5OTFxN203ZzVjNE9EOWh5K3pDclcyUUhaNmpXbmVwR1NEU1lidVRXc0pYdmZlRHF0a1RHSmNnOCt0CmdvWWlTRmpGUzRVNFBUbHh2VnVJVnBhTE9ZWEV5ZzRwVDF0Y0hyZ0dONkEzQzVFcVhmcXkySUNDVS9VV0dlVVQKMnR4Z3RMT1djZUpRRTdMTXExcC9WUG5DWDQwVzZkWGJoZi94QkRGOXJZTXl4OWVIaUtYSlk2ZmxmWnZrYWVuVApZd0VMMFR3eUwvTjB4RThscFhXcWdGRDZ4K3duMFhVbHRWYmhSbllQTVZNQi9CMGdlMGZ4TTJTYlZtRS9hY2huCldTZC9vNDNJcldzRmpiTEJndDNKCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNFRiUmU2WktzS2hsL1IwT3VnSFlSVEdHS0NwakRLdjVFYVNUNFpyWlF3bFNINzFKClFiV0dSZU9nZjUvN2xWRlNsUTl5R2tTRlBNYXNFZERsYWxUYU42M2p0ZG9JZExjL25oNUZUMG1HQW0zeEw1MGMKQTFITmZUTVV1cEhtVUU0VnpxTkRLT3BYZGwydlU3bkVOR2h6SGE3YlNLcmdPYmxYV3ZZQUcvZWdLTW03eUozNApsUS90bGZsM2FDeEV0SnM2QWF1N1ZxZDdFalkzaml6M2YxRncwRW51aHkrVjMvRTBYTGFRYnpwZXpWb3J6WTNrCmNKUHpid0lDNklQVmdZV3QrdlZadDhUUG1wYXRWMGJLYkpMRmpRR01ocFZTbW5mQ2FZRC9zeWVvc1VJcjI1NW0KR0g1RkpXc3FpRkRTWGJRdWI0eVk1Q005aVZ5R0VsN3RORTZXeFFJREFRQUJBb0lCQVFDVno4eGJyMHVoNWZNcQpBMGxIakhDYjNveTZiUy9FUHlXSWllemhOd3R0SDJja3U5cGVQbTBhVW9meVBhNnlMZzE4SUhFcmJnY2ZYWjBhCm9OWHEvSlRJVXdEVmVEc0Z3Tnd0eHo4ZHRlL1I3K1p2WU5oQWtRcmJUTDV1T1IxMnIrcXJzVWk4ajk0c1c3ZUUKUDE5MzZUOGlNSzJuMGhzajZ0bGtKWjMrL0tMcVhiOWE3S0tMZjlaTDVOSWlGVUVseE1zVXpBSkFnbU1HeWNQSAp4ZldJYlB0dkp1NFNrVTA5SVFheVZJUXNwMytTaXdTZTM1cm1haFM5T2lUNHdRSXNqQUZnRGpvcytZVDdMaGNPCng4Ri92N1k4cjhKellROGl0MklOTzcxaVNueFlqQzBZVW1MUU40VjFBYlg1Y2c4UU51dmQ4dll0TEZPWVBGbGMKS0x0SHI5WUZBb0dCQU9HQ29SSkpOS2ZqNTY4R0NocGRjUnc4S0xxaXNGWmRhUWZVUkQ4WUt3Tzg5ODBuZVRzbAp1S05PUUliVVNmVmcwODVHU2YxUlpacGtEMEswUENDbXFEaDFZcHg2dFpBS2d1ZTg2V0QvWG8wRFVyVDBqczlyCkZkbHhIZXlUanp6VHJwMkZmNTRzWDhreDA5ekVQazlrN1pCdUhBN1VLSkU4OE91Z25wTXZNTXE3QW9HQkFQK3AKOEhFYjkxcStSWEpOaG9oQlJlOFc5WVhTenZsaXdZSlQ1MjY0eFdmbXVCVXZvbGZNN3lpcmFiSnVVV1B4NUR6bgpJODU0VlZtczF5eHltNnlIM2FwQkNtdDZiUnE5WXhBeFh0Wk9lcTZPUFdiR2x6YUdQMUx1VzhRWndOZVJaaEpnClkxQ2kyV2s0ek5qT3h2WmNDOGtuMGsrdURRWnZHaURoV01UTVY4eC9Bb0dBWWNMYWh1M2JlT2tSR0V3YTl5RUoKRnY5eGZLOW9tSmc0SHgvRFVrTHM2dHJ4NWlzMW9CR1RRS0I4MHJhWE5WdjdsbEhjWTRmMDd3QnZxVEF2WE14Qwo0dTdvaUFPZVVFcHVRMzRmQW1EU29Ya09Vc291V3ZjR2F0Umg3NXhzblNiN2JPaGgwYlZVOVFpMzJ0M3NVVWprCndCY3I3TFhHdkdmWjNad3RBb3VUc0Y4Q2dZRUErZFhzZyt2TFZWNjRhSkYvMVNqTUdXOTdNSElvRmlZK2FZaHEKa1pWNE95ZUlYaE8xZGsxcXJIaU5pbk1wa0J4eWFGMkxiUm5FZGlSa0JTaGVIa1NMQmZRWEpaNTJmZm55azRGYgpadHM4SWRZWUJKWXVjSGJSN00zRzJTUTlnYXF4YjJYSHg2WE1CWG9mSEFNOUJNUkFOQ3Q0NXFwMFNnUktLVFZ0ClZLdEhaU3NDZ1lBOXVWb1ZBVVo0ZGU1ZndQb0VtdlMvbkFTQXNNZVBLTHBycTQ3MXJ3QTBmWEpRd3l2SXZUVlQKN1Y2NFlTYmFnODJmdnRsVnEwcndXcUdPUk1NTmY4T2cvTHBXYjZhRHJSMUhWaHRWcG44NmU3Sld5K0hxRlFBZApXL3pBSDY3SzhvLzdzUm1nZmtEWi9nb2tNMlltRU5PS1FwVU5XdEt1UXlmQVp6cERTQVlVSHc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-tls-cert
  namespace: kuma-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "5680"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-control-plane
  namespace: kuma-system
spec:
  ports:
  - name: http-api-server
    port: 5681
  - name: https-api-server
    port: 5682
  - name: https-admission-server
    port: 443
    targetPort: 5443
  - name: mads-server
    port: 5676
  - name: dp-server
    port: 5678
  - name: dns-server
    port: 5653
    protocol: UDP
  selector:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/name: kuma
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-ingress
  namespace: kuma-system
spec:
  ports:
  - port: 10001
    protocol: TCP
    targetPort: 10001
  selector:
    app: kuma-ingress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/name: kuma
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-control-plane
  namespace: kuma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-control-plane
      app.kubernetes.io/instance: kuma
      app.kubernetes.io/name: kuma
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        checksum/config: 6df33ec160599ac1a5e9fda109e2ba0d02c865f926ac14ecf92895e96b70a228
        checksum/tls-secrets: 89a892bb87b55f72071fec40753612cb78f54c821dc37a9d8af93f9ef0f1aeb1
      labels:
        app: kuma-control-plane
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/name: kuma
    spec:
      containers:
      - args:
        - run
        - --log-level=info
        - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
        env:
        - name: KUMA_API_SERVER_READ_ONLY
          value: "true"
        - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
          value: "false"
        - name: KUMA_DP_SERVER_HDS_ENABLED
          value: "false"
        - name: KUMA_ENVIRONMENT
          value: kubernetes
        - name: KUMA_GENERAL_TLS_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/tls.crt
        - name: KUMA_GENERAL_TLS_KEY_FILE
          value: /var/run/secrets/kuma.io/tls-cert/tls.key
        - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
          value: docker.io/kumahq/kuma-init:1.3.0
        - name: KUMA_MODE
          value: zone
        - name: KUMA_MULTIZONE_ZONE_GLOBAL_ADDRESS
          value: grpcs://100.111.69.60:5685
        - name: KUMA_MULTIZONE_ZONE_NAME
          value: kind
        - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
          value: /var/run/secrets/kuma.io/tls-cert
        - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
          value: "5443"
        - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
          value: kuma-control-plane
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/ca.crt
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
          value: "false"
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
          value: docker.io/kumahq/kuma-dp:1.3.0
        - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
          value: kuma-system
        - name: KUMA_STORE_TYPE
          value: kubernetes
        image: docker.io/kumahq/kuma-cp:1.3.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthy
            port: 5680
        name: control-plane
        ports:
        - containerPort: 5681
        - containerPort: 5682
        - containerPort: 5443
        - containerPort: 5678
        - containerPort: 5653
          protocol: UDP
        readinessProbe:
          httpGet:
            path: /ready
            port: 5680
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/run/secrets/kuma.io/tls-cert
          name: general-tls-cert
          readOnly: true
        - mountPath: /etc/kuma.io/kuma-control-plane
          name: kuma-control-plane-config
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      serviceAccountName: kuma-control-plane
      volumes:
      - name: general-tls-cert
        secret:
          secretName: kuma-tls-cert
      - configMap:
          name: kuma-control-plane-config
        name: kuma-control-plane-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kuma-ingress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-ingress
  namespace: kuma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-ingress
      app.kubernetes.io/instance: kuma
      app.kubernetes.io/name: kuma
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        kuma.io/ingress: enabled
      labels:
        app: kuma-ingress
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/name: kuma
    spec:
      containers:
      - args:
        - run
        - --log-level=info
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUMA_CONTROL_PLANE_URL
          value: https://kuma-control-plane.kuma-system:5678
        - name: KUMA_CONTROL_PLANE_CA_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/ca.crt
        - name: KUMA_DATAPLANE_NAME
          value: $(POD_NAME).$(POD_NAMESPACE)
        - name: KUMA_DATAPLANE_ADMIN_PORT
          value: "9901"
        - name: KUMA_DATAPLANE_DRAIN_TIME
          value: 30s
        - name: KUMA_DATAPLANE_RUNTIME_TOKEN_PATH
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: KUMA_DATAPLANE_PROXY_TYPE
          value: ingress
        image: docker.io/kumahq/kuma-dp:1.3.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - wget
            - -qO-
            - http://127.0.0.1:9901
          failureThreshold: 12
          initialDelaySeconds: 60
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: ingress
        ports:
        - containerPort: 10001
        readinessProbe:
          exec:
            command:
            - wget
            - -qO-
            - http://127.0.0.1:9901
          failureThreshold: 12
          initialDelaySeconds: 1
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - mountPath: /var/run/secrets/kuma.io/tls-cert
          name: kuma-tls-cert
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      serviceAccountName: kuma-ingress
      volumes:
      - name: kuma-tls-cert
        secret:
          secretName: kuma-tls-cert
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "5"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-delete-webhook
  namespace: kuma-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.3.0
        helm.sh/chart: kuma-0.7.0
      name: kuma-delete-webhook
    spec:
      containers:
      - command:
        - kubectl
        - delete
        - ValidatingWebhookConfiguration
        - kuma-validating-webhook-configuration
        image: bitnami/kubectl:1.20
        name: pre-delete-job
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-pre-delete-job
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-install-missing-crds
  namespace: kuma-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.3.0
        helm.sh/chart: kuma-0.7.0
      name: kuma-install-missing-crds-job
    spec:
      containers:
      - command:
        - /kuma/scripts/install_missing_crds.sh
        image: bitnami/kubectl:1.20
        name: pre-upgrade-job
        volumeMounts:
        - mountPath: /kuma/missing
          name: missing-crds
          readOnly: true
        - mountPath: /kuma/scripts
          name: scripts
          readOnly: true
      initContainers:
      - command:
        - /kuma/scripts/save_missing_crds.sh
        image: docker.io/kumahq/kumactl:1.3.0
        name: pre-upgrade-job-init
        volumeMounts:
        - mountPath: /kuma/missing
          name: missing-crds
        - mountPath: /kuma/scripts
          name: scripts
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-install-missing-crds
      volumes:
      - configMap:
          defaultMode: 493
          name: kuma-install-missing-crds-scripts
        name: scripts
      - emptyDir: {}
        name: missing-crds
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "5"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-patch-ns
  namespace: kuma-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.3.0
        helm.sh/chart: kuma-0.7.0
      name: kuma-patch-ns-script
    spec:
      containers:
      - command:
        - kubectl
        - patch
        - namespace
        - kuma-system
        - --type
        - merge
        - --patch
        - '{ "metadata": { "labels": { "kuma.io/system-namespace": "true" } } }'
        image: bitnami/kubectl:1.20
        name: pre-install-job
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-patch-ns-job
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-admission-mutating-webhook-configuration
  namespace: kuma-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU5GUzRibllaZFFGaXVqRHBDM1NtT2N3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTNNek5hRncwek1UQTRNall4TmpBMwpNek5hTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEQVZSTmFTc0ZIcUQxSis5blIwVDU2eEJuOUJIT25jUVppaXZ2bmhDZlMweGZXQ0xnaFM3MlkKMFdjSkw0SE9UTGtQNFVxbW1XQnpoRGNKdWlCVUNNNXZDUjNBUVBSK0FrVUJ2REJVM254M21jc3F4a29tVWVTWQpTbWpHMU5NR016UUlDYnBFc0lKZktaMVVROE9tZjNyS3NhZ2RWaWMzZVB3U2tMaU1Dcm9EeHNNZVZDQjBNUHhXCnFjRXJHcUJ6MlNHczljK2toM05Gek5sd1FRMHZwVUlPVlFxVTRvL1RJVEdlNXRJSnpFNURTeXA4RGR6bmhsaU4KY1JleWVGZWo4d2g0Q2V0T3dCM3hqVDdTdGIzK3hUV0pIUkpUM2haYW1kLy9JNHZFcThhMmMrUHV1RGZJRUdlTgo0K3BlTDUyb2Y0MzBKTXdIVWxsZTl0RlJiS0NkaWt6dEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVW9lcHIvakhWZ3Y1N3BDUC91TXpMY3ovaTE1RXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUlOSHNjN1dja3QrWkVvcjNMaUMxc1dZS09SdGp6eFJad04vUEhGU1Q3eVU2dTF6TWhOSjFvU2hQUTNnCk00NStPWHZsWll0cGhrM2RmMHEzdVhDanJMVkgyampFUFVXNW16OVNZSjZESkxDWW9vR2xKVExNcmhMNkVIVjIKQ0ZXUWpvbU5jalllWkxTOGc1U0RNS3oxR1ozb044MW11MVNXZ0k4TGdDak94MUFxSllDd1p5Y3NhWDhBQ2IwRApGUnBUVWI0M0pGM2gzUFVkdnIvd3VXZ3Q2aVlaam5Nemx4bFdyZzNsYllTaENocmIrWmgxbVdBR0VHNks0QW53CjVPVUhmQjlTZ1d2SnBMTDRsWER0dnFHVlRWVXpSNklhQU84WDBaNDM5WkNvZFBjUGdoaXl5NDZDdzdJbFo2b00KcklEOTVtZkxiRGhCeDdmMFRkUnpJeEtETDZ3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /default-kuma-io-v1alpha1-mesh
  failurePolicy: Fail
  name: mesh.defaulter.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - meshes
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU5GUzRibllaZFFGaXVqRHBDM1NtT2N3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTNNek5hRncwek1UQTRNall4TmpBMwpNek5hTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEQVZSTmFTc0ZIcUQxSis5blIwVDU2eEJuOUJIT25jUVppaXZ2bmhDZlMweGZXQ0xnaFM3MlkKMFdjSkw0SE9UTGtQNFVxbW1XQnpoRGNKdWlCVUNNNXZDUjNBUVBSK0FrVUJ2REJVM254M21jc3F4a29tVWVTWQpTbWpHMU5NR016UUlDYnBFc0lKZktaMVVROE9tZjNyS3NhZ2RWaWMzZVB3U2tMaU1Dcm9EeHNNZVZDQjBNUHhXCnFjRXJHcUJ6MlNHczljK2toM05Gek5sd1FRMHZwVUlPVlFxVTRvL1RJVEdlNXRJSnpFNURTeXA4RGR6bmhsaU4KY1JleWVGZWo4d2g0Q2V0T3dCM3hqVDdTdGIzK3hUV0pIUkpUM2haYW1kLy9JNHZFcThhMmMrUHV1RGZJRUdlTgo0K3BlTDUyb2Y0MzBKTXdIVWxsZTl0RlJiS0NkaWt6dEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVW9lcHIvakhWZ3Y1N3BDUC91TXpMY3ovaTE1RXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUlOSHNjN1dja3QrWkVvcjNMaUMxc1dZS09SdGp6eFJad04vUEhGU1Q3eVU2dTF6TWhOSjFvU2hQUTNnCk00NStPWHZsWll0cGhrM2RmMHEzdVhDanJMVkgyampFUFVXNW16OVNZSjZESkxDWW9vR2xKVExNcmhMNkVIVjIKQ0ZXUWpvbU5jalllWkxTOGc1U0RNS3oxR1ozb044MW11MVNXZ0k4TGdDak94MUFxSllDd1p5Y3NhWDhBQ2IwRApGUnBUVWI0M0pGM2gzUFVkdnIvd3VXZ3Q2aVlaam5Nemx4bFdyZzNsYllTaENocmIrWmgxbVdBR0VHNks0QW53CjVPVUhmQjlTZ1d2SnBMTDRsWER0dnFHVlRWVXpSNklhQU84WDBaNDM5WkNvZFBjUGdoaXl5NDZDdzdJbFo2b00KcklEOTVtZkxiRGhCeDdmMFRkUnpJeEtETDZ3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /owner-reference-kuma-io-v1alpha1
  failurePolicy: Fail
  name: owner-reference.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - circuitbreakers
    - externalservices
    - faultinjections
    - healthchecks
    - retries
    - proxytemplates
    - ratelimits
    - trafficlogs
    - trafficpermissions
    - trafficroutes
    - traffictraces
    - virtualoutbounds
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU5GUzRibllaZFFGaXVqRHBDM1NtT2N3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTNNek5hRncwek1UQTRNall4TmpBMwpNek5hTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEQVZSTmFTc0ZIcUQxSis5blIwVDU2eEJuOUJIT25jUVppaXZ2bmhDZlMweGZXQ0xnaFM3MlkKMFdjSkw0SE9UTGtQNFVxbW1XQnpoRGNKdWlCVUNNNXZDUjNBUVBSK0FrVUJ2REJVM254M21jc3F4a29tVWVTWQpTbWpHMU5NR016UUlDYnBFc0lKZktaMVVROE9tZjNyS3NhZ2RWaWMzZVB3U2tMaU1Dcm9EeHNNZVZDQjBNUHhXCnFjRXJHcUJ6MlNHczljK2toM05Gek5sd1FRMHZwVUlPVlFxVTRvL1RJVEdlNXRJSnpFNURTeXA4RGR6bmhsaU4KY1JleWVGZWo4d2g0Q2V0T3dCM3hqVDdTdGIzK3hUV0pIUkpUM2haYW1kLy9JNHZFcThhMmMrUHV1RGZJRUdlTgo0K3BlTDUyb2Y0MzBKTXdIVWxsZTl0RlJiS0NkaWt6dEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVW9lcHIvakhWZ3Y1N3BDUC91TXpMY3ovaTE1RXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUlOSHNjN1dja3QrWkVvcjNMaUMxc1dZS09SdGp6eFJad04vUEhGU1Q3eVU2dTF6TWhOSjFvU2hQUTNnCk00NStPWHZsWll0cGhrM2RmMHEzdVhDanJMVkgyampFUFVXNW16OVNZSjZESkxDWW9vR2xKVExNcmhMNkVIVjIKQ0ZXUWpvbU5jalllWkxTOGc1U0RNS3oxR1ozb044MW11MVNXZ0k4TGdDak94MUFxSllDd1p5Y3NhWDhBQ2IwRApGUnBUVWI0M0pGM2gzUFVkdnIvd3VXZ3Q2aVlaam5Nemx4bFdyZzNsYllTaENocmIrWmgxbVdBR0VHNks0QW53CjVPVUhmQjlTZ1d2SnBMTDRsWER0dnFHVlRWVXpSNklhQU84WDBaNDM5WkNvZFBjUGdoaXl5NDZDdzdJbFo2b00KcklEOTVtZkxiRGhCeDdmMFRkUnpJeEtETDZ3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /inject-sidecar
  failurePolicy: Ignore
  name: kuma-injector.kuma.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.0
    helm.sh/chart: kuma-0.7.0
  name: kuma-validating-webhook-configuration
  namespace: kuma-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU5GUzRibllaZFFGaXVqRHBDM1NtT2N3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTNNek5hRncwek1UQTRNall4TmpBMwpNek5hTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEQVZSTmFTc0ZIcUQxSis5blIwVDU2eEJuOUJIT25jUVppaXZ2bmhDZlMweGZXQ0xnaFM3MlkKMFdjSkw0SE9UTGtQNFVxbW1XQnpoRGNKdWlCVUNNNXZDUjNBUVBSK0FrVUJ2REJVM254M21jc3F4a29tVWVTWQpTbWpHMU5NR016UUlDYnBFc0lKZktaMVVROE9tZjNyS3NhZ2RWaWMzZVB3U2tMaU1Dcm9EeHNNZVZDQjBNUHhXCnFjRXJHcUJ6MlNHczljK2toM05Gek5sd1FRMHZwVUlPVlFxVTRvL1RJVEdlNXRJSnpFNURTeXA4RGR6bmhsaU4KY1JleWVGZWo4d2g0Q2V0T3dCM3hqVDdTdGIzK3hUV0pIUkpUM2haYW1kLy9JNHZFcThhMmMrUHV1RGZJRUdlTgo0K3BlTDUyb2Y0MzBKTXdIVWxsZTl0RlJiS0NkaWt6dEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVW9lcHIvakhWZ3Y1N3BDUC91TXpMY3ovaTE1RXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUlOSHNjN1dja3QrWkVvcjNMaUMxc1dZS09SdGp6eFJad04vUEhGU1Q3eVU2dTF6TWhOSjFvU2hQUTNnCk00NStPWHZsWll0cGhrM2RmMHEzdVhDanJMVkgyampFUFVXNW16OVNZSjZESkxDWW9vR2xKVExNcmhMNkVIVjIKQ0ZXUWpvbU5jalllWkxTOGc1U0RNS3oxR1ozb044MW11MVNXZ0k4TGdDak94MUFxSllDd1p5Y3NhWDhBQ2IwRApGUnBUVWI0M0pGM2gzUFVkdnIvd3VXZ3Q2aVlaam5Nemx4bFdyZzNsYllTaENocmIrWmgxbVdBR0VHNks0QW53CjVPVUhmQjlTZ1d2SnBMTDRsWER0dnFHVlRWVXpSNklhQU84WDBaNDM5WkNvZFBjUGdoaXl5NDZDdzdJbFo2b00KcklEOTVtZkxiRGhCeDdmMFRkUnpJeEtETDZ3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-kuma-io-v1alpha1
  failurePolicy: Fail
  name: validator.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - circuitbreakers
    - dataplanes
    - externalservices
    - faultinjections
    - healthchecks
    - retries
    - meshes
    - proxytemplates
    - ratelimits
    - trafficlogs
    - trafficpermissions
    - trafficroutes
    - traffictraces
    - virtualoutbounds
    - zones
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU5GUzRibllaZFFGaXVqRHBDM1NtT2N3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTNNek5hRncwek1UQTRNall4TmpBMwpNek5hTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEQVZSTmFTc0ZIcUQxSis5blIwVDU2eEJuOUJIT25jUVppaXZ2bmhDZlMweGZXQ0xnaFM3MlkKMFdjSkw0SE9UTGtQNFVxbW1XQnpoRGNKdWlCVUNNNXZDUjNBUVBSK0FrVUJ2REJVM254M21jc3F4a29tVWVTWQpTbWpHMU5NR016UUlDYnBFc0lKZktaMVVROE9tZjNyS3NhZ2RWaWMzZVB3U2tMaU1Dcm9EeHNNZVZDQjBNUHhXCnFjRXJHcUJ6MlNHczljK2toM05Gek5sd1FRMHZwVUlPVlFxVTRvL1RJVEdlNXRJSnpFNURTeXA4RGR6bmhsaU4KY1JleWVGZWo4d2g0Q2V0T3dCM3hqVDdTdGIzK3hUV0pIUkpUM2haYW1kLy9JNHZFcThhMmMrUHV1RGZJRUdlTgo0K3BlTDUyb2Y0MzBKTXdIVWxsZTl0RlJiS0NkaWt6dEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVW9lcHIvakhWZ3Y1N3BDUC91TXpMY3ovaTE1RXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUlOSHNjN1dja3QrWkVvcjNMaUMxc1dZS09SdGp6eFJad04vUEhGU1Q3eVU2dTF6TWhOSjFvU2hQUTNnCk00NStPWHZsWll0cGhrM2RmMHEzdVhDanJMVkgyampFUFVXNW16OVNZSjZESkxDWW9vR2xKVExNcmhMNkVIVjIKQ0ZXUWpvbU5jalllWkxTOGc1U0RNS3oxR1ozb044MW11MVNXZ0k4TGdDak94MUFxSllDd1p5Y3NhWDhBQ2IwRApGUnBUVWI0M0pGM2gzUFVkdnIvd3VXZ3Q2aVlaam5Nemx4bFdyZzNsYllTaENocmIrWmgxbVdBR0VHNks0QW53CjVPVUhmQjlTZ1d2SnBMTDRsWER0dnFHVlRWVXpSNklhQU84WDBaNDM5WkNvZFBjUGdoaXl5NDZDdzdJbFo2b00KcklEOTVtZkxiRGhCeDdmMFRkUnpJeEtETDZ3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-v1-service
  failurePolicy: Ignore
  name: service.validator.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU5GUzRibllaZFFGaXVqRHBDM1NtT2N3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEE0TWpneE5qQTNNek5hRncwek1UQTRNall4TmpBMwpNek5hTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFEQVZSTmFTc0ZIcUQxSis5blIwVDU2eEJuOUJIT25jUVppaXZ2bmhDZlMweGZXQ0xnaFM3MlkKMFdjSkw0SE9UTGtQNFVxbW1XQnpoRGNKdWlCVUNNNXZDUjNBUVBSK0FrVUJ2REJVM254M21jc3F4a29tVWVTWQpTbWpHMU5NR016UUlDYnBFc0lKZktaMVVROE9tZjNyS3NhZ2RWaWMzZVB3U2tMaU1Dcm9EeHNNZVZDQjBNUHhXCnFjRXJHcUJ6MlNHczljK2toM05Gek5sd1FRMHZwVUlPVlFxVTRvL1RJVEdlNXRJSnpFNURTeXA4RGR6bmhsaU4KY1JleWVGZWo4d2g0Q2V0T3dCM3hqVDdTdGIzK3hUV0pIUkpUM2haYW1kLy9JNHZFcThhMmMrUHV1RGZJRUdlTgo0K3BlTDUyb2Y0MzBKTXdIVWxsZTl0RlJiS0NkaWt6dEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVW9lcHIvakhWZ3Y1N3BDUC91TXpMY3ovaTE1RXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUlOSHNjN1dja3QrWkVvcjNMaUMxc1dZS09SdGp6eFJad04vUEhGU1Q3eVU2dTF6TWhOSjFvU2hQUTNnCk00NStPWHZsWll0cGhrM2RmMHEzdVhDanJMVkgyampFUFVXNW16OVNZSjZESkxDWW9vR2xKVExNcmhMNkVIVjIKQ0ZXUWpvbU5jalllWkxTOGc1U0RNS3oxR1ozb044MW11MVNXZ0k4TGdDak94MUFxSllDd1p5Y3NhWDhBQ2IwRApGUnBUVWI0M0pGM2gzUFVkdnIvd3VXZ3Q2aVlaam5Nemx4bFdyZzNsYllTaENocmIrWmgxbVdBR0VHNks0QW53CjVPVUhmQjlTZ1d2SnBMTDRsWER0dnFHVlRWVXpSNklhQU84WDBaNDM5WkNvZFBjUGdoaXl5NDZDdzdJbFo2b00KcklEOTVtZkxiRGhCeDdmMFRkUnpJeEtETDZ3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-v1-secret
  failurePolicy: Ignore
  name: secret.validator.kuma-admission.kuma.io
  namespaceSelector:
    matchLabels:
      kuma.io/system-namespace: "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - secrets
  sideEffects: None
