apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: circuitbreakers.kuma.io
spec:
  group: kuma.io
  names:
    kind: CircuitBreaker
    plural: circuitbreakers
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: CircuitBreaker is the Schema for the circuitbreaker API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: dataplaneinsights.kuma.io
spec:
  group: kuma.io
  names:
    kind: DataplaneInsight
    plural: dataplaneinsights
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: DataplaneInsight is the Schema for the dataplane insights API
        properties:
          mesh:
            type: string
          status:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: dataplanes.kuma.io
spec:
  group: kuma.io
  names:
    kind: Dataplane
    plural: dataplanes
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Dataplane is the Schema for the dataplanes API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: externalservices.kuma.io
spec:
  group: kuma.io
  names:
    kind: ExternalService
    plural: externalservices
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: faultinjections.kuma.io
spec:
  group: kuma.io
  names:
    kind: FaultInjection
    plural: faultinjections
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FaultInjection is the Schema for the faultinjections API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: healthchecks.kuma.io
spec:
  group: kuma.io
  names:
    kind: HealthCheck
    plural: healthchecks
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HealthCheck is the Schema for the healthchecks API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: meshes.kuma.io
spec:
  group: kuma.io
  names:
    kind: Mesh
    plural: meshes
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Mesh is the Schema for the meshes API
        properties:
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: meshinsights.kuma.io
spec:
  group: kuma.io
  names:
    kind: MeshInsight
    plural: meshinsights
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MeshInsight is the Schema for the meshes insights API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: proxytemplates.kuma.io
spec:
  group: kuma.io
  names:
    kind: ProxyTemplate
    plural: proxytemplates
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ProxyTemplate is the Schema for the proxytemplates API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: ratelimits.kuma.io
spec:
  group: kuma.io
  names:
    kind: RateLimit
    plural: ratelimits
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RateLimit is the Schema for the ratelimits API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: retries.kuma.io
spec:
  group: kuma.io
  names:
    kind: Retry
    plural: retries
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Retry is the Schema for the retries API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: serviceinsights.kuma.io
spec:
  group: kuma.io
  names:
    kind: ServiceInsight
    plural: serviceinsights
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServiceInsight is the Schema for the services insights API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: timeouts.kuma.io
spec:
  group: kuma.io
  names:
    kind: Timeout
    plural: timeouts
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Timeout is the Schema for the timeout API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: trafficlogs.kuma.io
spec:
  group: kuma.io
  names:
    kind: TrafficLog
    plural: trafficlogs
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TrafficLog is the Schema for the trafficlogs API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: trafficpermissions.kuma.io
spec:
  group: kuma.io
  names:
    kind: TrafficPermission
    plural: trafficpermissions
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TrafficPermission is the Schema for the trafficpermissions API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: trafficroutes.kuma.io
spec:
  group: kuma.io
  names:
    kind: TrafficRoute
    plural: trafficroutes
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TrafficRoute is the Schema for the trafficroutes API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: traffictraces.kuma.io
spec:
  group: kuma.io
  names:
    kind: TrafficTrace
    plural: traffictraces
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: TrafficTrace is the Schema for the traffictraces API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: virtualoutbounds.kuma.io
spec:
  group: kuma.io
  names:
    kind: VirtualOutbound
    plural: virtualoutbounds
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VirtualOutbound is the Schema for the virtualoutbounds API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: zoneingresses.kuma.io
spec:
  group: kuma.io
  names:
    kind: ZoneIngress
    plural: zoneingresses
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ZoneIngress is the Schema for the zone ingress API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: zoneingressinsights.kuma.io
spec:
  group: kuma.io
  names:
    kind: ZoneIngressInsight
    plural: zoneingressinsights
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ZoneIngressInsight is the Schema for the zone ingress insight
          API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: zoneinsights.kuma.io
spec:
  group: kuma.io
  names:
    kind: ZoneInsight
    plural: zoneinsights
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ZoneInsight is the Schema for the zone insight API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: zones.kuma.io
spec:
  group: kuma.io
  names:
    kind: Zone
    plural: zones
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Zone is the Schema for the zone API
        properties:
          mesh:
            type: string
          spec:
            type: object
            x-kubernetes-preserve-unknown-fields: true
        type: object
    served: true
    storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-ingress
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-patch-ns-job
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-pre-delete-job
  namespace: kuma-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-install-missing-crds
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
  namespace: kuma-system
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-patch-ns-job
  namespace: kuma-system
rules:
- apiGroups:
  - ""
  resourceNames:
  - kuma-system
  resources:
  - namespaces
  verbs:
  - get
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  - configmaps
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - kuma.io
  resources:
  - dataplanes
  - dataplaneinsights
  - meshes
  - zones
  - zoneinsights
  - zoneingresses
  - zoneingressinsights
  - meshinsights
  - serviceinsights
  - proxytemplates
  - ratelimits
  - trafficpermissions
  - trafficroutes
  - timeouts
  - retries
  - circuitbreakers
  - virtualoutbounds
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - kuma.io
  resources:
  - externalservices
  - faultinjections
  - healthchecks
  - trafficlogs
  - traffictraces
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - pods/finalizers
  verbs:
  - '*'
- apiGroups:
  - kuma.io
  resources:
  - meshes/finalizers
  verbs:
  - '*'
- apiGroups:
  - kuma.io
  resources:
  - dataplanes/finalizers
  verbs:
  - '*'
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-install-missing-crds
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - list
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-pre-delete-job
rules:
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - kuma-validating-webhook-configuration
  resources:
  - validatingwebhookconfigurations
  verbs:
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kuma-control-plane
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kuma-control-plane
subjects:
- kind: ServiceAccount
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-patch-ns-job
  namespace: kuma-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-patch-ns-job
subjects:
- kind: ServiceAccount
  name: kuma-patch-ns-job
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-control-plane
subjects:
- kind: ServiceAccount
  name: kuma-control-plane
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-install-missing-crds
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-install-missing-crds
subjects:
- kind: ServiceAccount
  name: kuma-install-missing-crds
  namespace: kuma-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-pre-delete-job
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kuma-pre-delete-job
subjects:
- kind: ServiceAccount
  name: kuma-pre-delete-job
  namespace: kuma-system
---
apiVersion: v1
data:
  config.yaml: |
    # use this file to override default configuration of `kuma-cp`
    #
    # see conf/kuma-cp.conf.yml for available settings
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane-config
  namespace: kuma-system
---
apiVersion: v1
data:
  install_missing_crds.sh: |
    #!/usr/bin/env sh

    if [ -s /kuma/missing/crds.yaml ]; then
      echo "/kuma/missing/crds.yaml found and is not empty, adding crds"
      kubectl create -f /kuma/missing/crds.yaml
    else
      echo "/kuma/missing/crds.yaml not found or empty, it looks like there is no missing crds"
    fi
  save_missing_crds.sh: |
    #!/usr/bin/env sh

    missing_crds="$(kumactl install crds --only-missing)"

    if [ -n "${missing_crds}" ]; then
      echo "found missing crds - saving to /kuma/missing/crds.yaml"
      echo "${missing_crds}" > /kuma/missing/crds.yaml
    fi
kind: ConfigMap
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
    helm.sh/hook-weight: "-1"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-install-missing-crds-scripts
  namespace: kuma-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtKOS9BRnd6MEd4TTQ2d3FzM1dncHN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEV4TURnd01URTBOVGxhRncwek1URXhNRFl3TVRFMApOVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFERThPcWk5Q1d2VElQU3pxcEFScy92Ty9DM0ZHS0pTK2M1R2tmdXFWbVl1NEFoL1dLWmN1ZmkKeWdJY1dsZEFHVGZFbG82dkFtVUU1V3p0OG1zNWd5dVZBaExjektkb20zTURCTXBNMjFuQ2VCdWRVZWhISjFWLwpGeEtQbmZyNnliL1h0dVRiakxjbFRnNFZLTEd3cW51bHEyY3V0RnQzRnFCS1JITVZYRUJRdC9vOWtHcG5oREVICkVrS3VpUmlOT3I2NS9LRngvYVJLVk1xT2FiekZKbjhka1V0NkFxVDdvWlQvUGVFczg4TytqdlZLWXJSZ3ZkQnoKcG5lbTNBMm4yU2x1NnhtV3NzT1pxWk1aOElXTVhMb2tIN3BXd0tOa1YwSUU4ZkZiY3JXZG5xb3BxejhZVG5PUQprRnlyQ1lyV0Z5QTdRL3N6b1lHNTRaelhLWHZTeWFUZEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVAyanBtd3hrWVlvWlBMUUMrVjFsbDY1by9NRXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUdOY2FFc3E1SitZWG9UVmt6L1RDV2JEMUxobVErUEpVUGIwckRnZzlLU3lvZ2lDR3lkOGpCYnNEdEZPCllXWFRxQkFoeHQ2TUdERzRWRXRvU21nVWJ4SFFzZTY2aWk1VGZ3V0RsZVRqeUhGRURvcWtad0wwTTAyY2Q5WDQKcVZUU3g5TUFRajN6YWhKRUZJT2txclhGY3Y1T2VLUUVYUzkxZWR0RlpXZWFXYUlKS04ydmhSWFhXU1E1dWwrLwpIc3g4T1hvOU1FL0ZVYmtaaldMYWtMb0dpdmhHZmlpN09UZTd2WCtZbFEwVkxhd1RIM1hnYWVkTUFiMW4wc0hoCit2R2xLMXV6NXE0U0UrQnB6cVB0M3prK0hkYktSTkZoMXlBaVVvNHJXZ3NaYXNGZXdiTDhhV1VKUHBYY1RpNzYKZFZmaU5qQmNxWGwzdlV2TnhzUU1NOWtxNzFzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURhakNDQWxLZ0F3SUJBZ0lRQU1tSzBmdzlEK2RPQ0lOMjdLeTExakFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFERXdkcmRXMWhMV05oTUI0WERUSXhNVEV3T0RBeE1UUTFPVm9YRFRNeE1URXdOakF4TVRRMQpPVm93SFRFYk1Ca0dBMVVFQXhNU2EzVnRZUzFqYjI1MGNtOXNMWEJzWVc1bE1JSUJJakFOQmdrcWhraUc5dzBCCkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdNaEhVZXpaWk4rWllkaU5iSEtQVnJLWXdNMHpZSWdnMWJJeVRYU0gKUzVaSTJaWGg2OTE1ZUdsamhNbExYMEZVREx5YlJHWGJUS3Q1K3FxTzN6cHNsVVVkUmliRi9MNmRaS3c1Uk9XQgpOOWVQK2xlckFaWGpjM1RXTXBzWFhCMThxMHFYbm5XSmp5WnhQTGxPcUJIOEtwaHQ2UFpvQ2tLSnBiNkRKVHFPCmpNYmQxMmsyZEEzUytEWERJRFJ4ZlRxQ3IrMERoVGd1eTAyaUY4ZHZCQnV0Skl6RnFMZHcxRzNZa1FBV3V0V1IKR252TWFaSnY3RURSOXlsZFpLdmR5RHIwT3A5SmIrRGlEV1J1cE0yZlA5UERWbEV5UkZvMnNobTc4UFVKOUdHZwpPU2NwaGYrK01Qc1R0WDlkRUJXSjFOVkE0Z2x0RHYrMytZTVBvR1AwVk8wT2p3SURBUUFCbzRHd01JR3RNQTRHCkExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWUQKVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUS9hT21iREdSaGloazh0QUw1WFdXWHJtajh3VEJOQmdOVgpIUkVFUmpCRWdoNXJkVzFoTFdOdmJuUnliMnd0Y0d4aGJtVXVhM1Z0WVMxemVYTjBaVzJDSW10MWJXRXRZMjl1CmRISnZiQzF3YkdGdVpTNXJkVzFoTFhONWMzUmxiUzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGVUIKVWk2SDZmbWpMVE1uUEJ3U2hLTU5CZlAvcnVoblVxSUkxa1JnZFNKajllTEsyd3pCUFBzaTZJRXZKZlcrM0QwUwp6R3JxaXl0UGZlZmNIMnczYTVFYkV5T1MwcGJMKzEvOGFJMldnSmR1V3pQSlZhMDhheW5kbjlocTRpa3V1TVVXCjdhSkhLWHpqYWV3MTlWZGo2TnA2WE9wT0EybThoc1R5NVlKd3dGNjRSU3lXQ1lsOTlyVnNUdWFNZStXM0F6NXoKMTdLbVdNQ3VqVGY5dWFSUFl4bHJ0QWdwSEk1b0g4a05HN0lSZ0trWmtoWkRSU2thVU8zQnBKS1JseVh0SmloTgpwR1VzbHkzSklkcG9jZ3MwalhERWZFWFova1hYWGJsck9wMFdQdDN4czkyYlhmbkQ2MDRtQjVrS01GdDNsK3RyCm83Mm5HV1I0ZzRqelBXeWg2YUk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBd01oSFVlelpaTitaWWRpTmJIS1BWcktZd00wellJZ2cxYkl5VFhTSFM1WkkyWlhoCjY5MTVlR2xqaE1sTFgwRlVETHliUkdYYlRLdDUrcXFPM3pwc2xVVWRSaWJGL0w2ZFpLdzVST1dCTjllUCtsZXIKQVpYamMzVFdNcHNYWEIxOHEwcVhubldKanlaeFBMbE9xQkg4S3BodDZQWm9Da0tKcGI2REpUcU9qTWJkMTJrMgpkQTNTK0RYRElEUnhmVHFDciswRGhUZ3V5MDJpRjhkdkJCdXRKSXpGcUxkdzFHM1lrUUFXdXRXUkdudk1hWkp2CjdFRFI5eWxkWkt2ZHlEcjBPcDlKYitEaURXUnVwTTJmUDlQRFZsRXlSRm8yc2htNzhQVUo5R0dnT1NjcGhmKysKTVBzVHRYOWRFQldKMU5WQTRnbHREdiszK1lNUG9HUDBWTzBPandJREFRQUJBb0lCQUMxa090N0FYT09TZm1QNgpnRG9qc3pwZnJQWGdteE5FbWk2VzJaOUJLOFlSYWEvSnlic21sNzVSV2p4ZXhSOTFtMXV3WVFLMjFPNzFoVEFQClRycWk0QVE1bE0zNnZTMW9tRmltOElrWFhOaVFLZmR4QXZQSm5oZUdVQlQwVFlqRDdLSE1XMnpWRWdHaHRKSHUKcytXQTdwWDg5QXdoVUpmeDJNVXMyV1kvcG1iZzE1SDVUN1hCZGtQUDAvMXgzSHJlU3NocnhvVE5RQTcxQWZCcwordzFwbzhCRE0yaWV6djVYdmZueWZVdEFZTXBydHVwT3RsNlpXNjNhOVVwOHVXcTdqb1dJRlkwTjhoMkRUUlRUCjQzUmhST1FBWEtPMzd0Z2twVGJPVDBCZ0oxS09US0N2VmVPZjl0L3FCdGJmd2MxelM3YkVYK3RYdGtqdFFGdGIKRHVCRmE5RUNnWUVBMVd5Q0w5ZFF3MitHYnBuRERwUXpCVEpMWUlFZjl6ZlZKQjdsLytYT2RDcVlOTTg3VUxsVQpvWW52QkFuWGp4L2U2SVpubHg5ZzlEODZOOFBrWHdNNkJKQ3A4M3ZFZm9kdUs3TFRNWTdBOURuaytLR0xuL1FDCk9sZlZwM2FyQlcwN2pFbHZCQUVLZjF1d2hxaFhuYmdhNlpvWXB1OC9vSkV4NkxPN3g4Z1B3SWtDZ1lFQTV6MmQKSDJuRmNETCsvNkUwZkYwaE5lQm1IT2pia1FKYlpSejdVclcwK1QxQy9mczk2MTBoaWE4ZGo2OUJkajZ3azdEbgo2V0tXUkxCZ0NoVFBNYzBSRzNHQ1dXYm53elRwdWVqcnJPRGo4QlpoTzJCbmhjVU5MbXpSazZjRUFIOTY0ZHBlCnJyRHBwemN6OE9KdWRpL3J2a0VGWWtZTDBIVklEbGc0TUJRVm9GY0NnWUFTcVBRUS9zQmU5Z2RJOEVTdnA2RjIKV05saVRLZmcwNDdkSTU1MGEwRkx3dFdmK0daMVBsNzU2TGR2SVBVcDNGMSs4eEZua3lURTlpbys2ZSt6cHZLUgpwNXhVWDRQa2xDNjd2MXpidm1GOGVQdGVDYkhOZ0dZWmQ4aUVaY202SmJ6SkhUcUpuUld2NFBKa001L0ZlRzFSCjgxa29iMDZlMlZNRng0RXBqSUprRVFLQmdBb3pXcG9ISlhHRW5tRVNjR2xJQm00RS94d3BYWDR4RjIwSGNVSzkKeDBUelllQW9WQnZzMk16bEQ2M0Y4bUpQODZRZ09xcTk4WmtJR3NSM0ZJakMzZzFTM1lncUZQRTBoVmJ4SW14Vwo0MWMwOVljVUFwMFJDenJRREJLeVhHZlZOOHQ4d1k1OU9XRnArdjJXVDM4aE1Bb05manBPa3JqWVk1eFdZZXdsCkJxc3pBb0dBRUFxQkZDeXBiU1BIQk11ZWo2Y2lUa3VXOWJiWkwvejA0ZnVOOUZtZ2JGTFM4UXR1YkxPckFDN24Kdm8zNURuR2gzZ0NwWW1ia0pEdHF1VHZnUEpjUm1yQXV5bk43L1AyTTFvc0kzTEhQYlQvcTJGYWp3UXAxWXVyaQpFNk9jdGJXS08vZWUyOGd5RFcrcHJyMXJkU3FyYmhMdDZadzdicHZPZVBVM2dsajd0NTQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-tls-cert
  namespace: kuma-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "5680"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
  namespace: kuma-system
spec:
  ports:
  - name: http-api-server
    port: 5681
  - name: https-api-server
    port: 5682
  - name: https-admission-server
    port: 443
    targetPort: 5443
  - name: mads-server
    port: 5676
  - name: dp-server
    port: 5678
  - name: dns-server
    port: 5653
    protocol: UDP
  selector:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/name: kuma
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-ingress
  namespace: kuma-system
spec:
  ports:
  - port: 10001
    protocol: TCP
    targetPort: 10001
  selector:
    app: kuma-ingress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/name: kuma
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kuma-control-plane
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-control-plane
  namespace: kuma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-control-plane
      app.kubernetes.io/instance: kuma
      app.kubernetes.io/name: kuma
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        checksum/config: 003c3e67518c0669b2aa9b652d392cb44ea07d671f5180cc1596fbeb44a7110d
        checksum/tls-secrets: 02126855e02b5956f1878958670c6e3410e78dde1ea87ce9ef6e8aa5d746595a
      labels:
        app: kuma-control-plane
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/name: kuma
    spec:
      containers:
      - args:
        - run
        - --log-level=info
        - --config-file=/etc/kuma.io/kuma-control-plane/config.yaml
        env:
        - name: KUMA_API_SERVER_READ_ONLY
          value: "true"
        - name: KUMA_DEFAULTS_SKIP_MESH_CREATION
          value: "false"
        - name: KUMA_DP_SERVER_HDS_ENABLED
          value: "false"
        - name: KUMA_ENVIRONMENT
          value: kubernetes
        - name: KUMA_GENERAL_TLS_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/tls.crt
        - name: KUMA_GENERAL_TLS_KEY_FILE
          value: /var/run/secrets/kuma.io/tls-cert/tls.key
        - name: KUMA_INJECTOR_INIT_CONTAINER_IMAGE
          value: docker.io/kumahq/kuma-init:1.3.1
        - name: KUMA_MODE
          value: zone
        - name: KUMA_MULTIZONE_ZONE_GLOBAL_ADDRESS
          value: grpcs://100.100.100.100:5685
        - name: KUMA_MULTIZONE_ZONE_NAME
          value: TODO
        - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_CERT_DIR
          value: /var/run/secrets/kuma.io/tls-cert
        - name: KUMA_RUNTIME_KUBERNETES_ADMISSION_SERVER_PORT
          value: "5443"
        - name: KUMA_RUNTIME_KUBERNETES_CONTROL_PLANE_SERVICE_NAME
          value: kuma-control-plane
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CA_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/ca.crt
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_CNI_ENABLED
          value: "false"
        - name: KUMA_RUNTIME_KUBERNETES_INJECTOR_SIDECAR_CONTAINER_IMAGE
          value: docker.io/kumahq/kuma-dp:1.3.1
        - name: KUMA_STORE_KUBERNETES_SYSTEM_NAMESPACE
          value: kuma-system
        - name: KUMA_STORE_TYPE
          value: kubernetes
        image: docker.io/kumahq/kuma-cp:1.3.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthy
            port: 5680
        name: control-plane
        ports:
        - containerPort: 5681
        - containerPort: 5682
        - containerPort: 5443
        - containerPort: 5678
        - containerPort: 5653
          protocol: UDP
        readinessProbe:
          httpGet:
            path: /ready
            port: 5680
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/run/secrets/kuma.io/tls-cert
          name: general-tls-cert
          readOnly: true
        - mountPath: /etc/kuma.io/kuma-control-plane
          name: kuma-control-plane-config
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      serviceAccountName: kuma-control-plane
      volumes:
      - name: general-tls-cert
        secret:
          secretName: kuma-tls-cert
      - configMap:
          name: kuma-control-plane-config
        name: kuma-control-plane-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: kuma-ingress
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-ingress
  namespace: kuma-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kuma-ingress
      app.kubernetes.io/instance: kuma
      app.kubernetes.io/name: kuma
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      annotations:
        kuma.io/ingress: enabled
      labels:
        app: kuma-ingress
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/name: kuma
    spec:
      containers:
      - args:
        - run
        - --log-level=info
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUMA_CONTROL_PLANE_URL
          value: https://kuma-control-plane.kuma-system:5678
        - name: KUMA_CONTROL_PLANE_CA_CERT_FILE
          value: /var/run/secrets/kuma.io/tls-cert/ca.crt
        - name: KUMA_DATAPLANE_NAME
          value: $(POD_NAME).$(POD_NAMESPACE)
        - name: KUMA_DATAPLANE_ADMIN_PORT
          value: "9901"
        - name: KUMA_DATAPLANE_DRAIN_TIME
          value: 30s
        - name: KUMA_DATAPLANE_RUNTIME_TOKEN_PATH
          value: /var/run/secrets/kubernetes.io/serviceaccount/token
        - name: KUMA_DATAPLANE_PROXY_TYPE
          value: ingress
        image: docker.io/kumahq/kuma-dp:1.3.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - wget
            - -qO-
            - http://127.0.0.1:9901
          failureThreshold: 12
          initialDelaySeconds: 60
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        name: ingress
        ports:
        - containerPort: 10001
        readinessProbe:
          exec:
            command:
            - wget
            - -qO-
            - http://127.0.0.1:9901
          failureThreshold: 12
          initialDelaySeconds: 1
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 50m
            memory: 64Mi
        volumeMounts:
        - mountPath: /var/run/secrets/kuma.io/tls-cert
          name: kuma-tls-cert
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      serviceAccountName: kuma-ingress
      volumes:
      - name: kuma-tls-cert
        secret:
          secretName: kuma-tls-cert
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "5"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-delete-webhook
  namespace: kuma-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.3.1
        helm.sh/chart: kuma-0.7.1
      name: kuma-delete-webhook
    spec:
      containers:
      - command:
        - kubectl
        - delete
        - ValidatingWebhookConfiguration
        - kuma-validating-webhook-configuration
        image: bitnami/kubectl:1.20
        name: pre-delete-job
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-pre-delete-job
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-upgrade
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-install-missing-crds
  namespace: kuma-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.3.1
        helm.sh/chart: kuma-0.7.1
      name: kuma-install-missing-crds-job
    spec:
      containers:
      - command:
        - /kuma/scripts/install_missing_crds.sh
        image: bitnami/kubectl:1.20
        name: pre-upgrade-job
        volumeMounts:
        - mountPath: /kuma/missing
          name: missing-crds
          readOnly: true
        - mountPath: /kuma/scripts
          name: scripts
          readOnly: true
      initContainers:
      - command:
        - /kuma/scripts/save_missing_crds.sh
        image: docker.io/kumahq/kumactl:1.3.1
        name: pre-upgrade-job-init
        volumeMounts:
        - mountPath: /kuma/missing
          name: missing-crds
        - mountPath: /kuma/scripts
          name: scripts
          readOnly: true
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-install-missing-crds
      volumes:
      - configMap:
          defaultMode: 493
          name: kuma-install-missing-crds-scripts
        name: scripts
      - emptyDir: {}
        name: missing-crds
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: pre-install
    helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded,hook-failed
    helm.sh/hook-weight: "5"
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-patch-ns
  namespace: kuma-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: kuma
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: kuma
        app.kubernetes.io/version: 1.3.1
        helm.sh/chart: kuma-0.7.1
      name: kuma-patch-ns-script
    spec:
      containers:
      - command:
        - kubectl
        - patch
        - namespace
        - kuma-system
        - --type
        - merge
        - --patch
        - '{ "metadata": { "labels": { "kuma.io/system-namespace": "true" } } }'
        image: bitnami/kubectl:1.20
        name: pre-install-job
      nodeSelector:
        kubernetes.io/arch: amd64
        kubernetes.io/os: linux
      restartPolicy: OnFailure
      serviceAccountName: kuma-patch-ns-job
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-admission-mutating-webhook-configuration
  namespace: kuma-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtKOS9BRnd6MEd4TTQ2d3FzM1dncHN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEV4TURnd01URTBOVGxhRncwek1URXhNRFl3TVRFMApOVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFERThPcWk5Q1d2VElQU3pxcEFScy92Ty9DM0ZHS0pTK2M1R2tmdXFWbVl1NEFoL1dLWmN1ZmkKeWdJY1dsZEFHVGZFbG82dkFtVUU1V3p0OG1zNWd5dVZBaExjektkb20zTURCTXBNMjFuQ2VCdWRVZWhISjFWLwpGeEtQbmZyNnliL1h0dVRiakxjbFRnNFZLTEd3cW51bHEyY3V0RnQzRnFCS1JITVZYRUJRdC9vOWtHcG5oREVICkVrS3VpUmlOT3I2NS9LRngvYVJLVk1xT2FiekZKbjhka1V0NkFxVDdvWlQvUGVFczg4TytqdlZLWXJSZ3ZkQnoKcG5lbTNBMm4yU2x1NnhtV3NzT1pxWk1aOElXTVhMb2tIN3BXd0tOa1YwSUU4ZkZiY3JXZG5xb3BxejhZVG5PUQprRnlyQ1lyV0Z5QTdRL3N6b1lHNTRaelhLWHZTeWFUZEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVAyanBtd3hrWVlvWlBMUUMrVjFsbDY1by9NRXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUdOY2FFc3E1SitZWG9UVmt6L1RDV2JEMUxobVErUEpVUGIwckRnZzlLU3lvZ2lDR3lkOGpCYnNEdEZPCllXWFRxQkFoeHQ2TUdERzRWRXRvU21nVWJ4SFFzZTY2aWk1VGZ3V0RsZVRqeUhGRURvcWtad0wwTTAyY2Q5WDQKcVZUU3g5TUFRajN6YWhKRUZJT2txclhGY3Y1T2VLUUVYUzkxZWR0RlpXZWFXYUlKS04ydmhSWFhXU1E1dWwrLwpIc3g4T1hvOU1FL0ZVYmtaaldMYWtMb0dpdmhHZmlpN09UZTd2WCtZbFEwVkxhd1RIM1hnYWVkTUFiMW4wc0hoCit2R2xLMXV6NXE0U0UrQnB6cVB0M3prK0hkYktSTkZoMXlBaVVvNHJXZ3NaYXNGZXdiTDhhV1VKUHBYY1RpNzYKZFZmaU5qQmNxWGwzdlV2TnhzUU1NOWtxNzFzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /default-kuma-io-v1alpha1-mesh
  failurePolicy: Fail
  name: mesh.defaulter.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - meshes
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtKOS9BRnd6MEd4TTQ2d3FzM1dncHN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEV4TURnd01URTBOVGxhRncwek1URXhNRFl3TVRFMApOVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFERThPcWk5Q1d2VElQU3pxcEFScy92Ty9DM0ZHS0pTK2M1R2tmdXFWbVl1NEFoL1dLWmN1ZmkKeWdJY1dsZEFHVGZFbG82dkFtVUU1V3p0OG1zNWd5dVZBaExjektkb20zTURCTXBNMjFuQ2VCdWRVZWhISjFWLwpGeEtQbmZyNnliL1h0dVRiakxjbFRnNFZLTEd3cW51bHEyY3V0RnQzRnFCS1JITVZYRUJRdC9vOWtHcG5oREVICkVrS3VpUmlOT3I2NS9LRngvYVJLVk1xT2FiekZKbjhka1V0NkFxVDdvWlQvUGVFczg4TytqdlZLWXJSZ3ZkQnoKcG5lbTNBMm4yU2x1NnhtV3NzT1pxWk1aOElXTVhMb2tIN3BXd0tOa1YwSUU4ZkZiY3JXZG5xb3BxejhZVG5PUQprRnlyQ1lyV0Z5QTdRL3N6b1lHNTRaelhLWHZTeWFUZEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVAyanBtd3hrWVlvWlBMUUMrVjFsbDY1by9NRXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUdOY2FFc3E1SitZWG9UVmt6L1RDV2JEMUxobVErUEpVUGIwckRnZzlLU3lvZ2lDR3lkOGpCYnNEdEZPCllXWFRxQkFoeHQ2TUdERzRWRXRvU21nVWJ4SFFzZTY2aWk1VGZ3V0RsZVRqeUhGRURvcWtad0wwTTAyY2Q5WDQKcVZUU3g5TUFRajN6YWhKRUZJT2txclhGY3Y1T2VLUUVYUzkxZWR0RlpXZWFXYUlKS04ydmhSWFhXU1E1dWwrLwpIc3g4T1hvOU1FL0ZVYmtaaldMYWtMb0dpdmhHZmlpN09UZTd2WCtZbFEwVkxhd1RIM1hnYWVkTUFiMW4wc0hoCit2R2xLMXV6NXE0U0UrQnB6cVB0M3prK0hkYktSTkZoMXlBaVVvNHJXZ3NaYXNGZXdiTDhhV1VKUHBYY1RpNzYKZFZmaU5qQmNxWGwzdlV2TnhzUU1NOWtxNzFzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /owner-reference-kuma-io-v1alpha1
  failurePolicy: Fail
  name: owner-reference.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - circuitbreakers
    - externalservices
    - faultinjections
    - healthchecks
    - retries
    - proxytemplates
    - ratelimits
    - trafficlogs
    - trafficpermissions
    - trafficroutes
    - traffictraces
    - virtualoutbounds
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtKOS9BRnd6MEd4TTQ2d3FzM1dncHN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEV4TURnd01URTBOVGxhRncwek1URXhNRFl3TVRFMApOVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFERThPcWk5Q1d2VElQU3pxcEFScy92Ty9DM0ZHS0pTK2M1R2tmdXFWbVl1NEFoL1dLWmN1ZmkKeWdJY1dsZEFHVGZFbG82dkFtVUU1V3p0OG1zNWd5dVZBaExjektkb20zTURCTXBNMjFuQ2VCdWRVZWhISjFWLwpGeEtQbmZyNnliL1h0dVRiakxjbFRnNFZLTEd3cW51bHEyY3V0RnQzRnFCS1JITVZYRUJRdC9vOWtHcG5oREVICkVrS3VpUmlOT3I2NS9LRngvYVJLVk1xT2FiekZKbjhka1V0NkFxVDdvWlQvUGVFczg4TytqdlZLWXJSZ3ZkQnoKcG5lbTNBMm4yU2x1NnhtV3NzT1pxWk1aOElXTVhMb2tIN3BXd0tOa1YwSUU4ZkZiY3JXZG5xb3BxejhZVG5PUQprRnlyQ1lyV0Z5QTdRL3N6b1lHNTRaelhLWHZTeWFUZEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVAyanBtd3hrWVlvWlBMUUMrVjFsbDY1by9NRXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUdOY2FFc3E1SitZWG9UVmt6L1RDV2JEMUxobVErUEpVUGIwckRnZzlLU3lvZ2lDR3lkOGpCYnNEdEZPCllXWFRxQkFoeHQ2TUdERzRWRXRvU21nVWJ4SFFzZTY2aWk1VGZ3V0RsZVRqeUhGRURvcWtad0wwTTAyY2Q5WDQKcVZUU3g5TUFRajN6YWhKRUZJT2txclhGY3Y1T2VLUUVYUzkxZWR0RlpXZWFXYUlKS04ydmhSWFhXU1E1dWwrLwpIc3g4T1hvOU1FL0ZVYmtaaldMYWtMb0dpdmhHZmlpN09UZTd2WCtZbFEwVkxhd1RIM1hnYWVkTUFiMW4wc0hoCit2R2xLMXV6NXE0U0UrQnB6cVB0M3prK0hkYktSTkZoMXlBaVVvNHJXZ3NaYXNGZXdiTDhhV1VKUHBYY1RpNzYKZFZmaU5qQmNxWGwzdlV2TnhzUU1NOWtxNzFzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /inject-sidecar
  failurePolicy: Ignore
  name: kuma-injector.kuma.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: kuma
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kuma
    app.kubernetes.io/version: 1.3.1
    helm.sh/chart: kuma-0.7.1
  name: kuma-validating-webhook-configuration
  namespace: kuma-system
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtKOS9BRnd6MEd4TTQ2d3FzM1dncHN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEV4TURnd01URTBOVGxhRncwek1URXhNRFl3TVRFMApOVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFERThPcWk5Q1d2VElQU3pxcEFScy92Ty9DM0ZHS0pTK2M1R2tmdXFWbVl1NEFoL1dLWmN1ZmkKeWdJY1dsZEFHVGZFbG82dkFtVUU1V3p0OG1zNWd5dVZBaExjektkb20zTURCTXBNMjFuQ2VCdWRVZWhISjFWLwpGeEtQbmZyNnliL1h0dVRiakxjbFRnNFZLTEd3cW51bHEyY3V0RnQzRnFCS1JITVZYRUJRdC9vOWtHcG5oREVICkVrS3VpUmlOT3I2NS9LRngvYVJLVk1xT2FiekZKbjhka1V0NkFxVDdvWlQvUGVFczg4TytqdlZLWXJSZ3ZkQnoKcG5lbTNBMm4yU2x1NnhtV3NzT1pxWk1aOElXTVhMb2tIN3BXd0tOa1YwSUU4ZkZiY3JXZG5xb3BxejhZVG5PUQprRnlyQ1lyV0Z5QTdRL3N6b1lHNTRaelhLWHZTeWFUZEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVAyanBtd3hrWVlvWlBMUUMrVjFsbDY1by9NRXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUdOY2FFc3E1SitZWG9UVmt6L1RDV2JEMUxobVErUEpVUGIwckRnZzlLU3lvZ2lDR3lkOGpCYnNEdEZPCllXWFRxQkFoeHQ2TUdERzRWRXRvU21nVWJ4SFFzZTY2aWk1VGZ3V0RsZVRqeUhGRURvcWtad0wwTTAyY2Q5WDQKcVZUU3g5TUFRajN6YWhKRUZJT2txclhGY3Y1T2VLUUVYUzkxZWR0RlpXZWFXYUlKS04ydmhSWFhXU1E1dWwrLwpIc3g4T1hvOU1FL0ZVYmtaaldMYWtMb0dpdmhHZmlpN09UZTd2WCtZbFEwVkxhd1RIM1hnYWVkTUFiMW4wc0hoCit2R2xLMXV6NXE0U0UrQnB6cVB0M3prK0hkYktSTkZoMXlBaVVvNHJXZ3NaYXNGZXdiTDhhV1VKUHBYY1RpNzYKZFZmaU5qQmNxWGwzdlV2TnhzUU1NOWtxNzFzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-kuma-io-v1alpha1
  failurePolicy: Fail
  name: validator.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - kuma.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - circuitbreakers
    - dataplanes
    - externalservices
    - faultinjections
    - healthchecks
    - retries
    - meshes
    - proxytemplates
    - ratelimits
    - trafficlogs
    - trafficpermissions
    - trafficroutes
    - traffictraces
    - virtualoutbounds
    - zones
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtKOS9BRnd6MEd4TTQ2d3FzM1dncHN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEV4TURnd01URTBOVGxhRncwek1URXhNRFl3TVRFMApOVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFERThPcWk5Q1d2VElQU3pxcEFScy92Ty9DM0ZHS0pTK2M1R2tmdXFWbVl1NEFoL1dLWmN1ZmkKeWdJY1dsZEFHVGZFbG82dkFtVUU1V3p0OG1zNWd5dVZBaExjektkb20zTURCTXBNMjFuQ2VCdWRVZWhISjFWLwpGeEtQbmZyNnliL1h0dVRiakxjbFRnNFZLTEd3cW51bHEyY3V0RnQzRnFCS1JITVZYRUJRdC9vOWtHcG5oREVICkVrS3VpUmlOT3I2NS9LRngvYVJLVk1xT2FiekZKbjhka1V0NkFxVDdvWlQvUGVFczg4TytqdlZLWXJSZ3ZkQnoKcG5lbTNBMm4yU2x1NnhtV3NzT1pxWk1aOElXTVhMb2tIN3BXd0tOa1YwSUU4ZkZiY3JXZG5xb3BxejhZVG5PUQprRnlyQ1lyV0Z5QTdRL3N6b1lHNTRaelhLWHZTeWFUZEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVAyanBtd3hrWVlvWlBMUUMrVjFsbDY1by9NRXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUdOY2FFc3E1SitZWG9UVmt6L1RDV2JEMUxobVErUEpVUGIwckRnZzlLU3lvZ2lDR3lkOGpCYnNEdEZPCllXWFRxQkFoeHQ2TUdERzRWRXRvU21nVWJ4SFFzZTY2aWk1VGZ3V0RsZVRqeUhGRURvcWtad0wwTTAyY2Q5WDQKcVZUU3g5TUFRajN6YWhKRUZJT2txclhGY3Y1T2VLUUVYUzkxZWR0RlpXZWFXYUlKS04ydmhSWFhXU1E1dWwrLwpIc3g4T1hvOU1FL0ZVYmtaaldMYWtMb0dpdmhHZmlpN09UZTd2WCtZbFEwVkxhd1RIM1hnYWVkTUFiMW4wc0hoCit2R2xLMXV6NXE0U0UrQnB6cVB0M3prK0hkYktSTkZoMXlBaVVvNHJXZ3NaYXNGZXdiTDhhV1VKUHBYY1RpNzYKZFZmaU5qQmNxWGwzdlV2TnhzUU1NOWtxNzFzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-v1-service
  failurePolicy: Ignore
  name: service.validator.kuma-admission.kuma.io
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  sideEffects: None
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQUtKOS9BRnd6MEd4TTQ2d3FzM1dncHN3RFFZSktvWklodmNOQVFFTEJRQXcKRWpFUU1BNEdBMVVFQXhNSGEzVnRZUzFqWVRBZUZ3MHlNVEV4TURnd01URTBOVGxhRncwek1URXhNRFl3TVRFMApOVGxhTUJJeEVEQU9CZ05WQkFNVEIydDFiV0V0WTJFd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3CmdnRUtBb0lCQVFERThPcWk5Q1d2VElQU3pxcEFScy92Ty9DM0ZHS0pTK2M1R2tmdXFWbVl1NEFoL1dLWmN1ZmkKeWdJY1dsZEFHVGZFbG82dkFtVUU1V3p0OG1zNWd5dVZBaExjektkb20zTURCTXBNMjFuQ2VCdWRVZWhISjFWLwpGeEtQbmZyNnliL1h0dVRiakxjbFRnNFZLTEd3cW51bHEyY3V0RnQzRnFCS1JITVZYRUJRdC9vOWtHcG5oREVICkVrS3VpUmlOT3I2NS9LRngvYVJLVk1xT2FiekZKbjhka1V0NkFxVDdvWlQvUGVFczg4TytqdlZLWXJSZ3ZkQnoKcG5lbTNBMm4yU2x1NnhtV3NzT1pxWk1aOElXTVhMb2tIN3BXd0tOa1YwSUU4ZkZiY3JXZG5xb3BxejhZVG5PUQprRnlyQ1lyV0Z5QTdRL3N6b1lHNTRaelhLWHZTeWFUZEFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDCnBEQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0RBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVAyanBtd3hrWVlvWlBMUUMrVjFsbDY1by9NRXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUdOY2FFc3E1SitZWG9UVmt6L1RDV2JEMUxobVErUEpVUGIwckRnZzlLU3lvZ2lDR3lkOGpCYnNEdEZPCllXWFRxQkFoeHQ2TUdERzRWRXRvU21nVWJ4SFFzZTY2aWk1VGZ3V0RsZVRqeUhGRURvcWtad0wwTTAyY2Q5WDQKcVZUU3g5TUFRajN6YWhKRUZJT2txclhGY3Y1T2VLUUVYUzkxZWR0RlpXZWFXYUlKS04ydmhSWFhXU1E1dWwrLwpIc3g4T1hvOU1FL0ZVYmtaaldMYWtMb0dpdmhHZmlpN09UZTd2WCtZbFEwVkxhd1RIM1hnYWVkTUFiMW4wc0hoCit2R2xLMXV6NXE0U0UrQnB6cVB0M3prK0hkYktSTkZoMXlBaVVvNHJXZ3NaYXNGZXdiTDhhV1VKUHBYY1RpNzYKZFZmaU5qQmNxWGwzdlV2TnhzUU1NOWtxNzFzPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    service:
      name: kuma-control-plane
      namespace: kuma-system
      path: /validate-v1-secret
  failurePolicy: Ignore
  name: secret.validator.kuma-admission.kuma.io
  namespaceSelector:
    matchLabels:
      kuma.io/system-namespace: "true"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - secrets
  sideEffects: None
